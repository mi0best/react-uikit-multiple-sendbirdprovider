import { _ as _extends } from '../_rollupPluginBabelHelpers-e92eb032.js';
import { c as __spreadArray } from '../tslib.es6-c2fb729e.js';
import React__default, { useState, useCallback, useMemo, useContext, createContext } from 'react';
import { K } from '../index-09847c0f.js';
import { n as noop } from '../utils-6c50a6d1.js';
import { Modal } from '../ui/Modal.js';
export { M as MODAL_ROOT, a as ModalRoot } from '../index-04bd1a59.js';
import 'react-dom';
import '../LocalizationContext-287ee149.js';
import '../stringSet-6422c6b9.js';
import '../index-e4277f9c.js';
import '../MediaQueryContext-114ca049.js';
import '../ui/IconButton.js';
import '../ui/Button.js';
import '../index-92741c7e.js';
import 'prop-types';
import '../types-9d43ac6e.js';
import '../ui/Icon.js';

var GlobalModalContext = /*#__PURE__*/createContext({
  openModal: noop
});
var GlobalModalProvider = function (_a) {
  var children = _a.children;
  // Idea from https://dev.to/nurislamov/simple-modals-queue-in-react-4g6c
  var _b = useState([]),
    globalModalQueue = _b[0],
    setGlobalModalQueue = _b[1];
  var openModal = useCallback(function (props) {
    setGlobalModalQueue(function (currentQue) {
      return __spreadArray(__spreadArray([], currentQue, true), [props], false);
    });
  }, []);
  var closeModal = useCallback(function () {
    setGlobalModalQueue(function (currentQue) {
      return currentQue.slice(1);
    });
  }, []);
  var ModalComponent = useMemo(function () {
    return function () {
      return K(globalModalQueue).when(function (q) {
        return q.length === 0;
      }, function () {
        return /*#__PURE__*/React__default.createElement(React__default.Fragment, null);
      }).otherwise(function () {
        var _a = globalModalQueue[0],
          modalProps = _a.modalProps,
          childElement = _a.childElement;
        return /*#__PURE__*/React__default.createElement(Modal, _extends({}, modalProps, {
          className: "sendbird-global-modal ".concat(modalProps === null || modalProps === void 0 ? void 0 : modalProps.className),
          onClose: function () {
            var _a;
            (_a = modalProps === null || modalProps === void 0 ? void 0 : modalProps.onClose) === null || _a === void 0 ? void 0 : _a.call(modalProps);
            closeModal();
          }
        }), childElement({
          closeModal: closeModal
        }));
      });
    };
  }, [globalModalQueue]);
  return /*#__PURE__*/React__default.createElement(GlobalModalContext.Provider, {
    value: {
      openModal: openModal
    }
  }, /*#__PURE__*/React__default.createElement(ModalComponent, null), children);
};
var useGlobalModalContext = function () {
  return useContext(GlobalModalContext);
};

export { GlobalModalProvider, useGlobalModalContext };
//# sourceMappingURL=useModal.js.map
