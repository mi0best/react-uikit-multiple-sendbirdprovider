import React__default from 'react';
import OpenChannelUI from './OpenChannel/components/OpenChannelUI.js';
import { O as OpenChannelProvider } from './OpenChannelProvider-9818f9ed.js';
import './OpenChannel/components/OpenChannelInput.js';
import './LocalizationContext-287ee149.js';
import './stringSet-6422c6b9.js';
import './index-e4277f9c.js';
import './ui/MessageInput.js';
import './_rollupPluginBabelHelpers-e92eb032.js';
import 'prop-types';
import './const-93731a4c.js';
import './const-73db0277.js';
import './ui/IconButton.js';
import './tslib.es6-c2fb729e.js';
import './ui/Button.js';
import './index-92741c7e.js';
import './types-9d43ac6e.js';
import './index-6b3b1eca.js';
import 'dompurify';
import './consts-57c888b9.js';
import './consts-4ec7d640.js';
import './consts-be37687e.js';
import './ui/Icon.js';
import './useSendbirdStateContext.js';
import './withSendbird.js';
import './index-776554c0.js';
import './utils/message/getOutgoingMessageState.js';
import './index-09847c0f.js';
import './tokenize-eae44765.js';
import './OpenChannel/components/FrozenChannelNotification.js';
import './OpenChannel/components/OpenChannelHeader.js';
import './ui/Avatar.js';
import './ui/ImageRenderer.js';
import './uuid-c15b8b3b.js';
import './MediaQueryContext-114ca049.js';
import './ui/PlaceHolder.js';
import './ui/Loader.js';
import './OpenChannel/components/OpenChannelMessageList.js';
import './index-682a192c.js';
import './index-2d27aeef.js';
import './OpenChannel/components/OpenChannelMessage.js';
import './ui/OpenchannelUserMessage.js';
import './ui/ContextMenu.js';
import 'react-dom';
import './ui/SortByRow.js';
import './ui/UserProfile.js';
import './UserProfileContext-2001a468.js';
import './sendbirdSelectors.js';
import './pubSub/topics.js';
import './utils-6c50a6d1.js';
import './utils-fa321757.js';
import './index-686a551d.js';
import './useLongPress-f8655a14.js';
import './ui/OpenChannelAdminMessage.js';
import './ui/OpenchannelOGMessage.js';
import './ui/LinkLabel.js';
import './index-a0638563.js';
import './Message/context.js';
import './ui/MentionLabel.js';
import './ui/OpenchannelThumbnailMessage.js';
import './ui/OpenchannelFileMessage.js';
import './ui/TextButton.js';
import './color-57373b4c.js';
import './ui/DateSeparator.js';
import './index-0f017704.js';
import './index-04bd1a59.js';
import './consts-d9c5f25a.js';
import './ui/Modal.js';
import './stringFormatterUtils-abbe70ba.js';
import './index-494f9e79.js';
import './compareIds-7e517404.js';
import '@sendbird/chat';
import '@sendbird/chat/openChannel';

var OpenChannel = function (props) {
  return /*#__PURE__*/React__default.createElement(OpenChannelProvider, {
    channelUrl: props === null || props === void 0 ? void 0 : props.channelUrl,
    isMessageGroupingEnabled: props === null || props === void 0 ? void 0 : props.isMessageGroupingEnabled,
    queries: props === null || props === void 0 ? void 0 : props.queries,
    messageLimit: props === null || props === void 0 ? void 0 : props.messageLimit,
    onBeforeSendUserMessage: props === null || props === void 0 ? void 0 : props.onBeforeSendUserMessage,
    onBeforeSendFileMessage: props === null || props === void 0 ? void 0 : props.onBeforeSendFileMessage,
    onChatHeaderActionClick: props === null || props === void 0 ? void 0 : props.onChatHeaderActionClick,
    disableUserProfile: props === null || props === void 0 ? void 0 : props.disableUserProfile,
    renderUserProfile: props === null || props === void 0 ? void 0 : props.renderUserProfile,
    onBackClick: props === null || props === void 0 ? void 0 : props.onBackClick
  }, /*#__PURE__*/React__default.createElement(OpenChannelUI, {
    renderMessage: props === null || props === void 0 ? void 0 : props.renderMessage,
    renderHeader: props === null || props === void 0 ? void 0 : props.renderHeader,
    renderInput: props === null || props === void 0 ? void 0 : props.renderInput,
    renderPlaceHolderEmptyList: props === null || props === void 0 ? void 0 : props.renderPlaceHolderEmptyList,
    renderPlaceHolderError: props === null || props === void 0 ? void 0 : props.renderPlaceHolderError,
    renderPlaceHolderLoading: props === null || props === void 0 ? void 0 : props.renderPlaceHolderLoading
  }));
};

export { OpenChannel as default };
//# sourceMappingURL=OpenChannel.js.map
