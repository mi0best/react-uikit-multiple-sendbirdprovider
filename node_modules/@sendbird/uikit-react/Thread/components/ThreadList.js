import React__default, { useMemo } from 'react';
import ThreadListItem from './ThreadListItem.js';
import { useThreadContext } from '../context.js';
import { A as compareMessagesForGrouping } from '../../useSendMultipleFilesMessage-b8256698.js';
import { useSendbirdStateContext } from '../../useSendbirdStateContext.js';
import { isSameDay } from 'date-fns';
import { MessageProvider } from '../../Message/context.js';
import '../../tslib.es6-c2fb729e.js';
import '../../index-2d27aeef.js';
import '../../index-e4277f9c.js';
import '../../LocalizationContext-287ee149.js';
import '../../stringSet-6422c6b9.js';
import '../../ui/DateSeparator.js';
import '../../color-57373b4c.js';
import '../../index-92741c7e.js';
import 'prop-types';
import '../../RemoveMessageModal-007c2f04.js';
import '../../ui/Modal.js';
import 'react-dom';
import '../../utils-6c50a6d1.js';
import '../../index-09847c0f.js';
import '../../index-04bd1a59.js';
import '../../MediaQueryContext-114ca049.js';
import '../../ui/IconButton.js';
import '../../ui/Button.js';
import '../../types-9d43ac6e.js';
import '../../ui/Icon.js';
import '../../stringFormatterUtils-abbe70ba.js';
import '../../index-776554c0.js';
import '../../utils/message/getOutgoingMessageState.js';
import '../../index-0f017704.js';
import '../../_rollupPluginBabelHelpers-e92eb032.js';
import '../../ui/Avatar.js';
import '../../ui/ImageRenderer.js';
import '../../uuid-c15b8b3b.js';
import '../../consts-d9c5f25a.js';
import '../../Channel/components/SuggestedMentionList.js';
import '../../ChannelProvider-9ba5893a.js';
import '../../UserProfileContext-2001a468.js';
import '../../const-73db0277.js';
import '../../utils-aa4086dc.js';
import '@sendbird/chat/message';
import '../../compareIds-7e517404.js';
import '@sendbird/chat/groupChannel';
import '../../pubSub/topics.js';
import '../../resolvedReplyType-fb987595.js';
import '../../const-93731a4c.js';
import '../../withSendbird.js';
import '../context/types.js';
import '@sendbird/chat';
import '../../ui/MessageInput.js';
import '../../index-6b3b1eca.js';
import 'dompurify';
import '../../consts-57c888b9.js';
import '../../consts-4ec7d640.js';
import '../../consts-be37687e.js';
import '../../tokenize-eae44765.js';
import '../../ui/ContextMenu.js';
import '../../ui/SortByRow.js';
import '../../ui/UserProfile.js';
import '../../sendbirdSelectors.js';
import '../../ui/MessageItemMenu.js';
import '../../types-781e0bab.js';
import '../../ui/MessageItemReactionMenu.js';
import '../../ui/ReactionButton.js';
import '../../useLongPress-f8655a14.js';
import '../../index-4b4e9682.js';
import '../../ui/Loader.js';
import '../../index-f8a9cb51.js';
import '../../index-682a192c.js';
import '../../ui/EmojiReactions.js';
import '../../ui/ReactionBadge.js';
import '../../ui/BottomSheet.js';
import '../../ui/UserListItem.js';
import '../../ui/MutedAvatarOverlay.js';
import '../../ui/Checkbox.js';
import '../../ui/Tooltip.js';
import '../../ui/TooltipWrapper.js';
import '../../ui/TextMessageItemBody.js';
import '../../index-a0638563.js';
import '../../ui/MentionLabel.js';
import '../../ui/LinkLabel.js';
import '../../ui/OGMessageItemBody.js';
import '../../ui/FileMessageItemBody.js';
import '../../ui/TextButton.js';
import '../../ui/ThumbnailMessageItemBody.js';
import '../../utils-bfc0ab3b.js';
import '../../ui/UnknownMessageItemBody.js';
import '../../ui/VoiceMessageItemBody.js';
import '../../ui/ProgressBar.js';
import '../../VoicePlayer/useVoicePlayer.js';
import '../../index-e04159fe.js';
import '../../VoiceRecorder/context.js';
import '../../ui/PlaybackTime.js';
import '../../index-c22e4772.js';
import '../../useStatefulFileInfoList-5e68b93f.js';
import '../../Message/hooks/useDirtyGetMentions.js';

function ThreadList(_a) {
  var className = _a.className,
    renderMessage = _a.renderMessage,
    renderCustomSeparator = _a.renderCustomSeparator,
    scrollRef = _a.scrollRef,
    scrollBottom = _a.scrollBottom;
  var config = useSendbirdStateContext().config;
  var replyType = config.replyType,
    userId = config.userId;
  var _b = useThreadContext(),
    currentChannel = _b.currentChannel,
    allThreadMessages = _b.allThreadMessages,
    localThreadMessages = _b.localThreadMessages;
  var MemorizedMessage = useMemo(function () {
    return function (_a) {
      var message = _a.message,
        chainTop = _a.chainTop,
        chainBottom = _a.chainBottom,
        hasSeparator = _a.hasSeparator;
      if (typeof renderMessage === 'function') {
        return renderMessage({
          message: message,
          chainTop: chainTop,
          chainBottom: chainBottom,
          hasSeparator: hasSeparator
        });
      }
      return null;
    };
  }, [renderMessage]);
  return /*#__PURE__*/React__default.createElement("div", {
    className: "sendbird-thread-list ".concat(className)
  }, allThreadMessages.map(function (message, idx) {
    var _a;
    var isByMe = ((_a = message === null || message === void 0 ? void 0 : message.sender) === null || _a === void 0 ? void 0 : _a.userId) === userId;
    var prevMessage = allThreadMessages[idx - 1];
    var nextMessage = allThreadMessages[idx + 1];
    // eslint-disable-next-line no-constant-condition
    var _b = compareMessagesForGrouping(prevMessage, message, nextMessage, currentChannel, replyType) ,
      chainTop = _b[0],
      chainBottom = _b[1];
    var hasSeparator = !((prevMessage === null || prevMessage === void 0 ? void 0 : prevMessage.createdAt) > 0 && isSameDay(message === null || message === void 0 ? void 0 : message.createdAt, prevMessage === null || prevMessage === void 0 ? void 0 : prevMessage.createdAt));
    var handleScroll = function () {
      var current = scrollRef === null || scrollRef === void 0 ? void 0 : scrollRef.current;
      if (current) {
        var bottom = current.scrollHeight - current.scrollTop - current.offsetHeight;
        if (scrollBottom < bottom) {
          current.scrollTop += bottom - scrollBottom;
        }
      }
    };
    return /*#__PURE__*/React__default.createElement(MessageProvider, {
      message: message,
      isByMe: isByMe,
      key: message === null || message === void 0 ? void 0 : message.messageId
    }, MemorizedMessage({
      message: message,
      chainTop: chainTop,
      chainBottom: chainBottom,
      hasSeparator: hasSeparator
    }) || /*#__PURE__*/React__default.createElement(ThreadListItem, {
      message: message,
      chainTop: chainTop,
      chainBottom: chainBottom,
      hasSeparator: hasSeparator,
      renderCustomSeparator: renderCustomSeparator,
      handleScroll: handleScroll
    }));
  }), localThreadMessages.map(function (message, idx) {
    var _a;
    var isByMe = ((_a = message === null || message === void 0 ? void 0 : message.sender) === null || _a === void 0 ? void 0 : _a.userId) === userId;
    var prevMessage = localThreadMessages[idx - 1];
    var nextMessage = localThreadMessages[idx + 1];
    // eslint-disable-next-line no-constant-condition
    var _b = compareMessagesForGrouping(prevMessage, message, nextMessage, currentChannel, replyType) ,
      chainTop = _b[0],
      chainBottom = _b[1];
    var hasSeparator = !((prevMessage === null || prevMessage === void 0 ? void 0 : prevMessage.createdAt) > 0 && isSameDay(message === null || message === void 0 ? void 0 : message.createdAt, prevMessage === null || prevMessage === void 0 ? void 0 : prevMessage.createdAt));
    var handleScroll = function () {
      var current = scrollRef === null || scrollRef === void 0 ? void 0 : scrollRef.current;
      if (current) {
        var bottom = current.scrollHeight - current.scrollTop - current.offsetHeight;
        if (scrollBottom < bottom) {
          current.scrollTop += bottom - scrollBottom;
        }
      }
    };
    return /*#__PURE__*/React__default.createElement(MessageProvider, {
      message: message,
      isByMe: isByMe,
      key: message === null || message === void 0 ? void 0 : message.messageId
    }, MemorizedMessage({
      message: message,
      chainTop: chainTop,
      chainBottom: chainBottom,
      hasSeparator: hasSeparator
    }) || /*#__PURE__*/React__default.createElement(ThreadListItem, {
      message: message,
      hasSeparator: false,
      renderCustomSeparator: renderCustomSeparator,
      handleScroll: handleScroll
    }));
  }));
}

export { ThreadList as default };
//# sourceMappingURL=ThreadList.js.map
