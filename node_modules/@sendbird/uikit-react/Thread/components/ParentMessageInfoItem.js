import React__default, { useMemo, useState } from 'react';
import { u as useLocalization } from '../../LocalizationContext-287ee149.js';
import { y as isUserMessage, G as isEditedMessage, z as getUIKitMessageType, A as getUIKitMessageTypes, Q as getUIKitFileType, R as truncateString, c as isMultipleFilesMessage, d as isVoiceMessage, v as isThumbnailMessage, H as isSentMessage, t as isVideoMessage, x as isGifMessage } from '../../index-776554c0.js';
import { L as Label, a as LabelTypography, b as LabelColors } from '../../index-92741c7e.js';
import ImageRenderer from '../../ui/ImageRenderer.js';
import Icon, { IconTypes, IconColors } from '../../ui/Icon.js';
import TextButton from '../../ui/TextButton.js';
import { useSendbirdStateContext } from '../../useSendbirdStateContext.js';
import EmojiReactions from '../../ui/EmojiReactions.js';
import { useThreadContext } from '../context.js';
import { VoiceMessageItemBody } from '../../ui/VoiceMessageItemBody.js';
import { T as TextFragment } from '../../index-a0638563.js';
import { t as tokenizeMessage } from '../../tokenize-eae44765.js';
import { u as useThreadMessageKindKeySelector, a as useStatefulFileInfoList, M as MultipleFilesMessageItemBody, T as ThreadMessageKind } from '../../useStatefulFileInfoList-5e68b93f.js';
import { u as useMediaQueryContext } from '../../MediaQueryContext-114ca049.js';
import '../../stringSet-6422c6b9.js';
import '../../index-e4277f9c.js';
import '../../tslib.es6-c2fb729e.js';
import '../../utils/message/getOutgoingMessageState.js';
import '../../index-09847c0f.js';
import 'prop-types';
import '../../color-57373b4c.js';
import '../../withSendbird.js';
import '../../ui/ReactionBadge.js';
import '../../ui/ReactionButton.js';
import '../../_rollupPluginBabelHelpers-e92eb032.js';
import '../../useLongPress-f8655a14.js';
import '../../utils-6c50a6d1.js';
import '../../ui/ContextMenu.js';
import 'react-dom';
import '../../ui/SortByRow.js';
import '../../uuid-c15b8b3b.js';
import '../../ui/BottomSheet.js';
import '../../types-9d43ac6e.js';
import '../../index-04bd1a59.js';
import '../../ui/UserListItem.js';
import '../../UserProfileContext-2001a468.js';
import '../../ui/Avatar.js';
import '../../ui/MutedAvatarOverlay.js';
import '../../ui/Checkbox.js';
import '../../ui/UserProfile.js';
import '../../sendbirdSelectors.js';
import '../../pubSub/topics.js';
import '../../ui/Button.js';
import '../../ui/Tooltip.js';
import '../../ui/TooltipWrapper.js';
import '../../Message/context.js';
import '../../useSendMultipleFilesMessage-b8256698.js';
import '../../utils-aa4086dc.js';
import '../../index-2d27aeef.js';
import '@sendbird/chat/message';
import '../context/types.js';
import '@sendbird/chat';
import '@sendbird/chat/groupChannel';
import '../../consts-d9c5f25a.js';
import '../../ui/ProgressBar.js';
import '../../VoicePlayer/useVoicePlayer.js';
import '../../index-e04159fe.js';
import '../../VoiceRecorder/context.js';
import '../../ui/Modal.js';
import '../../ui/IconButton.js';
import '../../ui/PlaybackTime.js';
import '../../ui/Loader.js';
import '../../ui/MentionLabel.js';
import '../../ui/LinkLabel.js';
import '../../index-0f017704.js';

function ParentMessageInfoItem(_a) {
  var _b, _c, _d, _e, _f, _g, _h, _j, _k;
  var className = _a.className,
    message = _a.message,
    showFileViewer = _a.showFileViewer;
  var _l = (useSendbirdStateContext === null || useSendbirdStateContext === void 0 ? void 0 : useSendbirdStateContext()) || {},
    stores = _l.stores,
    config = _l.config,
    eventHandlers = _l.eventHandlers;
  var onPressUserProfileHandler = (_b = eventHandlers === null || eventHandlers === void 0 ? void 0 : eventHandlers.reaction) === null || _b === void 0 ? void 0 : _b.onPressUserProfile;
  var replyType = config.replyType,
    isMentionEnabled = config.isMentionEnabled,
    isReactionEnabled = config.isReactionEnabled;
  var currentUserId = (_d = (_c = stores === null || stores === void 0 ? void 0 : stores.userStore) === null || _c === void 0 ? void 0 : _c.user) === null || _d === void 0 ? void 0 : _d.userId;
  var stringSet = useLocalization().stringSet;
  var _m = useThreadContext(),
    currentChannel = _m.currentChannel,
    emojiContainer = _m.emojiContainer,
    nicknamesMap = _m.nicknamesMap,
    toggleReaction = _m.toggleReaction;
  var isMobile = useMediaQueryContext().isMobile;
  var threadMessageKindKey = useThreadMessageKindKeySelector({
    threadMessageKind: ThreadMessageKind.PARENT,
    isMobile: isMobile
  });
  // For MultipleFilesMessage only.
  var statefulFileInfoList = useStatefulFileInfoList(message);
  var isMentionedMessage = isMentionEnabled && ((_e = message === null || message === void 0 ? void 0 : message.mentionedMessageTemplate) === null || _e === void 0 ? void 0 : _e.length) > 0 && ((_f = message === null || message === void 0 ? void 0 : message.mentionedUsers) === null || _f === void 0 ? void 0 : _f.length) > 0;
  // Emoji reactions
  var isReactionActivated = isReactionEnabled && replyType === 'THREAD' && !(currentChannel === null || currentChannel === void 0 ? void 0 : currentChannel.isSuper) && !(currentChannel === null || currentChannel === void 0 ? void 0 : currentChannel.isBroadcast) && ((_g = message === null || message === void 0 ? void 0 : message.reactions) === null || _g === void 0 ? void 0 : _g.length) > 0;
  var tokens = useMemo(function () {
    if (isMentionedMessage) {
      return tokenizeMessage({
        mentionedUsers: message === null || message === void 0 ? void 0 : message.mentionedUsers,
        messageText: message === null || message === void 0 ? void 0 : message.mentionedMessageTemplate
      });
    }
    return tokenizeMessage({
      messageText: message === null || message === void 0 ? void 0 : message.message
    });
  }, [message === null || message === void 0 ? void 0 : message.updatedAt]);
  // Thumbnail mesage
  var _o = useState(false),
    isImageRendered = _o[0],
    setImageRendered = _o[1];
  var thumbnailUrl = ((_h = message === null || message === void 0 ? void 0 : message.thumbnails) === null || _h === void 0 ? void 0 : _h.length) > 0 ? (_j = message === null || message === void 0 ? void 0 : message.thumbnails[0]) === null || _j === void 0 ? void 0 : _j.url : '';
  return /*#__PURE__*/React__default.createElement("div", {
    className: "sendbird-parent-message-info-item ".concat(className)
  }, isUserMessage(message) && /*#__PURE__*/React__default.createElement(Label, {
    className: "sendbird-parent-message-info-item__text-message",
    type: LabelTypography.BODY_1,
    color: LabelColors.ONBACKGROUND_1
  }, /*#__PURE__*/React__default.createElement(TextFragment, {
    tokens: tokens
  }), isEditedMessage(message) && /*#__PURE__*/React__default.createElement(Label, {
    className: "sendbird-parent-message-info-item__text-message edited",
    type: LabelTypography.BODY_1,
    color: LabelColors.ONBACKGROUND_2
  }, " ".concat(stringSet.MESSAGE_EDITED, " "))), getUIKitMessageType(message) === getUIKitMessageTypes().FILE && /*#__PURE__*/React__default.createElement("div", {
    className: "sendbird-parent-message-info-item__file-message"
  }, /*#__PURE__*/React__default.createElement("div", {
    className: "sendbird-parent-message-info-item__file-message__file-icon"
  }, /*#__PURE__*/React__default.createElement(Icon, {
    className: "sendbird-parent-message-info-item__file-message__file-icon__icon",
    type: {
      IMAGE: IconTypes.PHOTO,
      VIDEO: IconTypes.PLAY,
      AUDIO: IconTypes.FILE_AUDIO,
      GIF: IconTypes.GIF,
      OTHERS: IconTypes.FILE_DOCUMENT
    }[getUIKitFileType(message === null || message === void 0 ? void 0 : message.type)],
    fillColor: IconColors.PRIMARY,
    width: "24px",
    height: "24px"
  })), /*#__PURE__*/React__default.createElement(TextButton, {
    className: "sendbird-parent-message-info-item__file-message__file-name",
    onClick: function () {
      window.open(message === null || message === void 0 ? void 0 : message.url);
    },
    color: LabelColors.ONBACKGROUND_1
  }, /*#__PURE__*/React__default.createElement(Label, {
    className: "sendbird-parent-message-info-item__file-message__file-name__text",
    type: LabelTypography.BODY_1,
    color: LabelColors.ONBACKGROUND_1
  }, truncateString((message === null || message === void 0 ? void 0 : message.name) || (message === null || message === void 0 ? void 0 : message.url), 30)))), isMultipleFilesMessage(message) && /*#__PURE__*/React__default.createElement(MultipleFilesMessageItemBody, {
    className: "sendbird-parent-message-info-item__multiple-files-message-wrapper",
    message: message,
    isByMe: false,
    isReactionEnabled: isReactionEnabled,
    threadMessageKindKey: threadMessageKindKey,
    statefulFileInfoList: statefulFileInfoList
  }), isVoiceMessage(message) && /*#__PURE__*/React__default.createElement("div", {
    className: "sendbird-parent-message-info-item__voice-message"
  }, /*#__PURE__*/React__default.createElement(VoiceMessageItemBody, {
    className: "sendbird-parent-message-info-item__voice-message__item",
    message: message,
    channelUrl: currentChannel === null || currentChannel === void 0 ? void 0 : currentChannel.url,
    isByMe: false,
    isReactionEnabled: isReactionEnabled
  })), isThumbnailMessage(message) && /*#__PURE__*/React__default.createElement("div", {
    className: "sendbird-parent-message-info-item__thumbnail-message",
    onClick: function () {
      if (isSentMessage(message)) {
        showFileViewer(true);
      }
    }
  }, /*#__PURE__*/React__default.createElement(ImageRenderer, {
    className: "sendbird-parent-message-info-item__thumbnail-message__thumbnail",
    url: thumbnailUrl || (message === null || message === void 0 ? void 0 : message.url) || (message === null || message === void 0 ? void 0 : message.plainUrl),
    alt: message === null || message === void 0 ? void 0 : message.type,
    width: "200px",
    height: "148px",
    onLoad: function () {
      setImageRendered(true);
    },
    placeHolder: function (style_) {
      return /*#__PURE__*/React__default.createElement("div", {
        className: "sendbird-parent-message-info-item__thumbnail-message__placeholder",
        style: style_
      }, /*#__PURE__*/React__default.createElement("div", {
        className: "sendbird-parent-message-info-item__thumbnail-message__placeholder__icon"
      }, /*#__PURE__*/React__default.createElement(Icon, {
        type: isVideoMessage(message) ? IconTypes.PLAY : IconTypes.PHOTO,
        fillColor: IconColors.ON_BACKGROUND_2,
        width: "34px",
        height: "34px"
      })));
    }
  }), isVideoMessage(message) && !thumbnailUrl && !isImageRendered && /*#__PURE__*/React__default.createElement("video", {
    className: "sendbird-parent-message-info-item__thumbnail-message__video"
  }, /*#__PURE__*/React__default.createElement("source", {
    src: (message === null || message === void 0 ? void 0 : message.url) || (message === null || message === void 0 ? void 0 : message.plainUrl),
    type: message === null || message === void 0 ? void 0 : message.type
  })), /*#__PURE__*/React__default.createElement("div", {
    className: "sendbird-parent-message-info-item__thumbnail-message__image-cover"
  }), (isVideoMessage(message) || isGifMessage(message)) && /*#__PURE__*/React__default.createElement("div", {
    className: "sendbird-parent-message-info-item__thumbnail-message__icon-wrapper"
  }, /*#__PURE__*/React__default.createElement("div", {
    className: "sendbird-parent-message-info-item__thumbnail-message__icon-wrapper__icon"
  }, /*#__PURE__*/React__default.createElement(Icon, {
    type: isVideoMessage(message) ? IconTypes.PLAY : IconTypes.GIF,
    fillColor: IconColors.ON_BACKGROUND_2,
    width: "34px",
    height: "34px"
  })))), getUIKitMessageType(message) === ((_k = getUIKitMessageTypes === null || getUIKitMessageTypes === void 0 ? void 0 : getUIKitMessageTypes()) === null || _k === void 0 ? void 0 : _k.UNKNOWN) && /*#__PURE__*/React__default.createElement("div", {
    className: "sendbird-parent-message-info-item__unknown-message"
  }, /*#__PURE__*/React__default.createElement(Label, {
    className: "sendbird-parent-message-info-item__unknown-message__header",
    type: LabelTypography.BODY_1,
    color: LabelColors.ONBACKGROUND_1
  }, stringSet.UNKNOWN__UNKNOWN_MESSAGE_TYPE), /*#__PURE__*/React__default.createElement(Label, {
    className: "sendbird-parent-message-info-item__unknown-message__description",
    type: LabelTypography.BODY_1,
    color: LabelColors.ONBACKGROUND_2
  }, stringSet.UNKNOWN__CANNOT_READ_MESSAGE)), isReactionActivated && /*#__PURE__*/React__default.createElement("div", {
    className: "sendbird-parent-message-info__reactions"
  }, /*#__PURE__*/React__default.createElement(EmojiReactions, {
    userId: currentUserId,
    message: message,
    channel: currentChannel,
    isByMe: false,
    emojiContainer: emojiContainer,
    memberNicknamesMap: nicknamesMap,
    toggleReaction: toggleReaction,
    onPressUserProfile: onPressUserProfileHandler
  })));
}

export { ParentMessageInfoItem as default };
//# sourceMappingURL=ParentMessageInfoItem.js.map
