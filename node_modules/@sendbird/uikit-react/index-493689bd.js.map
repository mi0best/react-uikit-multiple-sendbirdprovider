{"version":3,"file":"index-493689bd.js","sources":["../src/ui/VoiceMessageInput/types.ts","../src/ui/VoiceMessageInput/controlerIcons.tsx","../src/ui/VoiceMessageInput/index.tsx"],"sourcesContent":["/* eslint-disable no-redeclare */\nexport const VoiceMessageInputStatus = {\n  READY_TO_RECORD: 'READY_TO_RECORD',\n  RECORDING: 'RECORDING',\n  READY_TO_PLAY: 'READY_TO_PLAY',\n  PLAYING: 'PLAYING',\n} as const;\nexport type VoiceMessageInputStatus = typeof VoiceMessageInputStatus[keyof typeof VoiceMessageInputStatus];\n","import React from 'react';\n\nimport Icon, { IconTypes, IconColors } from '../Icon';\nimport { VoiceMessageInputStatus } from './types';\n\nexport interface ControlerIconProps {\n  inputState?: VoiceMessageInputStatus;\n}\n\nexport const ControlerIcon = ({\n  inputState,\n}: ControlerIconProps): React.ReactElement => {\n  switch (inputState) {\n    case VoiceMessageInputStatus.READY_TO_RECORD: {\n      return (\n        <div className=\"sendbird-controler-icon record-icon\" />\n      );\n    }\n    case VoiceMessageInputStatus.RECORDING: {\n      return (\n        <div className=\"sendbird-controler-icon stop-icon\" />\n      );\n    }\n    case VoiceMessageInputStatus.READY_TO_PLAY: {\n      return (\n        <Icon\n          className=\"sendbird-controler-icon play-icon\"\n          width=\"20px\"\n          height=\"20px\"\n          type={IconTypes.PLAY}\n          fillColor={IconColors.ON_BACKGROUND_1}\n        />\n      );\n    }\n    case VoiceMessageInputStatus.PLAYING: {\n      return (\n        <div className=\"sendbird-controler-icon pause-icon\">\n          <div className=\"sendbird-controler-icon pause-icon-inner\"/>\n          <div className=\"sendbird-controler-icon pause-icon-inner\"/>\n        </div>\n      );\n    }\n    default:\n      return null;\n  }\n};\n\nexport default ControlerIcon;\n","import React, { useCallback, useMemo, useState } from 'react';\nimport './index.scss';\n\nimport PlaybackTime from '../PlaybackTime';\nimport ProgressBar from '../ProgressBar';\nimport TextButton from '../TextButton';\nimport Icon, { IconTypes, IconColors } from '../Icon';\nimport Label, { LabelTypography, LabelColors } from '../Label';\nimport { useLocalization } from '../../lib/LocalizationContext';\nimport ControlerIcon from './controlerIcons';\nimport { VOICE_RECORDER_CLICK_BUFFER_TIME, VOICE_RECORDER_DEFAULT_MIN } from '../../utils/consts';\nimport { VoiceMessageInputStatus } from './types';\n\nexport interface VoiceMessageInputProps {\n  minRecordTime?: number;\n  maximumValue: number;\n  currentValue?: number;\n  currentType: VoiceMessageInputStatus;\n  onCancelClick?: () => void;\n  onControlClick?: (type: VoiceMessageInputStatus) => void;\n  onSubmitClick?: () => void;\n  renderCancelButton?: () => React.ReactElement;\n  renderControlButton?: (type: VoiceMessageInputStatus) => React.ReactElement;\n  renderSubmitButton?: () => React.ReactElement;\n}\n\nexport const VoiceMessageInput = ({\n  minRecordTime = VOICE_RECORDER_DEFAULT_MIN,\n  maximumValue,\n  currentValue = 0,\n  currentType,\n  onCancelClick,\n  onControlClick,\n  onSubmitClick,\n  renderCancelButton,\n  renderControlButton,\n  renderSubmitButton,\n}: VoiceMessageInputProps): React.ReactElement => {\n  const [lastClickTime, setLastClickTime] = useState<number>(0);\n  const isReadyToRecord = useMemo(() => currentType === VoiceMessageInputStatus.READY_TO_RECORD, [currentType]);\n  const isRecording = useMemo(() => currentType === VoiceMessageInputStatus.RECORDING, [currentType]);\n  const isSendButtonDisabled = useMemo(() => {\n    if (currentType === VoiceMessageInputStatus.READY_TO_RECORD\n      || currentType === VoiceMessageInputStatus.RECORDING\n    ) {\n      return minRecordTime > currentValue;\n    }\n    return false;\n  }, [currentType, minRecordTime, currentValue]);\n  const isPlayMode = useMemo(() => {\n    return (\n      currentType === VoiceMessageInputStatus.READY_TO_PLAY\n      || currentType === VoiceMessageInputStatus.PLAYING\n    );\n  }, [currentType]);\n  const { stringSet } = useLocalization();\n\n  const handleOnCancelClick = () => {\n    const currentTime = Date.now();\n    if (currentTime - lastClickTime > VOICE_RECORDER_CLICK_BUFFER_TIME) {\n      onCancelClick();\n      setLastClickTime(currentTime);\n    }\n  };\n  const handleOnControlClick = useCallback(() => {\n    const currentTime = Date.now();\n    if (currentTime - lastClickTime > VOICE_RECORDER_CLICK_BUFFER_TIME) {\n      onControlClick(currentType);\n      setLastClickTime(currentTime);\n    }\n  }, [currentType]);\n  const handleOnSubmitClick = () => {\n    const currentTime = Date.now();\n    if (currentTime - lastClickTime > VOICE_RECORDER_CLICK_BUFFER_TIME) {\n      if (!isSendButtonDisabled) {\n        onSubmitClick();\n      }\n      setLastClickTime(currentTime);\n    }\n  };\n\n  return (\n    <div className=\"sendbird-voice-message-input\">\n      <div className=\"sendbird-voice-message-input__indicator\">\n        <div className=\"sendbird-voice-message-input__indicator__progress-bar\">\n          <ProgressBar\n            className=\"sendbird-voice-message-input__indicator__progress-bar__bar\"\n            disabled={isReadyToRecord}\n            maxSize={maximumValue}\n            currentSize={currentValue}\n          />\n        </div>\n        {(isRecording) ? (<div className=\"sendbird-voice-message-input__indicator__on-rec\" />) : null}\n        <PlaybackTime\n          className=\"sendbird-voice-message-input__indicator__playback-time\"\n          time={isPlayMode ? maximumValue - currentValue : currentValue}\n          labelColor={isReadyToRecord ? LabelColors.ONBACKGROUND_4 : LabelColors.ONCONTENT_1}\n        />\n      </div>\n      <div className=\"sendbird-voice-message-input__controler\">\n        {\n          renderCancelButton?.() || (\n            <TextButton\n              className=\"sendbird-voice-message-input__controler__cancel\"\n              onClick={handleOnCancelClick}\n              disableUnderline\n            >\n              <Label\n                type={LabelTypography.BUTTON_1}\n                color={LabelColors.PRIMARY}\n              >\n                {stringSet.BUTTON__CANCEL}\n              </Label>\n            </TextButton>\n          )\n        }\n        {\n          renderControlButton?.(currentType) || (\n            <div\n              className=\"sendbird-voice-message-input__controler__main\"\n              onClick={handleOnControlClick}\n            >\n              <ControlerIcon inputState={currentType} />\n            </div>\n          )\n        }\n        {\n          renderSubmitButton?.() || (\n            <div\n              className={`sendbird-voice-message-input__controler__submit ${isSendButtonDisabled ? 'voice-message--disabled' : ''}`}\n              onClick={handleOnSubmitClick}\n            >\n              <Icon\n                width=\"19px\"\n                height=\"19px\"\n                type={IconTypes.SEND}\n                fillColor={isSendButtonDisabled ? IconColors.ON_BACKGROUND_4 : IconColors.CONTENT}\n              />\n            </div>\n          )\n        }\n      </div>\n    </div>\n  );\n};\n"],"names":["VoiceMessageInputStatus","READY_TO_RECORD","RECORDING","READY_TO_PLAY","PLAYING","ControlerIcon","_a","inputState","React","createElement","className","Icon","width","height","type","IconTypes","PLAY","fillColor","IconColors","ON_BACKGROUND_1","VoiceMessageInput","_b","minRecordTime","VOICE_RECORDER_DEFAULT_MIN","maximumValue","_c","currentValue","currentType","onCancelClick","onControlClick","onSubmitClick","renderCancelButton","renderControlButton","renderSubmitButton","_d","useState","lastClickTime","setLastClickTime","isReadyToRecord","useMemo","isRecording","isSendButtonDisabled","isPlayMode","stringSet","useLocalization","handleOnCancelClick","currentTime","Date","now","VOICE_RECORDER_CLICK_BUFFER_TIME","handleOnControlClick","useCallback","handleOnSubmitClick","ProgressBar","disabled","maxSize","currentSize","PlaybackTime","time","labelColor","LabelColors","ONBACKGROUND_4","ONCONTENT_1","TextButton","onClick","disableUnderline","Label","LabelTypography","BUTTON_1","color","PRIMARY","BUTTON__CANCEL","concat","SEND","ON_BACKGROUND_4","CONTENT"],"mappings":"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"}