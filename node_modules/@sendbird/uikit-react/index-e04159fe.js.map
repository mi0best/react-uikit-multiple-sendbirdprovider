{"version":3,"file":"index-e04159fe.js","sources":["../src/hooks/VoicePlayer/dux/actionTypes.ts","../src/hooks/VoicePlayer/dux/initialState.ts","../src/hooks/VoicePlayer/dux/reducer.ts","../src/hooks/VoicePlayer/index.tsx"],"sourcesContent":["import { ObjectValues } from '../../../utils/typeHelpers/objectValues';\n\nexport const actionTypes = {\n  INITIALIZE_AUDIO_UNIT: 'INITIALIZE_AUDIO_UNIT',\n  SET_CURRENT_PLAYER: 'SET_CURRENT_PLAYER',\n  ON_VOICE_PLAYER_PLAY: 'ON_VOICE_PLAYER_PLAY',\n  ON_VOICE_PLAYER_PAUSE: 'ON_VOICE_PLAYER_PAUSE',\n  ON_CURRENT_TIME_UPDATE: 'ON_CURRENT_TIME_UPDATE',\n} as const;\n\nexport type VoicePlayerActionType = ObjectValues<typeof actionTypes>;\n\nexport const INITIALIZE_AUDIO_UNIT: VoicePlayerActionType = 'INITIALIZE_AUDIO_UNIT';\nexport const SET_CURRENT_PLAYER: VoicePlayerActionType = 'SET_CURRENT_PLAYER';\nexport const ON_VOICE_PLAYER_PLAY: VoicePlayerActionType = 'ON_VOICE_PLAYER_PLAY';\nexport const ON_VOICE_PLAYER_PAUSE: VoicePlayerActionType = 'ON_VOICE_PLAYER_PAUSE';\nexport const ON_CURRENT_TIME_UPDATE: VoicePlayerActionType = 'ON_CURRENT_TIME_UPDATE';\n","import { ObjectValues } from '../../../utils/typeHelpers/objectValues';\nimport { GroupKey } from '../utils';\n\nexport const VOICE_PLAYER_STATUS = {\n  IDLE: 'IDLE',\n  PREPARING: 'PREPARING',\n  PLAYING: 'PLAYING',\n  PAUSED: 'PAUSED',\n  COMPLETED: 'COMPLETED',\n} as const;\n// VoicePlayerStatus should be deprecated / It's left for backward legacy\nexport const VoicePlayerStatus = VOICE_PLAYER_STATUS;\nexport type VoicePlayerStatusType = ObjectValues<typeof VOICE_PLAYER_STATUS>;\n\nexport type AudioStorageUnit = {\n  playingStatus: VoicePlayerStatusType;\n  audioFile: null | File;\n  playbackTime: number;\n  duration: number;\n};\nexport const AudioUnitDefaultValue = (): AudioStorageUnit => ({\n  audioFile: null,\n  playbackTime: 0,\n  duration: 1000,\n  playingStatus: VOICE_PLAYER_STATUS.IDLE,\n});\n\nexport interface VoicePlayerInitialState {\n  currentPlayer: null | HTMLAudioElement;\n  currentGroupKey: string;\n  audioStorage: Record<GroupKey, AudioStorageUnit>;\n}\n\nexport const voicePlayerInitialState: VoicePlayerInitialState = {\n  currentPlayer: null,\n  currentGroupKey: '',\n  audioStorage: {},\n};\n","import {\n  INITIALIZE_AUDIO_UNIT,\n  ON_CURRENT_TIME_UPDATE,\n  ON_VOICE_PLAYER_PAUSE,\n  ON_VOICE_PLAYER_PLAY,\n  SET_CURRENT_PLAYER,\n} from './actionTypes';\nimport {\n  AudioStorageUnit,\n  AudioUnitDefaultValue,\n  VoicePlayerInitialState,\n  VOICE_PLAYER_STATUS,\n} from './initialState';\n\ntype InitializeAudioUnitPayload = { groupKey: string };\ntype SetCurrentPlayerPayload = { audioPlayer: HTMLAudioElement, groupKey: string };\ntype OnVoicePlayerPlayPayload = { groupKey: string, audioFile: File };\ntype OnVoicePlayerPausePayload = { groupKey: string };\ntype OnCurrentTimeUpdatePayload = { groupKey: string };\ntype PayloadType = (\n  InitializeAudioUnitPayload\n  | SetCurrentPlayerPayload\n  | OnVoicePlayerPlayPayload\n  | OnVoicePlayerPausePayload\n  | OnCurrentTimeUpdatePayload\n);\ntype ActionType = {\n  type: string;\n  payload: PayloadType;\n};\n\nexport default function voicePlayerReducer(\n  state: VoicePlayerInitialState,\n  action: ActionType,\n): VoicePlayerInitialState {\n  switch (action.type) {\n    case INITIALIZE_AUDIO_UNIT: {\n      const { groupKey } = action.payload as InitializeAudioUnitPayload;\n      const audioUnit = (state.audioStorage?.[groupKey] ? state.audioStorage[groupKey] : AudioUnitDefaultValue()) as AudioStorageUnit;\n      audioUnit.playingStatus = VOICE_PLAYER_STATUS.PREPARING;\n      return {\n        ...state,\n        audioStorage: {\n          ...state.audioStorage,\n          [groupKey]: audioUnit,\n        },\n      };\n    }\n    case SET_CURRENT_PLAYER: {\n      const { audioPlayer, groupKey } = action.payload as SetCurrentPlayerPayload;\n      return {\n        ...state,\n        currentPlayer: audioPlayer,\n        currentGroupKey: groupKey,\n      };\n    }\n    case ON_VOICE_PLAYER_PLAY: {\n      const { groupKey, audioFile } = action.payload as OnVoicePlayerPlayPayload;\n      const audioUnit = (state.audioStorage?.[groupKey] ? state.audioStorage[groupKey] : AudioUnitDefaultValue()) as AudioStorageUnit;\n      audioUnit.audioFile = audioFile;\n      audioUnit.playingStatus = VOICE_PLAYER_STATUS.PLAYING;\n      return {\n        ...state,\n        audioStorage: {\n          ...state.audioStorage,\n          [groupKey]: audioUnit,\n        },\n      };\n    }\n    case ON_VOICE_PLAYER_PAUSE: {\n      const { groupKey } = action.payload as OnVoicePlayerPausePayload;\n      const audioUnit = (state.audioStorage?.[groupKey] ? state.audioStorage[groupKey] : AudioUnitDefaultValue()) as AudioStorageUnit;\n      audioUnit.playingStatus = VOICE_PLAYER_STATUS.PAUSED;\n      const { currentTime, duration } = state.currentPlayer as HTMLAudioElement;\n      if (audioUnit.playbackTime === audioUnit.duration) {\n        audioUnit.playbackTime = 0;\n      } else if (currentTime > 0 && duration > 0) {\n        audioUnit.playbackTime = currentTime;\n        audioUnit.duration = duration;\n      }\n      return {\n        ...state,\n        audioStorage: {\n          ...state.audioStorage,\n          [groupKey]: audioUnit,\n        },\n      };\n    }\n    case ON_CURRENT_TIME_UPDATE: {\n      const { groupKey } = action.payload as OnCurrentTimeUpdatePayload;\n      const { currentTime, duration } = state.currentPlayer as HTMLAudioElement;\n      const audioUnit = (state.audioStorage?.[groupKey] ? state.audioStorage[groupKey] : AudioUnitDefaultValue()) as AudioStorageUnit;\n      if (currentTime > 0 && duration > 0) {\n        audioUnit.playbackTime = currentTime;\n        audioUnit.duration = duration;\n      }\n      return {\n        ...state,\n        audioStorage: {\n          ...state.audioStorage,\n          [groupKey]: audioUnit,\n        },\n      };\n    }\n    default:\n      return state;\n  }\n}\n","import React, { createContext, useContext, useReducer } from 'react';\nimport voicePlayerReducer from './dux/reducer';\nimport {\n  AudioStorageUnit,\n  AudioUnitDefaultValue,\n  VoicePlayerInitialState,\n  voicePlayerInitialState,\n} from './dux/initialState';\nimport {\n  INITIALIZE_AUDIO_UNIT,\n  ON_CURRENT_TIME_UPDATE,\n  ON_VOICE_PLAYER_PAUSE,\n  ON_VOICE_PLAYER_PLAY,\n  SET_CURRENT_PLAYER,\n} from './dux/actionTypes';\nimport {\n  VOICE_MESSAGE_FILE_NAME,\n  VOICE_MESSAGE_MIME_TYPE,\n  VOICE_PLAYER_AUDIO_ID,\n  VOICE_PLAYER_ROOT_ID,\n} from '../../utils/consts';\nimport useSendbirdStateContext from '../useSendbirdStateContext';\n\n// VoicePlayerProvider interface\nexport interface VoicePlayerProps {\n  children: React.ReactElement;\n}\nexport interface VoicePlayerPlayProps {\n  groupKey: string;\n  audioFile?: File;\n  audioFileUrl?: string;\n}\nexport interface VoicePlayerContext {\n  play: (props: VoicePlayerPlayProps) => void;\n  pause: (groupKey?: string) => void;\n  stop: (text?: string) => void;\n  voicePlayerStore: VoicePlayerInitialState;\n}\n\nexport const ALL = 'ALL';\n\nconst noop = () => { /* noop */ };\nconst VoicePlayerStoreDefaultValue = {\n  currentGroupKey: '',\n  currentPlayer: null,\n  audioStorage: {},\n};\n\nconst Context = createContext<VoicePlayerContext>({\n  play: noop,\n  pause: noop,\n  stop: noop,\n  voicePlayerStore: VoicePlayerStoreDefaultValue,\n});\n\nexport const VoicePlayerProvider = ({\n  children,\n}: VoicePlayerProps): React.ReactElement => {\n  const [voicePlayerStore, voicePlayerDispatcher] = useReducer(voicePlayerReducer, voicePlayerInitialState);\n  const {\n    currentGroupKey,\n    currentPlayer,\n    audioStorage,\n  } = voicePlayerStore;\n  const { config } = useSendbirdStateContext();\n  const { logger } = config;\n\n  const stop = (text = '') => {\n    if (currentGroupKey.includes(text)) {\n      logger.info('VoicePlayer: Pause playing(by text).');\n      pause(currentGroupKey);\n    }\n  };\n\n  const pause = (groupKey: string|null) => {\n    if (currentGroupKey === groupKey && currentPlayer !== null) {\n      logger.info('VoicePlayer: Pause playing(by group key).');\n      currentPlayer?.pause();\n    }\n    if (groupKey === ALL) {\n      logger.info('VoicePlayer: Pause playing(all).');\n      currentPlayer?.pause();\n    }\n  };\n\n  const play = ({\n    groupKey,\n    audioFile = null,\n    audioFileUrl = '',\n  }: VoicePlayerPlayProps): void => {\n    if (groupKey !== currentGroupKey) {\n      pause(currentGroupKey);\n    }\n\n    // Clear the previous AudioPlayer element\n    const voicePlayerRoot = document.getElementById(VOICE_PLAYER_ROOT_ID);\n    const voicePlayerAudioElement = document.getElementById(VOICE_PLAYER_AUDIO_ID);\n    if (voicePlayerAudioElement) {\n      voicePlayerRoot.removeChild(voicePlayerAudioElement);\n    }\n\n    logger.info('VoicePlayer: Start getting audio file.');\n    new Promise<File>((resolve) => {\n      voicePlayerDispatcher({\n        type: INITIALIZE_AUDIO_UNIT,\n        payload: { groupKey },\n      });\n      // audio file passed as a parameter\n      if (audioFile) {\n        logger.info('VoicePlayer: Use the audioFile instance.');\n        resolve(audioFile);\n        return;\n      }\n      // audio file from the audioStorage\n      const cachedAudioFile = audioStorage?.[groupKey]?.audioFile;\n      if (cachedAudioFile) {\n        logger.info('VoicePlayer: Get from the audioStorage.');\n        resolve(cachedAudioFile);\n        return;\n      }\n      // fetch the audio file from URL\n      fetch(audioFileUrl)\n        .then((res) => res.blob())\n        .then((blob) => {\n          const audioFile = new File([blob], VOICE_MESSAGE_FILE_NAME, {\n            lastModified: new Date().getTime(),\n            type: VOICE_MESSAGE_MIME_TYPE,\n          });\n          resolve(audioFile);\n          logger.info('VoicePlayer: Get the audioFile from URL.');\n        });\n    }).then((audioFile: File) => {\n      const voicePlayerRoot = document.getElementById(VOICE_PLAYER_ROOT_ID);\n      logger.info('VoicePlayer: Succeeded getting audio file.', { audioFile });\n      const currentAudioUnit = audioStorage[groupKey] || AudioUnitDefaultValue() as AudioStorageUnit;\n      const audioPlayer = new Audio(URL?.createObjectURL?.(audioFile));\n      audioPlayer.id = VOICE_PLAYER_AUDIO_ID;\n      audioPlayer.currentTime = currentAudioUnit.playbackTime;\n      audioPlayer.volume = 1;\n      audioPlayer.loop = false;\n      audioPlayer.onplaying = () => {\n        logger.info('VoicePlayer: OnPlaying event is called from audioPlayer', { groupKey, audioPlayer });\n        voicePlayerDispatcher({\n          type: ON_VOICE_PLAYER_PLAY,\n          payload: { groupKey, audioFile },\n        });\n      };\n      audioPlayer.onpause = () => {\n        logger.info('VoicePlayer: OnPause event is called from audioPlayer', { groupKey, audioPlayer });\n        voicePlayerDispatcher({\n          type: ON_VOICE_PLAYER_PAUSE,\n          payload: { groupKey },\n        });\n      };\n      audioPlayer.ontimeupdate = () => {\n        voicePlayerDispatcher({\n          type: ON_CURRENT_TIME_UPDATE,\n          payload: { groupKey },\n        });\n      };\n      audioPlayer.dataset.sbGroupId = groupKey;\n      // clean up the previous audio player\n      try {\n        voicePlayerRoot?.childNodes.forEach((node) => {\n          const element = node as HTMLAudioElement;\n          const thisGroupKey = element.dataset?.sbGroupKey;\n          if (thisGroupKey !== groupKey) {\n            element?.pause?.();\n            voicePlayerDispatcher({\n              type: ON_VOICE_PLAYER_PAUSE,\n              payload: { groupKey },\n            });\n            voicePlayerRoot.removeChild(element);\n            logger.info('VoicePlayer: Removed other player.', { element });\n          }\n        });\n      } finally {\n        audioPlayer?.play();\n        voicePlayerRoot?.appendChild(audioPlayer);\n        voicePlayerDispatcher({\n          type: SET_CURRENT_PLAYER,\n          payload: { groupKey, audioPlayer },\n        });\n        logger.info('VoicePlayer: Succeeded playing audio player.', { groupKey, audioPlayer });\n      }\n    });\n  };\n\n  return (\n    <Context.Provider value={{\n      play,\n      pause,\n      stop,\n      voicePlayerStore,\n    }}>\n      <div id={VOICE_PLAYER_ROOT_ID} style={{ display: 'none' }} />\n      {children}\n    </Context.Provider>\n  );\n};\n\nexport const useVoicePlayerContext = (): VoicePlayerContext => useContext(Context);\n"],"names":["INITIALIZE_AUDIO_UNIT","SET_CURRENT_PLAYER","ON_VOICE_PLAYER_PLAY","ON_VOICE_PLAYER_PAUSE","ON_CURRENT_TIME_UPDATE","VOICE_PLAYER_STATUS","IDLE","PREPARING","PLAYING","PAUSED","COMPLETED","AudioUnitDefaultValue","audioFile","playbackTime","duration","playingStatus","voicePlayerInitialState","currentPlayer","currentGroupKey","audioStorage","voicePlayerReducer","state","action","type","groupKey","payload","audioUnit","_e","__assign","_a","_j","audioPlayer","_k","_f","_b","_g","_l","currentTime","_c","_m","_h","_d","ALL","noop","VoicePlayerStoreDefaultValue","Context","createContext","play","pause","stop","voicePlayerStore","VoicePlayerProvider","children","useReducer","voicePlayerDispatcher","config","useSendbirdStateContext","logger","text","includes","info","audioFileUrl","voicePlayerRoot","document","getElementById","VOICE_PLAYER_ROOT_ID","voicePlayerAudioElement","VOICE_PLAYER_AUDIO_ID","removeChild","Promise","resolve","cachedAudioFile","fetch","then","res","blob","File","VOICE_MESSAGE_FILE_NAME","lastModified","Date","getTime","VOICE_MESSAGE_MIME_TYPE","currentAudioUnit","Audio","URL","createObjectURL","id","volume","loop","onplaying","onpause","ontimeupdate","dataset","sbGroupId","childNodes","forEach","node","element","thisGroupKey","sbGroupKey","appendChild","React","createElement","Provider","value","style","display","useVoicePlayerContext","useContext"],"mappings":"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"}