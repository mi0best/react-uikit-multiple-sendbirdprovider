{"version":3,"file":"OpenchannelThumbnailMessage.js","sources":["../../src/ui/OpenchannelThumbnailMessage/utils.ts","../../src/ui/OpenchannelThumbnailMessage/index.tsx"],"sourcesContent":["export const SUPPORTING_TYPES = {\n  IMAGE: 'IMAGE',\n  VIDEO: 'VIDEO',\n  UNSUPPORTED: 'UNSUPPORTED',\n};\n\nconst SUPPORTED_MIMES = {\n  IMAGE: [\n    'image/jpeg',\n    'image/jpg',\n    'image/png',\n    'image/gif',\n    'image/webp',\n  ],\n  VIDEO: [\n    'video/mpeg',\n    'video/ogg',\n    'video/webm',\n    'video/mp4',\n  ],\n};\n\nexport const getSupportingFileType = (type: string): string => {\n  if (SUPPORTED_MIMES.IMAGE.indexOf(type) >= 0) {\n    return SUPPORTING_TYPES.IMAGE;\n  }\n  if (SUPPORTED_MIMES.VIDEO.indexOf(type) >= 0) {\n    return SUPPORTING_TYPES.VIDEO;\n  }\n  return SUPPORTING_TYPES.UNSUPPORTED;\n};\n","import React, {\n  useRef,\n  useMemo,\n  useState,\n  useEffect,\n  useContext,\n} from 'react';\nimport { FileMessage } from '@sendbird/chat/message';\nimport format from 'date-fns/format';\nimport './index.scss';\nimport { SUPPORTING_TYPES, getSupportingFileType } from './utils';\nimport { useLocalization } from '../../lib/LocalizationContext';\n\nimport Avatar from '../Avatar';\nimport ContextMenu, { MenuItems, MenuItem } from '../ContextMenu';\nimport Icon, { IconTypes, IconColors } from '../Icon';\nimport IconButton from '../IconButton';\nimport ImageRenderer from '../ImageRenderer';\nimport Label, { LabelTypography, LabelColors } from '../Label';\nimport Loader from '../Loader';\nimport UserProfile from '../UserProfile';\nimport { UserProfileContext } from '../../lib/UserProfileContext';\nimport {\n  checkIsSent,\n  checkIsPending,\n  checkIsFailed,\n  isFineResend,\n  isFineDelete,\n  showMenuTrigger,\n  getSenderFromMessage,\n} from '../../utils/openChannelUtils';\nimport { useMediaQueryContext } from '../../lib/MediaQueryContext';\nimport OpenChannelMobileMenu from '../OpenChannelMobileMenu';\nimport useLongPress from '../../hooks/useLongPress';\n\ninterface LocalUrl {\n  localUrl?: string;\n}\ninterface OpenChannelThumbnailMessageProps {\n  className?: string | Array<string>;\n  message: FileMessage;\n  isOperator?: boolean;\n  isEphemeral?: boolean;\n  disabled: boolean;\n  userId: string;\n  chainTop: boolean;\n  chainBottom: boolean;\n  onClick(bool: boolean): void,\n  showRemove(bool: boolean): void,\n  resendMessage(message: FileMessage): void;\n}\n\nexport default function OpenchannelThumbnailMessage({\n  className,\n  message,\n  isOperator,\n  isEphemeral = false,\n  disabled,\n  userId,\n  chainTop,\n  onClick,\n  showRemove,\n  resendMessage,\n}: OpenChannelThumbnailMessageProps): JSX.Element {\n  const {\n    type,\n    url,\n    thumbnails,\n    localUrl,\n  }: FileMessage & LocalUrl = message;\n  const status = message?.sendingStatus;\n  const thumbnailUrl = (thumbnails && thumbnails.length > 0 && thumbnails[0].url) || null;\n  const { stringSet, dateLocale } = useLocalization();\n  const { disableUserProfile, renderUserProfile } = useContext(UserProfileContext);\n  const [messageWidth, setMessageWidth] = useState(360);\n  const [contextMenu, setContextMenu] = useState(false);\n  const messageRef = useRef<HTMLDivElement>(null);\n  const mobileMenuRef = useRef(null);\n  const contextMenuRef = useRef(null);\n  const avatarRef = useRef(null);\n  const onLongPress = useLongPress({\n    onLongPress: () => { setContextMenu(true); },\n    onClick: () => { onClick(true); },\n  });\n  const { isMobile } = useMediaQueryContext();\n\n  const memorizedThumbnailPlaceHolder = useMemo(() => (type) => ({ style }) => ( // eslint-disable-line\n    <div style={style}>\n      <Icon\n        type={type}\n        fillColor={IconColors.ON_BACKGROUND_2}\n        width=\"56px\"\n        height=\"56px\"\n      />\n    </div>\n  ), []);\n\n  const isMessageSent = checkIsSent(status);\n  const isPending = checkIsPending(status);\n  const isFailed = checkIsFailed(status);\n  const sender = getSenderFromMessage(message);\n\n  useEffect(() => {\n    const thumbnailWidth = (messageRef?.current?.clientWidth ?? 0) - 80;\n    setMessageWidth(thumbnailWidth > 360 ? 360 : thumbnailWidth);\n  }, []);\n\n  return (\n    <>\n      <div\n        className={[\n          ...(Array.isArray(className) ? className : [className]),\n          'sendbird-openchannel-thumbnail-message',\n        ].join(' ')}\n        ref={messageRef}\n      >\n        <div className=\"sendbird-openchannel-thumbnail-message__left\">\n          {\n            !chainTop && (\n              <ContextMenu\n                menuTrigger={(toggleDropdown) => (\n                  <Avatar\n                    className=\"sendbird-openchannel-thumbnail-message__left__avatar\"\n                    src={sender.profileUrl || ''}\n                    ref={avatarRef}\n                    width=\"28px\"\n                    height=\"28px\"\n                    onClick={() => {\n                      if (!disableUserProfile) {\n                        toggleDropdown();\n                      }\n                    }}\n                  />\n                )}\n                menuItems={(closeDropdown) => (\n                  <MenuItems\n                    parentRef={avatarRef}\n                    parentContainRef={avatarRef}\n                    closeDropdown={closeDropdown}\n                    style={{ paddingTop: '0px', paddingBottom: '0px' }}\n                  >\n                    {\n                      renderUserProfile\n                        ? (\n                          renderUserProfile({\n                            user: sender,\n                            close: closeDropdown,\n                            currentUserId: userId,\n                          })\n                        )\n                        : (\n                          <UserProfile\n                            user={sender}\n                            onSuccess={closeDropdown}\n                            disableMessaging\n                          />\n                        )\n                    }\n                  </MenuItems>\n                )}\n              />\n            )\n          }\n        </div>\n        <div className=\"sendbird-openchannel-thumbnail-message__right\">\n          {\n            !chainTop && (\n              <div className=\"sendbird-openchannel-thumbnail-message__right__title\">\n                <Label\n                  className=\"sendbird-openchannel-thumbnail-message__right__title__sender-name\"\n                  type={LabelTypography.CAPTION_2}\n                  color={isOperator ? LabelColors.SECONDARY_3 : LabelColors.ONBACKGROUND_2}\n                >\n                  {\n                    sender && (\n                      sender.friendName\n                      || sender.nickname\n                      || sender.userId\n                    )\n                  }\n                </Label>\n                <Label\n                  className=\"sendbird-openchannel-thumbnail-message__right__title__sent-at\"\n                  type={LabelTypography.CAPTION_3}\n                  color={LabelColors.ONBACKGROUND_3}\n                >\n                  {\n                    message?.createdAt && (\n                      format(message.createdAt, 'p', {\n                        locale: dateLocale,\n                      })\n                    )\n                  }\n                </Label>\n              </div>\n            )\n          }\n          <div className=\"sendbird-openchannel-thumbnail-message__right__body\" ref={mobileMenuRef}>\n            <div\n              className=\"sendbird-openchannel-thumbnail-message__right__body__wrap\"\n              role=\"button\"\n              onClick={() => {\n                if (isMessageSent) {\n                  onClick(true);\n                }\n              }}\n              onKeyDown={() => {\n                if (isMessageSent) {\n                  onClick(true);\n                }\n              }}\n              tabIndex={0}\n              {...(isMobile ? { ...onLongPress } : {})}\n            >\n              <div className=\"sendbird-openchannel-thumbnail-message__right__body__wrap__overlay\" />\n              {\n                {\n                  [SUPPORTING_TYPES.VIDEO]: (\n                    (url || localUrl)\n                      ? (\n                        <div className=\"sendbird-openchannel-thumbnail-message__right__body__wrap__video\" >\n                          {\n                            (thumbnailUrl)\n                              ? (\n                                <ImageRenderer\n                                  className=\"sendbird-openchannel-thumbnail-message__right__body__wrap__video\"\n                                  url={thumbnailUrl}\n                                  width={messageWidth}\n                                  height=\"270px\"\n                                  alt=\"image\"\n                                  placeHolder={memorizedThumbnailPlaceHolder(IconTypes.PLAY)}\n                                />\n                              )\n                              : (\n                                <video className=\"sendbird-openchannel-thumbnail-message__right__body__wrap__video__video\">\n                                  <source src={url || localUrl} type={type} />\n                                </video>\n                              )\n                          }\n                          <Icon\n                            className=\"sendbird-openchannel-thumbnail-message__right__body__wrap__video__icon\"\n                            type={IconTypes.PLAY}\n                            fillColor={IconColors.ON_BACKGROUND_2}\n                            width=\"56px\"\n                            height=\"56px\"\n                          />\n                        </div>\n                      )\n                      : (\n                        <Icon\n                          className=\"sendbird-openchannel-thumbnail-message__right__body__wrap__video--icon\"\n                          type={IconTypes.PHOTO}\n                          fillColor={IconColors.ON_BACKGROUND_2}\n                          width=\"56px\"\n                          height=\"56px\"\n                        />\n                      )\n                  ),\n                  [SUPPORTING_TYPES.IMAGE]: (\n                    (url || localUrl)\n                      ? (\n                        <ImageRenderer\n                          className=\"sendbird-openchannel-thumbnail-message__right__body__wrap__image\"\n                          url={thumbnailUrl || url || localUrl}\n                          alt=\"image\"\n                          width={messageWidth}\n                          height=\"270px\"\n                          placeHolder={memorizedThumbnailPlaceHolder(IconTypes.PHOTO)}\n                        />\n                      )\n                      : (\n                        <Icon\n                          className=\"sendbird-openchannel-thumbnail-message__right__body__wrap__image--icon\"\n                          type={IconTypes.PHOTO}\n                          fillColor={IconColors.ON_BACKGROUND_2}\n                          width=\"56px\"\n                          height=\"56px\"\n                        />\n                      )\n                  ),\n                  [SUPPORTING_TYPES.UNSUPPORTED]: (\n                    <Icon\n                      className=\"sendbird-openchannel-thumbnail-message__right__body__wrap__unknown\"\n                      type={IconTypes.PHOTO}\n                      fillColor={IconColors.ON_BACKGROUND_2}\n                      width=\"56px\"\n                      height=\"56px\"\n                    />\n                  ),\n                }[getSupportingFileType(type)]\n              }\n            </div>\n          </div>\n          {\n            (isPending || isFailed) && (\n              <div className=\"sendbird-openchannel-thumbnail-message__right__tail\">\n                {\n                  isPending && (\n                    <Loader\n                      width=\"16px\"\n                      height=\"16px\"\n                    >\n                      <Icon\n                        className=\"sendbird-openchannel-thumbnail-message__right__tail__pending\"\n                        type={IconTypes.SPINNER}\n                        fillColor={IconColors.PRIMARY}\n                        width=\"16px\"\n                        height=\"16px\"\n                      />\n                    </Loader>\n                  )\n                }\n                {\n                  isFailed && (\n                    <Icon\n                      className=\"sendbird-openchannel-thumbnail-message__right__tail__failed\"\n                      type={IconTypes.ERROR}\n                      fillColor={IconColors.ERROR}\n                      width=\"16px\"\n                      height=\"16px\"\n                    />\n                  )\n                }\n              </div>\n            )\n          }\n        </div>\n        {\n          !isMobile && (\n            <div\n              className=\"sendbird-openchannel-thumbnail-message__context-menu\"\n              ref={contextMenuRef}\n            >\n              {\n                (isFineResend({ message, userId, status }) || !isEphemeral) && (\n                  <ContextMenu\n                    menuTrigger={(toggleDropdown) => (\n                      showMenuTrigger({ message, userId, status }) && (\n                        <IconButton\n                          className=\"sendbird-openchannel-thumbnail-message__context-menu--icon\"\n                          width=\"32px\"\n                          height=\"32px\"\n                          onClick={toggleDropdown}\n                        >\n                          <Icon\n                            type={IconTypes.MORE}\n                            fillColor={IconColors.CONTENT_INVERSE}\n                            width=\"24px\"\n                            height=\"24px\"\n                          />\n                        </IconButton>\n                      )\n                    )}\n                    menuItems={(closeDropdown) => (\n                      <MenuItems\n                        parentRef={contextMenuRef}\n                        parentContainRef={contextMenuRef}\n                        closeDropdown={closeDropdown}\n                        openLeft\n                      >\n                        {\n                          isFineResend({ message, userId, status }) && (\n                            <MenuItem\n                              onClick={() => {\n                                resendMessage(message);\n                                closeDropdown();\n                              }}\n                              dataSbId=\"open_channel_thumbnail_message_menu_resend\"\n                            >\n                              {stringSet.CONTEXT_MENU_DROPDOWN__RESEND}\n                            </MenuItem>\n                          )\n                        }\n                        {\n                          (!isEphemeral && isFineDelete({ message, userId, status })) && (\n                            <MenuItem\n                              onClick={() => {\n                                if (disabled) {\n                                  return;\n                                }\n                                showRemove(true);\n                                closeDropdown();\n                              }}\n                              dataSbId=\"open_channel_thumbnail_message_menu_delete\"\n                            >\n                              {stringSet.CONTEXT_MENU_DROPDOWN__DELETE}\n                            </MenuItem>\n                          )\n                        }\n                      </MenuItems>\n                    )}\n                  />\n                )\n              }\n            </div>\n          )\n        }\n      </div>\n      {\n        contextMenu && (\n          <OpenChannelMobileMenu\n            message={message}\n            parentRef={mobileMenuRef}\n            hideMenu={() => {\n              setContextMenu(false);\n            }}\n            showRemove={() => {\n              setContextMenu(false);\n              showRemove(true);\n            }}\n            resendMessage={() => {\n              setContextMenu(false);\n              resendMessage(message);\n            }}\n          />\n        )\n      }\n    </>\n  );\n}\n"],"names":["SUPPORTING_TYPES","IMAGE","VIDEO","UNSUPPORTED","SUPPORTED_MIMES","getSupportingFileType","type","indexOf","OpenchannelThumbnailMessage","_a","className","message","isOperator","_c","isEphemeral","disabled","userId","chainTop","onClick","showRemove","resendMessage","url","thumbnails","localUrl","status","sendingStatus","thumbnailUrl","length","_d","useLocalization","stringSet","dateLocale","_e","useContext","UserProfileContext","disableUserProfile","renderUserProfile","_f","useState","messageWidth","setMessageWidth","_g","contextMenu","setContextMenu","messageRef","useRef","mobileMenuRef","contextMenuRef","avatarRef","onLongPress","useLongPress","isMobile","useMediaQueryContext","memorizedThumbnailPlaceHolder","useMemo","style","React","createElement","Icon","fillColor","IconColors","ON_BACKGROUND_2","width","height","isMessageSent","checkIsSent","isPending","checkIsPending","isFailed","checkIsFailed","sender","getSenderFromMessage","useEffect","thumbnailWidth","current","clientWidth","_b","Fragment","__spreadArray","Array","isArray","join","ref","ContextMenu","menuTrigger","toggleDropdown","Avatar","src","profileUrl","menuItems","closeDropdown","MenuItems","parentRef","parentContainRef","paddingTop","paddingBottom","user","close","currentUserId","UserProfile","onSuccess","disableMessaging","Label","LabelTypography","CAPTION_2","color","LabelColors","SECONDARY_3","ONBACKGROUND_2","friendName","nickname","CAPTION_3","ONBACKGROUND_3","createdAt","format","locale","_extends","role","onKeyDown","tabIndex","ImageRenderer","alt","placeHolder","IconTypes","PLAY","PHOTO","Loader","SPINNER","PRIMARY","ERROR","isFineResend","showMenuTrigger","IconButton","MORE","CONTENT_INVERSE","openLeft","MenuItem","dataSbId","CONTEXT_MENU_DROPDOWN__RESEND","isFineDelete","CONTEXT_MENU_DROPDOWN__DELETE","OpenChannelMobileMenu","hideMenu"],"mappings":"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"}