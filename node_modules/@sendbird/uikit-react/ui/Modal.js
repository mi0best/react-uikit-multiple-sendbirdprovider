import React__default, { useContext } from 'react';
import { createPortal } from 'react-dom';
import { n as noop } from '../utils-6c50a6d1.js';
import '../tslib.es6-c2fb729e.js';
import '../index-09847c0f.js';
import { M as MODAL_ROOT } from '../index-04bd1a59.js';
import { a as LocalizationContext } from '../LocalizationContext-287ee149.js';
import { u as useMediaQueryContext } from '../MediaQueryContext-114ca049.js';
import IconButton from './IconButton.js';
import Button from './Button.js';
import Icon, { IconTypes, IconColors } from './Icon.js';
import { L as Label, a as LabelTypography, b as LabelColors } from '../index-92741c7e.js';
import { B as ButtonTypes } from '../types-9d43ac6e.js';
import '../stringSet-6422c6b9.js';
import '../index-e4277f9c.js';
import 'prop-types';

var ModalHeader = function (_a) {
  var titleText = _a.titleText;
  return /*#__PURE__*/React__default.createElement("div", {
    className: "sendbird-modal__header"
  }, /*#__PURE__*/React__default.createElement(Label, {
    type: LabelTypography.H_1,
    color: LabelColors.ONBACKGROUND_1
  }, titleText));
};
var ModalBody = function (_a) {
  var children = _a.children;
  return /*#__PURE__*/React__default.createElement("div", {
    className: "sendbird-modal__body"
  }, /*#__PURE__*/React__default.createElement(Label, {
    type: LabelTypography.SUBTITLE_1,
    color: LabelColors.ONBACKGROUND_2
  }, children));
};
var ModalFooter = function (_a) {
  var submitText = _a.submitText,
    _b = _a.disabled,
    disabled = _b === void 0 ? false : _b,
    _c = _a.hideCancelButton,
    hideCancelButton = _c === void 0 ? false : _c,
    _d = _a.type,
    type = _d === void 0 ? ButtonTypes.DANGER : _d,
    onSubmit = _a.onSubmit,
    onCancel = _a.onCancel;
  var stringSet = useContext(LocalizationContext).stringSet;
  return /*#__PURE__*/React__default.createElement("div", {
    className: "sendbird-modal__footer"
  }, !hideCancelButton && /*#__PURE__*/React__default.createElement(Button, {
    type: ButtonTypes.SECONDARY,
    onClick: onCancel
  }, /*#__PURE__*/React__default.createElement(Label, {
    type: LabelTypography.BUTTON_1,
    color: LabelColors.ONBACKGROUND_1
  }, stringSet.BUTTON__CANCEL)), /*#__PURE__*/React__default.createElement(Button, {
    type: type,
    disabled: disabled,
    onClick: onSubmit
  }, submitText));
};
function Modal(props) {
  var _a = props.children,
    children = _a === void 0 ? null : _a,
    _b = props.className,
    className = _b === void 0 ? '' : _b,
    _c = props.isCloseOnClickOutside,
    isCloseOnClickOutside = _c === void 0 ? false : _c,
    _d = props.isFullScreenOnMobile,
    isFullScreenOnMobile = _d === void 0 ? false : _d,
    titleText = props.titleText,
    submitText = props.submitText,
    _e = props.disabled,
    disabled = _e === void 0 ? false : _e,
    _f = props.hideFooter,
    hideFooter = _f === void 0 ? false : _f,
    _g = props.type,
    type = _g === void 0 ? ButtonTypes.DANGER : _g,
    /**
     * Do not use this! We will deprecate onCancel in v4.
     */
    _h = props.onCancel,
    /**
     * Do not use this! We will deprecate onCancel in v4.
     */
    onCancel = _h === void 0 ? noop : _h,
    onClose = props.onClose,
    _j = props.onSubmit,
    onSubmit = _j === void 0 ? noop : _j,
    renderHeader = props.renderHeader;
  var handleClose = onClose !== null && onClose !== void 0 ? onClose : onCancel;
  var isMobile = useMediaQueryContext().isMobile;
  return /*#__PURE__*/createPortal( /*#__PURE__*/React__default.createElement("div", {
    className: "\n      sendbird-modal ".concat(className, "\n      ").concat(isFullScreenOnMobile && isMobile ? 'sendbird-modal--full-mobile' : '', "\n    ")
  }, /*#__PURE__*/React__default.createElement("div", {
    className: "sendbird-modal__content"
  }, (renderHeader === null || renderHeader === void 0 ? void 0 : renderHeader()) || /*#__PURE__*/React__default.createElement(ModalHeader, {
    titleText: titleText !== null && titleText !== void 0 ? titleText : ''
  }), /*#__PURE__*/React__default.createElement(ModalBody, null, children), !hideFooter && /*#__PURE__*/React__default.createElement(ModalFooter, {
    disabled: disabled,
    onCancel: handleClose,
    onSubmit: onSubmit,
    submitText: submitText !== null && submitText !== void 0 ? submitText : '',
    type: type
  }), /*#__PURE__*/React__default.createElement("div", {
    className: "sendbird-modal__close"
  }, /*#__PURE__*/React__default.createElement(IconButton, {
    width: "32px",
    height: "32px",
    onClick: handleClose
  }, /*#__PURE__*/React__default.createElement(Icon, {
    type: IconTypes.CLOSE,
    fillColor: IconColors.DEFAULT,
    width: "24px",
    height: "24px"
  })))), /*#__PURE__*/React__default.createElement("div", {
    className: "\n          sendbird-modal__backdrop\n          ".concat(isCloseOnClickOutside && 'sendbird-modal__backdrop--clickoutside', "\n        "),
    onClick: function (e) {
      e === null || e === void 0 ? void 0 : e.stopPropagation();
      if (isCloseOnClickOutside) {
        handleClose();
      }
    }
  })), document.getElementById(MODAL_ROOT));
}

export { Modal, ModalBody, ModalFooter, ModalHeader, Modal as default };
//# sourceMappingURL=Modal.js.map
