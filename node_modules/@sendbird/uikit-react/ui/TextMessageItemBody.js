import React__default, { useContext, useMemo } from 'react';
import { L as Label, a as LabelTypography, b as LabelColors } from '../index-92741c7e.js';
import { o as getClassName, G as isEditedMessage } from '../index-776554c0.js';
import { a as LocalizationContext } from '../LocalizationContext-287ee149.js';
import { t as tokenizeMessage } from '../tokenize-eae44765.js';
import { T as TextFragment } from '../index-a0638563.js';
import { T as TEXT_MESSAGE_BODY_CLASSNAME } from '../consts-4ec7d640.js';
import 'prop-types';
import '../stringSet-6422c6b9.js';
import '../tslib.es6-c2fb729e.js';
import '../utils/message/getOutgoingMessageState.js';
import '../index-09847c0f.js';
import '../index-e4277f9c.js';
import '../Message/context.js';
import './MentionLabel.js';
import './ContextMenu.js';
import 'react-dom';
import './SortByRow.js';
import '../uuid-c15b8b3b.js';
import './UserProfile.js';
import '../UserProfileContext-2001a468.js';
import '../sendbirdSelectors.js';
import '../pubSub/topics.js';
import '../utils-6c50a6d1.js';
import './Avatar.js';
import './ImageRenderer.js';
import './Icon.js';
import './Button.js';
import '../types-9d43ac6e.js';
import '../useSendbirdStateContext.js';
import '../withSendbird.js';
import './LinkLabel.js';

function TextMessageItemBody(_a) {
  var _b, _c, _d;
  var _e = _a.className,
    className = _e === void 0 ? '' : _e,
    message = _a.message,
    _f = _a.isByMe,
    isByMe = _f === void 0 ? false : _f,
    _g = _a.mouseHover,
    mouseHover = _g === void 0 ? false : _g,
    _h = _a.isMentionEnabled,
    isMentionEnabled = _h === void 0 ? false : _h,
    _j = _a.isReactionEnabled,
    isReactionEnabled = _j === void 0 ? false : _j;
  var stringSet = useContext(LocalizationContext).stringSet;
  var isMessageMentioned = isMentionEnabled && ((_b = message === null || message === void 0 ? void 0 : message.mentionedMessageTemplate) === null || _b === void 0 ? void 0 : _b.length) > 0 && ((_c = message === null || message === void 0 ? void 0 : message.mentionedUsers) === null || _c === void 0 ? void 0 : _c.length) > 0;
  var tokens = useMemo(function () {
    if (isMessageMentioned) {
      return tokenizeMessage({
        mentionedUsers: message === null || message === void 0 ? void 0 : message.mentionedUsers,
        messageText: message === null || message === void 0 ? void 0 : message.mentionedMessageTemplate
      });
    }
    return tokenizeMessage({
      messageText: message === null || message === void 0 ? void 0 : message.message
    });
  }, [message === null || message === void 0 ? void 0 : message.updatedAt]);
  return /*#__PURE__*/React__default.createElement(Label, {
    type: LabelTypography.BODY_1,
    color: isByMe ? LabelColors.ONCONTENT_1 : LabelColors.ONBACKGROUND_1
  }, /*#__PURE__*/React__default.createElement("div", {
    className: getClassName([className, TEXT_MESSAGE_BODY_CLASSNAME, isByMe ? 'outgoing' : 'incoming', mouseHover ? 'mouse-hover' : '', isReactionEnabled && ((_d = message === null || message === void 0 ? void 0 : message.reactions) === null || _d === void 0 ? void 0 : _d.length) > 0 ? 'reactions' : ''])
  }, /*#__PURE__*/React__default.createElement(TextFragment, {
    tokens: tokens
  }), isEditedMessage(message) && /*#__PURE__*/React__default.createElement(Label, {
    className: "sendbird-text-message-item-body__message edited",
    type: LabelTypography.BODY_1,
    color: isByMe ? LabelColors.ONCONTENT_2 : LabelColors.ONBACKGROUND_2
  }, " ".concat(stringSet.MESSAGE_EDITED, " "))));
}

export { TextMessageItemBody as default };
//# sourceMappingURL=TextMessageItemBody.js.map
