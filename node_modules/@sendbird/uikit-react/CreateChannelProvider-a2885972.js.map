{"version":3,"file":"CreateChannelProvider-a2885972.js","sources":["../src/modules/CreateChannel/types.ts","../src/modules/CreateChannel/context/CreateChannelProvider.tsx"],"sourcesContent":["export enum CHANNEL_TYPE {\n  GROUP = 'group',\n  SUPERGROUP = 'supergroup',\n  BROADCAST = 'broadcast',\n}\n","import React, { useState } from 'react';\nimport { User } from '@sendbird/chat';\nimport type {\n  GroupChannel,\n  GroupChannelCreateParams,\n  SendbirdGroupChat,\n} from '@sendbird/chat/groupChannel';\n\nimport { getCreateGroupChannel } from '../../../lib/selectors';\nimport useSendbirdStateContext from '../../../hooks/useSendbirdStateContext';\nimport { CHANNEL_TYPE } from '../types';\n\nconst CreateChannelContext = React.createContext(undefined);\n\nexport interface UserListQuery {\n  hasNext?: boolean;\n  next(): Promise<Array<User>>;\n}\n\ntype OverrideInviteUserType = {\n  users: Array<string>;\n  onClose: () => void;\n  channelType: CHANNEL_TYPE;\n};\n\nexport interface CreateChannelProviderProps {\n  children?: React.ReactElement;\n  onCreateChannel(channel: GroupChannel): void;\n  overrideInviteUser?(params: OverrideInviteUserType): void;\n  onBeforeCreateChannel?(users: Array<string>): GroupChannelCreateParams;\n  userListQuery?(): UserListQuery;\n}\n\ntype CreateChannel = (channelParams: GroupChannelCreateParams) => Promise<GroupChannel>;\n\nexport interface CreateChannelContextInterface {\n  onBeforeCreateChannel?(users: Array<string>): GroupChannelCreateParams;\n  createChannel: CreateChannel;\n  sdk: SendbirdGroupChat;\n  userListQuery?(): UserListQuery;\n  overrideInviteUser?(params: OverrideInviteUserType): void;\n  onCreateChannel?(channel: GroupChannel): void;\n  step: number,\n  setStep: React.Dispatch<React.SetStateAction<number>>,\n  type: CHANNEL_TYPE,\n  setType: React.Dispatch<React.SetStateAction<CHANNEL_TYPE>>,\n}\n\nconst CreateChannelProvider: React.FC<CreateChannelProviderProps> = (props: CreateChannelProviderProps) => {\n  const {\n    children,\n    onCreateChannel,\n    onBeforeCreateChannel,\n    overrideInviteUser,\n    userListQuery,\n  } = props;\n\n  const store = useSendbirdStateContext();\n  const userListQuery_ = store?.config?.userListQuery;\n  const createChannel: (channelParams: GroupChannelCreateParams)\n    => Promise<GroupChannel> = getCreateGroupChannel(store);\n\n  const [step, setStep] = useState(0);\n  const [type, setType] = useState(CHANNEL_TYPE.GROUP);\n\n  return (\n    <CreateChannelContext.Provider value={{\n      onBeforeCreateChannel,\n      createChannel,\n      onCreateChannel,\n      overrideInviteUser,\n      userListQuery: userListQuery || userListQuery_,\n      step,\n      setStep,\n      type,\n      setType,\n    }}>\n      {children}\n    </CreateChannelContext.Provider>\n  );\n};\n\nconst useCreateChannelContext = (): CreateChannelContextInterface => (\n  React.useContext(CreateChannelContext)\n);\n\nexport {\n  CreateChannelProvider,\n  useCreateChannelContext,\n};\n"],"names":["CHANNEL_TYPE","CreateChannelContext","React","createContext","undefined","CreateChannelProvider","props","children","onCreateChannel","onBeforeCreateChannel","overrideInviteUser","userListQuery","store","useSendbirdStateContext","userListQuery_","_a","config","createChannel","getCreateGroupChannel","_b","useState","step","setStep","_c","GROUP","type","setType","createElement","Provider","value","useCreateChannelContext","useContext"],"mappings":";;;;IAAYA,aAIX;AAJD,CAAA,UAAYA,YAAY,EAAA;AACtBA,EAAAA,YAAA,CAAA,OAAA,CAAA,GAAA,OAAe,CAAA;AACfA,EAAAA,YAAA,CAAA,YAAA,CAAA,GAAA,YAAyB,CAAA;AACzBA,EAAAA,YAAA,CAAA,WAAA,CAAA,GAAA,WAAuB,CAAA;AACzB,CAAC,EAJWA,YAAY,KAAZA,YAAY,GAIvB,EAAA,CAAA,CAAA;;ACQD,IAAMC,oBAAoB,gBAAGC,cAAK,CAACC,aAAa,CAACC,SAAS,CAAC,CAAA;AAoC3D,IAAMC,qBAAqB,GAAyC,UAACC,KAAiC,EAAA;;AAElG,EAAA,IAAAC,QAAQ,GAKND,KAAK,CALCC,QAAA;IACRC,eAAe,GAIbF,KAAK,CAJQE,eAAA;IACfC,qBAAqB,GAGnBH,KAAK,CAHcG,qBAAA;IACrBC,kBAAkB,GAEhBJ,KAAK,CAAAI,kBAFW;IAClBC,aAAa,GACXL,KAAK,CAAAK,aADM,CAAA;AAGf,EAAA,IAAMC,KAAK,GAAGC,uBAAuB,EAAE,CAAA;AACvC,EAAA,IAAMC,cAAc,GAAG,CAAAC,EAAA,GAAAH,KAAK,KAAL,IAAA,IAAAA,KAAK,KAAL,KAAA,CAAA,GAAA,KAAA,CAAA,GAAAA,KAAK,CAAEI,MAAM,MAAE,IAAA,IAAAD,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAAA,EAAA,CAAAJ,aAAa,CAAA;AACnD,EAAA,IAAMM,aAAa,GACUC,qBAAqB,CAACN,KAAK,CAAC,CAAA;AAEnD,EAAA,IAAAO,EAAA,GAAkBC,QAAQ,CAAC,CAAC,CAAC;AAA5BC,IAAAA,IAAI,GAAAF,EAAA,CAAA,CAAA,CAAA;AAAEG,IAAAA,OAAO,GAAAH,EAAA,CAAA,CAAA,CAAe,CAAA;AAC7B,EAAA,IAAAI,EAAkB,GAAAH,QAAQ,CAACpB,YAAY,CAACwB,KAAK,CAAC;AAA7CC,IAAAA,IAAI,GAAAF,EAAA,CAAA,CAAA,CAAA;AAAEG,IAAAA,OAAO,QAAgC,CAAA;AAEpD,EAAA,oBACExB,cAAA,CAAAyB,aAAA,CAAC1B,oBAAoB,CAAC2B,QAAQ,EAAA;AAACC,IAAAA,KAAK,EAAE;AACpCpB,MAAAA,qBAAqB,EAAAA,qBAAA;AACrBQ,MAAAA,aAAa,EAAAA,aAAA;AACbT,MAAAA,eAAe,EAAAA,eAAA;AACfE,MAAAA,kBAAkB,EAAAA,kBAAA;MAClBC,aAAa,EAAEA,aAAa,IAAIG,cAAc;AAC9CO,MAAAA,IAAI,EAAAA,IAAA;AACJC,MAAAA,OAAO,EAAAA,OAAA;AACPG,MAAAA,IAAI,EAAAA,IAAA;AACJC,MAAAA,OAAO,EAAAA,OAAAA;AACR,KAAA;AAAC,GAAA,EACCnB,QAC4B,CAAC,CAAA;AAEpC,EAAC;AAED,IAAMuB,uBAAuB,GAAG,YAAqC;AAAA,EAAA,OACnE5B,cAAK,CAAC6B,UAAU,CAAC9B,oBAAoB,CAAC,CAAA;AAD6B;;;;"}