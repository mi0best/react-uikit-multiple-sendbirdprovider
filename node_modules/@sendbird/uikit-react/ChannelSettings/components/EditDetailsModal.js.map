{"version":3,"file":"EditDetailsModal.js","sources":["../../../src/modules/ChannelSettings/components/EditDetailsModal/index.tsx"],"sourcesContent":["import React, { useState, useRef, useContext } from 'react';\n\nimport { useChannelSettingsContext } from '../../context/ChannelSettingsProvider';\nimport { LocalizationContext } from '../../../../lib/LocalizationContext';\nimport useSendbirdStateContext from '../../../../hooks/useSendbirdStateContext';\n\nimport Modal from '../../../../ui/Modal';\nimport Input, { InputLabel } from '../../../../ui/Input';\nimport Avatar from '../../../../ui/Avatar/index';\nimport { ButtonTypes } from '../../../../ui/Button';\nimport Label, { LabelColors, LabelTypography } from '../../../../ui/Label';\nimport TextButton from '../../../../ui/TextButton';\nimport ChannelAvatar from '../../../../ui/ChannelAvatar/index';\nimport uuidv4 from '../../../../utils/uuid';\n\nexport type EditDetailsProps = {\n  onSubmit: () => void;\n  onCancel: () => void;\n};\n\nconst EditDetails: React.FC<EditDetailsProps> = (props: EditDetailsProps) => {\n  const {\n    onSubmit,\n    onCancel,\n  } = props;\n\n  const {\n    channel,\n    onChannelModified,\n    onBeforeUpdateChannel,\n    setChannelUpdateId,\n  } = useChannelSettingsContext();\n  const title = channel?.name;\n\n  const state = useSendbirdStateContext();\n  const userId = state?.config?.userId;\n  const theme = state?.config?.theme;\n  const logger = state?.config?.logger;\n\n  const inputRef = useRef(null);\n  const formRef = useRef(null);\n  const hiddenInputRef = useRef(null);\n  const [currentImg, setCurrentImg] = useState(null);\n  const [newFile, setNewFile] = useState(null);\n  const { stringSet } = useContext(LocalizationContext);\n\n  return (\n    <Modal\n      isFullScreenOnMobile\n      titleText={stringSet.MODAL__CHANNEL_INFORMATION__TITLE}\n      submitText={stringSet.BUTTON__SAVE}\n      onCancel={onCancel}\n      onSubmit={() => {\n        if (title !== '' && !inputRef.current.value) {\n          if (formRef.current.reportValidity) { // might not work in explorer\n            formRef.current.reportValidity();\n          }\n          return;\n        }\n\n        const currentTitle = inputRef.current.value;\n        const currentImg = newFile;\n        logger.info('ChannelSettings: Channel information being updated', {\n          currentTitle,\n          currentImg,\n        });\n        if (onBeforeUpdateChannel) {\n          logger.info('ChannelSettings: onBeforeUpdateChannel');\n          const params = onBeforeUpdateChannel(currentTitle, currentImg, channel?.data);\n          channel?.updateChannel(params).then((groupChannel) => {\n            onChannelModified?.(groupChannel);\n            setChannelUpdateId(uuidv4());\n            onSubmit();\n          });\n        } else {\n          logger.info('ChannelSettings: normal');\n          channel?.updateChannel({\n            coverImage: currentImg,\n            name: currentTitle,\n            data: channel?.data || '',\n          }).then((groupChannel) => {\n            logger.info('ChannelSettings: Channel information updated', groupChannel);\n            onChannelModified?.(groupChannel);\n            setChannelUpdateId(uuidv4());\n            onSubmit();\n          });\n        }\n      }}\n      type={ButtonTypes.PRIMARY}\n    >\n      <form\n        className=\"channel-profile-form\"\n        ref={formRef}\n        onSubmit={(e) => { e.preventDefault(); }}\n      >\n        <div className=\"channel-profile-form__img-section\">\n          <InputLabel>\n            {stringSet.MODAL__CHANNEL_INFORMATION__CHANNEL_IMAGE}\n          </InputLabel>\n          <div className=\"channel-profile-form__avatar\">\n            {\n              currentImg\n                ? (\n                  <Avatar\n                    height=\"80px\"\n                    width=\"80px\"\n                    src={currentImg}\n                  />\n                ) : (\n                  <ChannelAvatar\n                    height={80}\n                    width={80}\n                    channel={channel}\n                    userId={userId}\n                    theme={theme}\n                  />\n                )\n              }\n          </div>\n          <input\n            ref={hiddenInputRef}\n            type=\"file\"\n            accept=\"image/gif, image/jpeg, image/png\"\n            style={{ display: 'none' }}\n            onChange={(e) => {\n              setCurrentImg(URL.createObjectURL(e.target.files[0]));\n              setNewFile(e.target.files[0]);\n              hiddenInputRef.current.value = '';\n            }}\n          />\n          <TextButton\n            className=\"channel-profile-form__avatar-button\"\n            onClick={() => hiddenInputRef.current.click()}\n            disableUnderline\n          >\n            <Label type={LabelTypography.BUTTON_1} color={LabelColors.PRIMARY}>\n              {stringSet.MODAL__CHANNEL_INFORMATION__UPLOAD}\n            </Label>\n          </TextButton>\n        </div>\n        <div className=\"channel-profile-form__name-section\">\n          <InputLabel>\n            {stringSet.MODAL__CHANNEL_INFORMATION__CHANNEL_NAME}\n          </InputLabel>\n          <Input\n            required={title !== ''}\n            name=\"channel-profile-form__name\"\n            ref={inputRef}\n            value={title}\n            placeHolder={stringSet.MODAL__CHANNEL_INFORMATION__INPUT__PLACE_HOLDER}\n          />\n        </div>\n      </form>\n    </Modal>\n  );\n};\n\nexport default EditDetails;\n"],"names":["EditDetails","props","onSubmit","onCancel","_d","useChannelSettingsContext","channel","onChannelModified","onBeforeUpdateChannel","setChannelUpdateId","title","name","state","useSendbirdStateContext","userId","_a","config","theme","_b","logger","_c","inputRef","useRef","formRef","hiddenInputRef","_e","useState","currentImg","setCurrentImg","_f","newFile","setNewFile","stringSet","useContext","LocalizationContext","React","createElement","Modal","isFullScreenOnMobile","titleText","MODAL__CHANNEL_INFORMATION__TITLE","submitText","BUTTON__SAVE","current","value","reportValidity","currentTitle","info","params","data","updateChannel","then","groupChannel","uuidv4","coverImage","type","ButtonTypes","PRIMARY","className","ref","e","preventDefault","InputLabel","MODAL__CHANNEL_INFORMATION__CHANNEL_IMAGE","Avatar","height","width","src","ChannelAvatar","accept","style","display","onChange","URL","createObjectURL","target","files","TextButton","onClick","click","disableUnderline","Label","LabelTypography","BUTTON_1","color","LabelColors","MODAL__CHANNEL_INFORMATION__UPLOAD","MODAL__CHANNEL_INFORMATION__CHANNEL_NAME","Input","required","placeHolder","MODAL__CHANNEL_INFORMATION__INPUT__PLACE_HOLDER"],"mappings":"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"}