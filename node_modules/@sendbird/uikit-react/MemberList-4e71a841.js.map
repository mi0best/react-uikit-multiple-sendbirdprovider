{"version":3,"file":"MemberList-4e71a841.js","sources":["../src/modules/ChannelSettings/components/ModerationPanel/MembersModal.tsx","../src/modules/ChannelSettings/components/ModerationPanel/InviteUsersModal.tsx","../src/modules/ChannelSettings/components/ModerationPanel/MemberList.tsx"],"sourcesContent":["import React, {\n  ReactElement,\n  useContext,\n  useEffect,\n  useState,\n} from 'react';\n\nimport Modal from '../../../../ui/Modal';\nimport UserListItem from '../../../../ui/UserListItem';\nimport IconButton from '../../../../ui/IconButton';\nimport Icon, { IconTypes, IconColors } from '../../../../ui/Icon';\nimport ContextMenu, { MenuItem, MenuItems } from '../../../../ui/ContextMenu';\nimport { noop } from '../../../../utils/utils';\n\nimport { useChannelSettingsContext } from '../../context/ChannelSettingsProvider';\nimport useSendbirdStateContext from '../../../../hooks/useSendbirdStateContext';\nimport { LocalizationContext } from '../../../../lib/LocalizationContext';\nimport { Member } from '@sendbird/chat/groupChannel';\n\ninterface Props {\n  onCancel(): void;\n}\n\nexport default function MembersModal({ onCancel }: Props): ReactElement {\n  const [members, setMembers] = useState([]);\n  const [memberQuery, setMemberQuery] = useState(null);\n\n  const { channel } = useChannelSettingsContext();\n  const state = useSendbirdStateContext();\n  const currentUser = state?.config?.userId;\n  const { stringSet } = useContext(LocalizationContext);\n\n  useEffect(() => {\n    const memberListQuery = channel?.createMemberListQuery({\n      limit: 20,\n    });\n    memberListQuery.next().then((members) => {\n      setMembers(members);\n    });\n    setMemberQuery(memberListQuery);\n  }, []);\n  return (\n    <div>\n      <Modal\n        isFullScreenOnMobile\n        hideFooter\n        onCancel={() => onCancel()}\n        onSubmit={noop}\n        titleText={stringSet.CHANNEL_SETTING__MEMBERS__SEE_ALL_MEMBERS}\n      >\n        <div\n          className=\"sendbird-more-members__popup-scroll\"\n          onScroll={(e) => {\n            const { hasNext } = memberQuery;\n            const target = e.target as HTMLTextAreaElement;\n            const fetchMore = (\n              target.clientHeight + target.scrollTop === target.scrollHeight\n            );\n\n            if (hasNext && fetchMore) {\n              memberQuery.next().then((o) => {\n                setMembers([\n                  ...members,\n                  ...o,\n                ]);\n              });\n            }\n          }}\n        >\n          {\n            members.map((member: Member) => (\n              <UserListItem\n                user={member}\n                key={member.userId}\n                currentUser={currentUser}\n                action={({ parentRef, actionRef }) => (\n                  <>\n                    {channel?.myRole === 'operator' && (\n                      <ContextMenu\n                        menuTrigger={(toggleDropdown) => (\n                          <IconButton\n                            className=\"sendbird-user-message__more__menu\"\n                            width=\"32px\"\n                            height=\"32px\"\n                            onClick={() => {\n                              toggleDropdown();\n                            }}\n                          >\n                            <Icon\n                              width=\"24px\"\n                              height=\"24px\"\n                              type={IconTypes.MORE}\n                              fillColor={IconColors.CONTENT_INVERSE}\n                            />\n                          </IconButton>\n                        )}\n                        menuItems={(closeDropdown) => (\n                          <MenuItems\n                            parentContainRef={parentRef}\n                            parentRef={actionRef} // for catching location(x, y) of MenuItems\n                            closeDropdown={closeDropdown}\n                            openLeft\n                          >\n                            <MenuItem\n                              disable={currentUser === member.userId}\n                              onClick={() => {\n                                if ((member.role !== 'operator')) {\n                                  channel?.addOperators([member.userId]).then(() => {\n                                    setMembers(members.map(m => {\n                                      if (m.userId === member.userId) {\n                                        return {\n                                          ...member,\n                                          role: 'operator',\n                                        };\n                                      }\n                                      return m;\n                                    }));\n                                    closeDropdown();\n                                  });\n                                } else {\n                                  channel?.removeOperators([member.userId]).then(() => {\n                                    setMembers(members.map(m => {\n                                      if (m.userId === member.userId) {\n                                        return {\n                                          ...member,\n                                          role: '',\n                                        };\n                                      }\n                                      return m;\n                                    }));\n                                    closeDropdown();\n                                  });\n                                }\n                              }}\n                              dataSbId={`channel_setting_member_context_menu_${(\n                                member.role !== 'operator'\n                              ) ? 'register_as_operator' : 'unregister_operator'}`}\n                            >\n                              {\n                                member.role !== 'operator'\n                                  ? stringSet.CHANNEL_SETTING__MODERATION__REGISTER_AS_OPERATOR\n                                  : stringSet.CHANNEL_SETTING__MODERATION__UNREGISTER_OPERATOR\n                              }\n                            </MenuItem>\n                            {\n                              // No muted members in broadcast channel\n                              !channel?.isBroadcast && (\n                                <MenuItem\n                                  onClick={() => {\n                                    if (member.isMuted) {\n                                      channel?.unmuteUser(member).then(() => {\n                                        setMembers(members.map(m => {\n                                          if (m.userId === member.userId) {\n                                            return {\n                                              ...member,\n                                              isMuted: false,\n                                            };\n                                          }\n                                          return m;\n                                        }));\n                                        closeDropdown();\n                                      });\n                                    } else {\n                                      channel?.muteUser(member).then(() => {\n                                        setMembers(members.map(m => {\n                                          if (m.userId === member.userId) {\n                                            return {\n                                              ...member,\n                                              isMuted: true,\n                                            };\n                                          }\n                                          return m;\n                                        }));\n                                        closeDropdown();\n                                      });\n                                    }\n                                  }}\n                                  dataSbId={`channel_setting_member_context_menu_${(\n                                    member.isMuted) ? 'unmute' : 'mute'}`\n                                  }\n                                >\n                                  {\n                                    member.isMuted\n                                      ? stringSet.CHANNEL_SETTING__MODERATION__UNMUTE\n                                      : stringSet.CHANNEL_SETTING__MODERATION__MUTE\n                                  }\n                                </MenuItem>\n                              )\n                            }\n                            <MenuItem\n                              onClick={() => {\n                                channel?.banUser(member, -1, '').then(() => {\n                                  setMembers(members.filter(({ userId }) => {\n                                    return userId !== member.userId;\n                                  }));\n                                });\n                              }}\n                              dataSbId=\"channel_setting_member_context_menu_ban\"\n                            >\n                              {stringSet.CHANNEL_SETTING__MODERATION__BAN}\n                            </MenuItem>\n                          </MenuItems>\n                        )}\n                      />\n                    )}\n                  </>\n                )}\n              />\n            ))\n          }\n        </div>\n      </Modal>\n    </div>\n  );\n}\n","import React, { ReactElement, useEffect, useState } from 'react';\n\nimport Modal from '../../../../ui/Modal';\nimport { ButtonTypes } from '../../../../ui/Button';\nimport UserListItem from '../../../../ui/UserListItem';\nimport { useChannelSettingsContext } from '../../context/ChannelSettingsProvider';\nimport useSendbirdStateContext from '../../../../hooks/useSendbirdStateContext';\nimport { useLocalization } from '../../../../lib/LocalizationContext';\n\ninterface Props {\n  onCancel(): void;\n  onSubmit(members: Array<string>): void;\n}\n\nconst isAboutSame = (a, b, px) => (Math.abs(a - b) <= px);\n\nexport default function InviteUsers({\n  onCancel,\n  onSubmit,\n}: Props): ReactElement {\n  const [members, setMembers] = useState([]);\n  const [selectedMembers, setSelectedMembers] = useState({});\n  const [userQuery, setUserQuery] = useState(null);\n\n  const state = useSendbirdStateContext();\n  const sdk = state?.stores?.sdkStore?.sdk;\n  const globalUserListQuery = state?.config?.userListQuery;\n\n  const { channel, overrideInviteUser, queries } = useChannelSettingsContext();\n  const userFilledQuery = {\n    ...queries?.applicationUserListQuery,\n  };\n  const { stringSet } = useLocalization();\n\n  useEffect(() => {\n    const userListQuery = globalUserListQuery\n      ? globalUserListQuery()\n      : sdk?.createApplicationUserListQuery(userFilledQuery);\n    if (userListQuery?.next) {\n      userListQuery.next().then((members) => {\n        setMembers(members);\n      });\n      setUserQuery(userListQuery);\n    }\n  }, [sdk]);\n  return (\n    <div>\n      <Modal\n        isFullScreenOnMobile\n        disabled={Object.keys(selectedMembers).length === 0}\n        submitText={stringSet.BUTTON__INVITE}\n        type={ButtonTypes.PRIMARY}\n        onCancel={() => onCancel()}\n        onSubmit={() => {\n          const members = Object.keys(selectedMembers).filter((m) => selectedMembers[m]);\n          if (typeof overrideInviteUser === 'function') {\n            overrideInviteUser({\n              users: members,\n              onClose: onCancel,\n              channel,\n            });\n            return;\n          }\n          channel?.inviteWithUserIds(members).then(() => {\n            onSubmit(members);\n          });\n        }}\n        titleText={stringSet.CHANNEL_SETTING__MEMBERS__SELECT_TITLE}\n      >\n        <div\n          className=\"sendbird-more-members__popup-scroll\"\n          onScroll={(e) => {\n            const { hasNext } = userQuery;\n            const target = e.target as HTMLTextAreaElement;\n            const fetchMore = isAboutSame(target.clientHeight + target.scrollTop, target.scrollHeight, 20);\n            if (hasNext && fetchMore) {\n              userQuery.next().then((users) => {\n                setMembers([\n                  ...members,\n                  ...users,\n                ]);\n              });\n            }\n          }}\n        >\n          <div className=\"sendbird-more-members__popup-scroll__inner\">\n            {members.map((member) => {\n              const isJoinedMember = channel?.members?.some(({ userId }) => userId === member?.userId);\n              return (\n                <UserListItem\n                  checkBox\n                  checked={isJoinedMember || selectedMembers[member.userId]}\n                  disabled={isJoinedMember}\n                  onChange={\n                    (event) => {\n                      const modifiedSelectedMembers = {\n                        ...selectedMembers,\n                        [event.target.id]: event.target.checked,\n                      };\n                      if (!event.target.checked) {\n                        delete modifiedSelectedMembers[event.target.id];\n                      }\n                      setSelectedMembers(modifiedSelectedMembers);\n                    }\n                  }\n                  user={member}\n                  key={member.userId}\n                />\n              );\n            })}\n          </div>\n        </div>\n      </Modal>\n    </div>\n  );\n}\n","import React, {\n  ReactElement,\n  useEffect,\n  useState,\n  useCallback,\n  useContext,\n} from 'react';\nimport type { Member } from '@sendbird/chat/groupChannel';\n\nimport Button, { ButtonTypes, ButtonSizes } from '../../../../ui/Button';\nimport IconButton from '../../../../ui/IconButton';\nimport Icon, { IconTypes, IconColors } from '../../../../ui/Icon';\nimport ContextMenu, { MenuItem, MenuItems } from '../../../../ui/ContextMenu';\n\nimport UserListItem from '../UserListItem';\nimport MembersModal from './MembersModal';\nimport InviteUsers from './InviteUsersModal';\nimport useSendbirdStateContext from '../../../../hooks/useSendbirdStateContext';\nimport { useChannelSettingsContext } from '../../context/ChannelSettingsProvider';\nimport { LocalizationContext } from '../../../../lib/LocalizationContext';\nimport uuidv4 from '../../../../utils/uuid';\n\nexport const MemberList = (): ReactElement => {\n  const [members, setMembers] = useState<Array<Member>>([]);\n  const [hasNext, setHasNext] = useState(false);\n  const [showAllMembers, setShowAllMembers] = useState(false);\n  const [showInviteUsers, setShowInviteUsers] = useState(false);\n\n  const state = useSendbirdStateContext();\n  const {\n    channel,\n    setChannelUpdateId,\n  } = useChannelSettingsContext();\n  const { stringSet } = useContext(LocalizationContext);\n\n  const sdk = state?.stores?.sdkStore?.sdk;\n  const userId = state?.config?.userId;\n\n  useEffect(() => {\n    if (!channel) {\n      setMembers([]);\n      return;\n    }\n\n    const memberUserListQuery = channel?.createMemberListQuery({ limit: 10 });\n    memberUserListQuery.next().then((members) => {\n      setMembers(members);\n      setHasNext(memberUserListQuery.hasNext);\n    });\n  }, [channel]);\n\n  const refreshList = useCallback(() => {\n    if (!channel) {\n      setMembers([]);\n      return;\n    }\n    const memberUserListQuery = channel?.createMemberListQuery({ limit: 10 });\n    memberUserListQuery.next().then((members) => {\n      setMembers(members);\n      setHasNext(memberUserListQuery.hasNext);\n      setChannelUpdateId(uuidv4());\n    });\n  }, [channel]);\n\n  return (\n    <div className=\"sendbird-channel-settings-member-list sendbird-accordion\">\n      {\n        members.map((member) => (\n          <UserListItem\n            key={member.userId}\n            user={member}\n            currentUser={sdk.currentUser.userId}\n            action={\n              (channel?.myRole === 'operator' && userId !== member.userId)\n                ? ({ actionRef, parentRef }) => (\n                  <ContextMenu\n                    menuTrigger={(toggleDropdown) => (\n                      <IconButton\n                        className=\"sendbird-user-message__more__menu\"\n                        width=\"32px\"\n                        height=\"32px\"\n                        onClick={toggleDropdown}\n                      >\n                        <Icon\n                          width=\"24px\"\n                          height=\"24px\"\n                          type={IconTypes.MORE}\n                          fillColor={IconColors.CONTENT_INVERSE}\n                        />\n                      </IconButton>\n                    )}\n                    menuItems={(closeDropdown) => (\n                      <MenuItems\n                        parentContainRef={parentRef}\n                        parentRef={actionRef} // for catching location(x, y) of MenuItems\n                        closeDropdown={closeDropdown}\n                        openLeft\n                      >\n                        <MenuItem\n                          onClick={() => {\n                            if ((member.role !== 'operator')) {\n                              channel?.addOperators([member.userId]).then(() => {\n                                refreshList();\n                                closeDropdown();\n                              });\n                            } else {\n                              channel?.removeOperators([member.userId]).then(() => {\n                                refreshList();\n                                closeDropdown();\n                              });\n                            }\n                          }}\n                          dataSbId={`channel_setting_member_context_menu_${(\n                            member.role !== 'operator'\n                          ) ? 'register_as_operator' : 'unregister_operator'}`}\n                        >\n                          {\n                            member.role !== 'operator'\n                              ? stringSet.CHANNEL_SETTING__MODERATION__REGISTER_AS_OPERATOR\n                              : stringSet.CHANNEL_SETTING__MODERATION__UNREGISTER_OPERATOR\n                          }\n                        </MenuItem>\n                        {\n                          // No muted members in broadcast channel\n                          !channel?.isBroadcast && (\n                            <MenuItem\n                              onClick={() => {\n                                if (member.isMuted) {\n                                  channel?.unmuteUser(member).then(() => {\n                                    refreshList();\n                                    closeDropdown();\n                                  });\n                                } else {\n                                  channel?.muteUser(member).then(() => {\n                                    refreshList();\n                                    closeDropdown();\n                                  });\n                                }\n                              }}\n                              dataSbId={`channel_setting_member_context_menu_${(\n                                member.isMuted) ? 'unmute' : 'mute'}`\n                              }\n                            >\n                              {\n                                member.isMuted\n                                  ? stringSet.CHANNEL_SETTING__MODERATION__UNMUTE\n                                  : stringSet.CHANNEL_SETTING__MODERATION__MUTE\n                              }\n                            </MenuItem>\n                          )\n                        }\n                        <MenuItem\n                          onClick={() => {\n                            channel?.banUser(member, -1, '').then(() => {\n                              refreshList();\n                              closeDropdown();\n                            });\n                          }}\n                          dataSbId=\"channel_setting_member_context_menu_ban\"\n                        >\n                          {stringSet.CHANNEL_SETTING__MODERATION__BAN}\n                        </MenuItem>\n                      </MenuItems>\n                    )}\n                  />\n                )\n                : null\n            }\n          />\n        ))\n      }\n      <div\n        className=\"sendbird-channel-settings-accordion__footer\"\n      >\n        {\n          hasNext && (\n            <Button\n              type={ButtonTypes.SECONDARY}\n              size={ButtonSizes.SMALL}\n              onClick={() => setShowAllMembers(true)}\n            >\n              {stringSet.CHANNEL_SETTING__MEMBERS__SEE_ALL_MEMBERS}\n            </Button>\n          )\n        }\n        <Button\n          type={ButtonTypes.SECONDARY}\n          size={ButtonSizes.SMALL}\n          onClick={() => setShowInviteUsers(true)}\n        >\n          {stringSet.CHANNEL_SETTING__MEMBERS__INVITE_MEMBER}\n        </Button>\n      </div>\n      {\n        showAllMembers && (\n          <MembersModal\n            onCancel={() => {\n              setShowAllMembers(false);\n              refreshList();\n            }}\n          />\n        )\n      }\n      {\n        showInviteUsers && (\n          <InviteUsers\n            onSubmit={() => {\n              setShowInviteUsers(false);\n              refreshList();\n            }}\n            onCancel={() => setShowInviteUsers(false)}\n          />\n        )\n      }\n    </div>\n  );\n};\n\nexport default MemberList;\n"],"names":["MembersModal","_a","onCancel","_c","useState","members","setMembers","_d","memberQuery","setMemberQuery","channel","useChannelSettingsContext","state","useSendbirdStateContext","currentUser","_b","config","userId","stringSet","useContext","LocalizationContext","useEffect","memberListQuery","createMemberListQuery","limit","next","then","React","createElement","Modal","isFullScreenOnMobile","hideFooter","onSubmit","noop","titleText","CHANNEL_SETTING__MEMBERS__SEE_ALL_MEMBERS","className","onScroll","e","hasNext","target","fetchMore","clientHeight","scrollTop","scrollHeight","o","__spreadArray","map","member","UserListItem","user","key","action","parentRef","actionRef","Fragment","myRole","ContextMenu","menuTrigger","toggleDropdown","IconButton","width","height","onClick","Icon","type","IconTypes","MORE","fillColor","IconColors","CONTENT_INVERSE","menuItems","closeDropdown","MenuItems","parentContainRef","openLeft","MenuItem","disable","role","addOperators","m","__assign","removeOperators","dataSbId","concat","CHANNEL_SETTING__MODERATION__REGISTER_AS_OPERATOR","CHANNEL_SETTING__MODERATION__UNREGISTER_OPERATOR","isBroadcast","isMuted","unmuteUser","muteUser","CHANNEL_SETTING__MODERATION__UNMUTE","CHANNEL_SETTING__MODERATION__MUTE","banUser","filter","CHANNEL_SETTING__MODERATION__BAN","isAboutSame","a","b","px","Math","abs","InviteUsers","_e","_f","selectedMembers","setSelectedMembers","_g","userQuery","setUserQuery","sdk","stores","sdkStore","globalUserListQuery","userListQuery","_h","overrideInviteUser","queries","userFilledQuery","applicationUserListQuery","useLocalization","createApplicationUserListQuery","disabled","Object","keys","length","submitText","BUTTON__INVITE","ButtonTypes","PRIMARY","users","onClose","inviteWithUserIds","CHANNEL_SETTING__MEMBERS__SELECT_TITLE","isJoinedMember","some","checkBox","checked","onChange","event","modifiedSelectedMembers","id","MemberList","setHasNext","showAllMembers","setShowAllMembers","showInviteUsers","setShowInviteUsers","setChannelUpdateId","memberUserListQuery","refreshList","useCallback","uuidv4","Button","SECONDARY","size","ButtonSizes","SMALL","CHANNEL_SETTING__MEMBERS__INVITE_MEMBER"],"mappings":"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"}