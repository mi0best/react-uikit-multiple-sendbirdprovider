{"version":3,"file":"OpenChannelMessage.js","sources":["../../../../src/modules/OpenChannel/components/OpenChannelMessage/RemoveMessageModal.tsx","../../../../src/modules/OpenChannel/components/OpenChannelMessage/utils.ts","../../../../src/modules/OpenChannel/components/OpenChannelMessage/index.tsx"],"sourcesContent":["import React, { useContext } from 'react';\nimport Modal from '../../../../ui/Modal';\nimport { LocalizationContext } from '../../../../lib/LocalizationContext';\nimport { ClientFileMessage, ClientUserMessage } from '../../../../types';\nimport { getModalDeleteMessageTitle } from '../../../../ui/Label/stringFormatterUtils';\nimport { CoreMessageType } from '../../../../utils';\n\ninterface Props {\n  message: CoreMessageType;\n  onCloseModal(): void;\n  onDeleteMessage(message: ClientUserMessage | ClientFileMessage, callback?: () => void): void;\n}\n\nexport default function RemoveMessageModal({\n  message,\n  onCloseModal,\n  onDeleteMessage,\n}: Props): JSX.Element {\n  const { stringSet } = useContext(LocalizationContext);\n\n  return (\n    <Modal\n      onCancel={onCloseModal}\n      onSubmit={onDeleteMessage}\n      submitText={stringSet.MESSAGE_MENU__DELETE}\n      titleText={getModalDeleteMessageTitle(stringSet, message)}\n    />\n  );\n}\n","import { FileMessage } from '@sendbird/chat/message';\nimport { isImage, isVideo } from '../../../../ui/FileViewer/types';\nimport { CoreMessageType } from '../../../../utils';\n\nexport const MessageTypes = {\n  ADMIN: 'ADMIN',\n  USER: 'USER',\n  FILE: 'FILE',\n  THUMBNAIL: 'THUMBNAIL',\n  OG: 'OG',\n  UNKNOWN: 'UNKNOWN',\n};\n\nexport const SendingMessageStatus = {\n  NONE: 'none',\n  SUCCEEDED: 'succeeded',\n  FAILED: 'failed',\n  PENDING: 'pending',\n};\n\ntype MessageTypeOptions = {\n  isOgMessageEnabledInOpenChannel?: boolean;\n};\n\nexport const getMessageType = (\n  message: CoreMessageType,\n  options?: MessageTypeOptions,\n): string => {\n  const isOgMessageEnabledInOpenChannel = options?.isOgMessageEnabledInOpenChannel;\n  if ((message?.isUserMessage?.()) || message?.messageType === 'user') {\n    return (message?.ogMetaData && isOgMessageEnabledInOpenChannel)\n      ? MessageTypes.OG\n      : MessageTypes.USER;\n  }\n  if (message?.isAdminMessage?.()) {\n    return MessageTypes.ADMIN;\n  }\n  if (message?.messageType === 'file') {\n    return (isImage((message as FileMessage).type) || isVideo((message as FileMessage).type))\n      ? MessageTypes.THUMBNAIL\n      : MessageTypes.FILE;\n  }\n  return MessageTypes.UNKNOWN;\n};\n\nexport default {\n  MessageTypes,\n  SendingMessageStatus,\n  getMessageType,\n};\n","import React, {\n  useState,\n  useRef,\n  ReactElement,\n  useMemo,\n} from 'react';\nimport { AdminMessage, FileMessage, UserMessage } from '@sendbird/chat/message';\nimport { User } from '@sendbird/chat';\nimport format from 'date-fns/format';\n\nimport OpenChannelUserMessage from '../../../../ui/OpenchannelUserMessage';\nimport OpenChannelAdminMessage from '../../../../ui/OpenChannelAdminMessage';\nimport OpenChannelOGMessage from '../../../../ui/OpenchannelOGMessage';\nimport OpenChannelThumbnailMessage from '../../../../ui/OpenchannelThumbnailMessage';\nimport OpenChannelFileMessage from '../../../../ui/OpenchannelFileMessage';\n// import UnknownMessage from '../../../../ui/UnknownMessage';\n\nimport DateSeparator from '../../../../ui/DateSeparator';\nimport Label, { LabelTypography, LabelColors } from '../../../../ui/Label';\nimport MessageInput from '../../../../ui/MessageInput';\nimport FileViewer from '../../../../ui/FileViewer';\n\nimport RemoveMessageModal from './RemoveMessageModal';\nimport {\n  MessageTypes,\n  SendingMessageStatus,\n  getMessageType,\n} from './utils';\nimport { useOpenChannelContext } from '../../context/OpenChannelProvider';\nimport useSendbirdStateContext from '../../../../hooks/useSendbirdStateContext';\nimport type { RenderMessageProps } from '../../../../types';\nimport { useLocalization } from '../../../../lib/LocalizationContext';\nimport { CoreMessageType, SendableMessageType } from '../../../../utils';\n\nexport type OpenChannelMessageProps = {\n  renderMessage?: (props: RenderMessageProps) => React.ElementType<RenderMessageProps>;\n  message: CoreMessageType;\n  chainTop?: boolean;\n  chainBottom?: boolean;\n  hasSeparator?: boolean;\n  editDisabled?: boolean;\n};\n\nexport default function MessagOpenChannelMessageeHoc(props: OpenChannelMessageProps): ReactElement {\n  const {\n    message,\n    chainTop,\n    chainBottom,\n    hasSeparator,\n    renderMessage,\n  } = props;\n\n  const {\n    currentOpenChannel,\n    deleteMessage,\n    updateMessage,\n    resendMessage,\n  } = useOpenChannelContext();\n  const { dateLocale } = useLocalization();\n  const editDisabled = currentOpenChannel?.isFrozen;\n\n  const globalState = useSendbirdStateContext();\n  const currentUserId = globalState?.config?.userId;\n  const isOgMessageEnabledInOpenChannel = globalState.config.openChannel.enableOgtag;\n\n  let sender: User = null;\n  if (message?.messageType !== 'admin') {\n    sender = (message as SendableMessageType)?.sender;\n  }\n\n  const RenderedMessage = useMemo(() => (props: RenderMessageProps) => {\n    return (\n      <>\n        {\n          renderMessage\n            ? (renderMessage(props))\n            : null\n        }\n      </>\n    );\n  }, [message, renderMessage]);\n\n  const [showEdit, setShowEdit] = useState(false);\n  const [showRemove, setShowRemove] = useState(false);\n  const [showFileViewer, setShowFileViewer] = useState(false);\n  const editMessageInputRef = useRef(null);\n\n  let isByMe = false;\n\n  if (sender && message?.messageType !== 'admin') {\n    // pending and failed messages are by me\n    isByMe = (currentUserId === sender.userId)\n      || ((message as SendableMessageType)?.sendingStatus === SendingMessageStatus.PENDING)\n      || ((message as SendableMessageType)?.sendingStatus === SendingMessageStatus.FAILED);\n  }\n\n  if (renderMessage && RenderedMessage) {\n    return (\n      <div className=\"sendbird-msg-hoc sendbird-msg--scroll-ref\">\n        <RenderedMessage message={message} chainTop={chainTop} chainBottom={chainBottom} />\n      </div>\n    );\n  }\n\n  if (message?.messageType === 'user' && showEdit) {\n    return (\n      <MessageInput\n        isEdit\n        channel={currentOpenChannel}\n        disabled={editDisabled}\n        ref={editMessageInputRef}\n        message={message as UserMessage}\n        name={message?.messageId}\n        onUpdateMessage={({ messageId, message }) => {\n          updateMessage(messageId, message);\n          setShowEdit(false);\n        }}\n        onCancelEdit={() => { setShowEdit(false); }}\n      />\n    );\n  }\n\n  return (\n    <div className=\"sendbird-msg-hoc sendbird-msg--scroll-ref\">\n      {/* date-separator */}\n      {\n        (hasSeparator && message?.createdAt) && (\n          <DateSeparator>\n            <Label type={LabelTypography.CAPTION_2} color={LabelColors.ONBACKGROUND_2}>\n              {format(message?.createdAt, 'MMMM dd, yyyy', {\n                locale: dateLocale,\n              })}\n            </Label>\n          </DateSeparator>\n        )\n      }\n      {/* Message */}\n      {\n        {\n          [MessageTypes.ADMIN]: (() => {\n            if (message?.messageType === 'admin') {\n              return (\n                <OpenChannelAdminMessage message={message as AdminMessage} />\n              );\n            }\n          })(),\n          [MessageTypes.FILE]: (() => {\n            if (message?.messageType === 'file') {\n              return (\n                <OpenChannelFileMessage\n                  message={message as FileMessage}\n                  isOperator={currentOpenChannel?.isOperator((message as FileMessage)?.sender?.userId)}\n                  isEphemeral={currentOpenChannel?.isEphemeral}\n                  disabled={editDisabled}\n                  userId={currentUserId}\n                  showRemove={setShowRemove}\n                  resendMessage={resendMessage}\n                  chainTop={chainTop}\n                  chainBottom={chainBottom}\n                />\n              );\n            }\n          })(),\n          [MessageTypes.OG]: (() => {\n            if (message?.messageType === 'user' && isOgMessageEnabledInOpenChannel) {\n              return (\n                <OpenChannelOGMessage\n                  message={message as UserMessage}\n                  isOperator={currentOpenChannel?.isOperator((message as UserMessage)?.sender?.userId)}\n                  isEphemeral={currentOpenChannel?.isEphemeral}\n                  userId={currentUserId}\n                  showEdit={setShowEdit}\n                  disabled={editDisabled}\n                  showRemove={setShowRemove}\n                  resendMessage={resendMessage}\n                  chainTop={chainTop}\n                  chainBottom={chainBottom}\n                />\n              );\n            }\n          })(),\n          [MessageTypes.THUMBNAIL]: (() => {\n            if (message?.messageType === 'file') {\n              return (\n                <OpenChannelThumbnailMessage\n                  message={message as FileMessage}\n                  isOperator={currentOpenChannel?.isOperator((message as FileMessage)?.sender?.userId)}\n                  isEphemeral={currentOpenChannel?.isEphemeral}\n                  disabled={editDisabled}\n                  userId={currentUserId}\n                  showRemove={setShowRemove}\n                  resendMessage={resendMessage}\n                  onClick={setShowFileViewer}\n                  chainTop={chainTop}\n                  chainBottom={chainBottom}\n                />\n              );\n            }\n          })(),\n          [MessageTypes.USER]: (() => {\n            if (message?.messageType === 'user') {\n              return (\n                <OpenChannelUserMessage\n                  message={message as UserMessage}\n                  isOperator={currentOpenChannel?.isOperator((message as UserMessage)?.sender?.userId)}\n                  isEphemeral={currentOpenChannel?.isEphemeral}\n                  userId={currentUserId}\n                  disabled={editDisabled}\n                  showEdit={setShowEdit}\n                  showRemove={setShowRemove}\n                  resendMessage={resendMessage}\n                  chainTop={chainTop}\n                  chainBottom={chainBottom}\n                />\n              );\n            }\n          })(),\n          [MessageTypes.UNKNOWN]: (() => {\n            // return (\n            //   <OpenChannelUnknownMessage message={message} />\n            // );\n          })(),\n        }[getMessageType(message, { isOgMessageEnabledInOpenChannel })]\n      }\n      {/* Modal */}\n      {\n        showRemove && (\n          <RemoveMessageModal\n            message={message}\n            onCloseModal={() => setShowRemove(false)}\n            onDeleteMessage={() => {\n              if (message?.messageType !== 'admin') {\n                deleteMessage(message);\n              }\n            }}\n          />\n        )\n      }\n      {\n        (showFileViewer && message?.messageType === 'file') && (\n          <FileViewer\n            onClose={() => setShowFileViewer(false)}\n            message={message as FileMessage}\n            onDelete={() => deleteMessage(message)}\n            isByMe={isByMe}\n          />\n        )\n      }\n      {/* {\n        !((message?.isFileMessage && message?.isFileMessage()) || message?.messageType === 'file')\n        && !(message?.isAdminMessage && message?.isAdminMessage())\n        && !(((message?.isUserMessage && message?.isUserMessage()) || message?.messageType === 'user'))\n        && !(showFileViewer)\n        && (\n          <UnknownMessage\n            message={message}\n            isByMe={isByMe}\n            showRemove={setShowRemove}\n            chainTop={chainTop}\n            chainBottom={chainBottom}\n          />\n        )\n      } */}\n    </div>\n  );\n}\n"],"names":["RemoveMessageModal","_a","message","onCloseModal","onDeleteMessage","stringSet","useContext","LocalizationContext","React","createElement","Modal","onCancel","onSubmit","submitText","MESSAGE_MENU__DELETE","titleText","getModalDeleteMessageTitle","MessageTypes","ADMIN","USER","FILE","THUMBNAIL","OG","UNKNOWN","SendingMessageStatus","NONE","SUCCEEDED","FAILED","PENDING","getMessageType","options","isOgMessageEnabledInOpenChannel","isUserMessage","call","messageType","ogMetaData","_b","isAdminMessage","isImage","type","isVideo","MessagOpenChannelMessageeHoc","props","chainTop","chainBottom","hasSeparator","renderMessage","_c","useOpenChannelContext","currentOpenChannel","deleteMessage","updateMessage","resendMessage","dateLocale","useLocalization","editDisabled","isFrozen","globalState","useSendbirdStateContext","currentUserId","config","userId","openChannel","enableOgtag","sender","RenderedMessage","useMemo","Fragment","_d","useState","showEdit","setShowEdit","_e","showRemove","setShowRemove","_f","showFileViewer","setShowFileViewer","editMessageInputRef","useRef","isByMe","sendingStatus","className","MessageInput","isEdit","channel","disabled","ref","name","messageId","onUpdateMessage","onCancelEdit","createdAt","DateSeparator","Label","LabelTypography","CAPTION_2","color","LabelColors","ONBACKGROUND_2","format","locale","OpenChannelAdminMessage","OpenChannelFileMessage","isOperator","isEphemeral","OpenChannelOGMessage","OpenChannelThumbnailMessage","onClick","OpenChannelUserMessage","FileViewer","onClose","onDelete"],"mappings":"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"}