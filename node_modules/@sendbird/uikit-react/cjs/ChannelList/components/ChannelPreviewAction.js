'use strict';

var React = require('react');
var LocalizationContext = require('../../LocalizationContext-58b6ed7c.js');
var ui_ContextMenu = require('../../ui/ContextMenu.js');
var ui_IconButton = require('../../ui/IconButton.js');
var ui_Icon = require('../../ui/Icon.js');
var useSendbirdStateContext = require('../../useSendbirdStateContext.js');
var utils = require('../../utils-eb6d90e0.js');
var ui_Modal = require('../../ui/Modal.js');
var ChannelList_context = require('../../ChannelListProvider-d0ad5a84.js');
require('../../stringSet-1539ac47.js');
require('../../index-e8928da6.js');
require('../../tslib.es6-c74b513f.js');
require('react-dom');
require('../../ui/SortByRow.js');
require('../../uuid-9a117e16.js');
require('../../index-dbe8dd84.js');
require('../../utils/message/getOutgoingMessageState.js');
require('../../index-54279ec2.js');
require('../../index-b5a9b4b7.js');
require('prop-types');
require('../../withSendbird.js');
require('../../index-b8ba4548.js');
require('../../MediaQueryContext-6141d955.js');
require('../../ui/Button.js');
require('../../types-d0d770c3.js');
require('@sendbird/chat/groupChannel');
require('../../pubSub/topics.js');
require('../../consts-f54b15c2.js');
require('../../UserProfileContext-c6d7abb7.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var React__default = /*#__PURE__*/_interopDefaultLegacy(React);

var LeaveChannel = function (props) {
  var _a, _b, _c;
  var _d = props.channel,
    channel = _d === void 0 ? null : _d,
    _e = props.onSubmit,
    onSubmit = _e === void 0 ? utils.noop : _e,
    _f = props.onCancel,
    onCancel = _f === void 0 ? utils.noop : _f;
  var channelFromContext = (_a = ChannelList_context.useChannelListContext()) === null || _a === void 0 ? void 0 : _a.currentChannel;
  var leavingChannel = channel || channelFromContext;
  var state = useSendbirdStateContext.useSendbirdStateContext();
  var stringSet = LocalizationContext.useLocalization().stringSet;
  var logger = (_b = state === null || state === void 0 ? void 0 : state.config) === null || _b === void 0 ? void 0 : _b.logger;
  var isOnline = (_c = state === null || state === void 0 ? void 0 : state.config) === null || _c === void 0 ? void 0 : _c.isOnline;
  if (leavingChannel) {
    return /*#__PURE__*/React__default["default"].createElement(ui_Modal.Modal, {
      disabled: !isOnline,
      onCancel: onCancel,
      onSubmit: function () {
        logger.info('ChannelSettings: Leaving channel', leavingChannel);
        leavingChannel === null || leavingChannel === void 0 ? void 0 : leavingChannel.leave().then(function () {
          logger.info('ChannelSettings: Leaving channel successful!', leavingChannel);
          onSubmit();
        });
      },
      submitText: stringSet.MODAL__LEAVE_CHANNEL__FOOTER,
      titleText: stringSet.MODAL__LEAVE_CHANNEL__TITLE
    });
  }
};

function ChannelPreviewAction(_a) {
  var channel = _a.channel,
    _b = _a.disabled,
    disabled = _b === void 0 ? false : _b,
    onLeaveChannel = _a.onLeaveChannel;
  var parentRef = React.useRef(null);
  var parentContainerRef = React.useRef(null);
  var _c = React.useState(false),
    showModal = _c[0],
    setShowModal = _c[1];
  var stringSet = React.useContext(LocalizationContext.LocalizationContext).stringSet;
  return /*#__PURE__*/React__default["default"].createElement("div", {
    ref: parentContainerRef,
    tabIndex: 0,
    role: "button",
    style: {
      display: 'inline-block'
    },
    onKeyDown: function (e) {
      return e.stopPropagation();
    },
    onClick: function (e) {
      return e.stopPropagation();
    }
  }, /*#__PURE__*/React__default["default"].createElement(ui_ContextMenu["default"], {
    menuTrigger: function (toggleDropdown) {
      return /*#__PURE__*/React__default["default"].createElement(ui_IconButton, {
        ref: parentRef,
        onClick: toggleDropdown,
        height: "32px",
        width: "32px"
      }, /*#__PURE__*/React__default["default"].createElement(ui_Icon["default"], {
        type: ui_Icon.IconTypes.MORE,
        fillColor: ui_Icon.IconColors.PRIMARY,
        width: "24px",
        height: "24px"
      }));
    },
    menuItems: function (closeDropdown) {
      return /*#__PURE__*/React__default["default"].createElement(ui_ContextMenu.MenuItems, {
        parentRef: parentRef,
        parentContainRef: parentContainerRef,
        closeDropdown: closeDropdown
      }, /*#__PURE__*/React__default["default"].createElement(ui_ContextMenu.MenuItem, {
        onClick: function () {
          if (disabled) {
            return;
          }
          setShowModal(true);
          closeDropdown();
        },
        dataSbId: "channel_list_item_context_menu_leave_channel"
      }, stringSet.CHANNEL_SETTING__LEAVE_CHANNEL__TITLE));
    }
  }), showModal && /*#__PURE__*/React__default["default"].createElement(LeaveChannel, {
    channel: channel,
    onSubmit: function () {
      setShowModal(false);
      onLeaveChannel();
    },
    onCancel: function () {
      return setShowModal(false);
    }
  }));
}

module.exports = ChannelPreviewAction;
//# sourceMappingURL=ChannelPreviewAction.js.map
