'use strict';

var React = require('react');
var ChannelList_components_ChannelListHeader = require('./ChannelListHeader.js');
var ChannelList_components_AddChannel = require('./AddChannel.js');
var ChannelList_components_ChannelPreview = require('./ChannelPreview.js');
var ChannelList_components_ChannelPreviewAction = require('./ChannelPreviewAction.js');
var ChannelList_context = require('../../ChannelListProvider-d0ad5a84.js');
var useSendbirdStateContext = require('../../useSendbirdStateContext.js');
var EditUserProfile = require('../../EditUserProfile.js');
var ui_PlaceHolder = require('../../ui/PlaceHolder.js');
var utils = require('../../utils-eb6d90e0.js');
require('../../LocalizationContext-58b6ed7c.js');
require('../../stringSet-1539ac47.js');
require('../../index-e8928da6.js');
require('../../index-b5a9b4b7.js');
require('prop-types');
require('../../ui/Avatar.js');
require('../../tslib.es6-c74b513f.js');
require('../../ui/ImageRenderer.js');
require('../../ui/Icon.js');
require('../../uuid-9a117e16.js');
require('../../ui/IconButton.js');
require('../../CreateChannel.js');
require('../../CreateChannel/components/CreateChannelUI.js');
require('../../CreateChannelProvider-c3c843e4.js');
require('../../sendbirdSelectors.js');
require('../../pubSub/topics.js');
require('../../CreateChannel/components/InviteUsers.js');
require('../../ui/Modal.js');
require('react-dom');
require('../../index-54279ec2.js');
require('../../index-b8ba4548.js');
require('../../MediaQueryContext-6141d955.js');
require('../../ui/Button.js');
require('../../types-d0d770c3.js');
require('../../ui/UserListItem.js');
require('../../UserProfileContext-c6d7abb7.js');
require('../../ui/MutedAvatarOverlay.js');
require('../../ui/Checkbox.js');
require('../../ui/UserProfile.js');
require('../../ui/ContextMenu.js');
require('../../ui/SortByRow.js');
require('../../index-dbe8dd84.js');
require('../../utils/message/getOutgoingMessageState.js');
require('../../CreateChannel/components/SelectChannelType.js');
require('../../_rollupPluginBabelHelpers-f5b0dfb9.js');
require('../../ui/ChannelAvatar.js');
require('../../utils-98441ba6.js');
require('../../ui/Badge.js');
require('../../index-520e12b8.js');
require('../../index-3448df64.js');
require('../../ui/Loader.js');
require('../../index-7627b546.js');
require('../../index-134e9852.js');
require('../../ui/MentionUserLabel.js');
require('../../consts-b3c4f548.js');
require('../../ui/TextButton.js');
require('../../color-5bf5a8f5.js');
require('../../Channel/components/TypingIndicator.js');
require('@sendbird/chat/groupChannel');
require('../../ChannelProvider-fc111e5f.js');
require('../../const-c9e7a340.js');
require('../../utils-9193a195.js');
require('@sendbird/chat/message');
require('../../useSendMultipleFilesMessage-d6a3d5cf.js');
require('../../compareIds-28c6af62.js');
require('../../consts-f54b15c2.js');
require('../../resolvedReplyType-c4564ebe.js');
require('../../useLongPress-18b7af79.js');
require('../../withSendbird.js');
require('../../EditUserProfile/context.js');
require('../../EditUserProfile/components/EditUserProfileUI.js');
require('../../ui/Input.js');
require('../../actionTypes-327123b5.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var React__default = /*#__PURE__*/_interopDefaultLegacy(React);

var ChannelListUI = function (props) {
  var _a;
  var renderHeader = props.renderHeader,
    renderChannelPreview = props.renderChannelPreview,
    renderPlaceHolderError = props.renderPlaceHolderError,
    renderPlaceHolderLoading = props.renderPlaceHolderLoading,
    renderPlaceHolderEmptyList = props.renderPlaceHolderEmptyList;
  var _b = React.useState(false),
    showProfileEdit = _b[0],
    setShowProfileEdit = _b[1];
  var _c = ChannelList_context.useChannelListContext(),
    onThemeChange = _c.onThemeChange,
    allowProfileEdit = _c.allowProfileEdit,
    allChannels = _c.allChannels,
    loading = _c.loading,
    currentChannel = _c.currentChannel,
    channelListDispatcher = _c.channelListDispatcher,
    typingChannels = _c.typingChannels,
    initialized = _c.initialized,
    fetchChannelList = _c.fetchChannelList;
  var state = useSendbirdStateContext.useSendbirdStateContext();
  var sdkStore = (_a = state === null || state === void 0 ? void 0 : state.stores) === null || _a === void 0 ? void 0 : _a.sdkStore;
  var config = state === null || state === void 0 ? void 0 : state.config;
  var logger = config.logger,
    _d = config.isOnline,
    isOnline = _d === void 0 ? false : _d;
  var sdkError = sdkStore === null || sdkStore === void 0 ? void 0 : sdkStore.error;
  return /*#__PURE__*/React__default["default"].createElement(React__default["default"].Fragment, null, /*#__PURE__*/React__default["default"].createElement("div", {
    className: "sendbird-channel-list__header"
  }, (renderHeader === null || renderHeader === void 0 ? void 0 : renderHeader()) || /*#__PURE__*/React__default["default"].createElement(ChannelList_components_ChannelListHeader, {
    onEdit: function () {
      if (allowProfileEdit) {
        setShowProfileEdit(true);
      }
    },
    allowProfileEdit: allowProfileEdit,
    renderIconButton: function () {
      return /*#__PURE__*/React__default["default"].createElement(ChannelList_components_AddChannel.AddChannel, null);
    }
  })), showProfileEdit && /*#__PURE__*/React__default["default"].createElement(EditUserProfile, {
    onThemeChange: onThemeChange,
    onCancel: function () {
      setShowProfileEdit(false);
    },
    onEditProfile: function () {
      setShowProfileEdit(false);
    }
  }), /*#__PURE__*/React__default["default"].createElement("div", {
    className: "sendbird-channel-list__body",
    onScroll: function (e) {
      var target = e === null || e === void 0 ? void 0 : e.target;
      if (utils.isAboutSame(target.clientHeight + target.scrollTop, target.scrollHeight, 10)) {
        fetchChannelList();
      }
    }
  }, sdkError && !loading && (renderPlaceHolderError && typeof renderPlaceHolderError === 'function' ? renderPlaceHolderError === null || renderPlaceHolderError === void 0 ? void 0 : renderPlaceHolderError() : /*#__PURE__*/React__default["default"].createElement(ui_PlaceHolder["default"], {
    type: ui_PlaceHolder.PlaceHolderTypes.WRONG
  })), /*#__PURE__*/React__default["default"].createElement("div", null, allChannels && allChannels.map(function (channel, idx) {
    // todo: Refactor and move this inside channel - preview
    var onLeaveChannel = function (c, cb) {
      logger.info('ChannelList: Leaving channel', c);
      c.leave().then(function (res) {
        logger.info('ChannelList: Leaving channel success', res);
        if (cb && typeof cb === 'function') {
          cb(res, null);
        }
        channelListDispatcher({
          type: ChannelList_context.LEAVE_CHANNEL_SUCCESS,
          payload: channel === null || channel === void 0 ? void 0 : channel.url
        });
      }).catch(function (err) {
        logger.error('ChannelList: Leaving channel failed', err);
        if (cb && typeof cb === 'function') {
          cb(null, err);
        }
      });
    };
    var onClick = function () {
      if (!isOnline) {
        return;
      }
      logger.info('ChannelList: Clicked on channel:', channel);
      channelListDispatcher({
        type: ChannelList_context.SET_CURRENT_CHANNEL,
        payload: channel
      });
    };
    return renderChannelPreview ?
    /*#__PURE__*/
    // eslint-disable-next-line
    React__default["default"].createElement("div", {
      key: channel === null || channel === void 0 ? void 0 : channel.url,
      onClick: onClick
    }, renderChannelPreview({
      channel: channel,
      onLeaveChannel: onLeaveChannel
    })) : /*#__PURE__*/React__default["default"].createElement(ChannelList_components_ChannelPreview, {
      key: channel === null || channel === void 0 ? void 0 : channel.url,
      tabIndex: idx,
      onClick: onClick,
      channel: channel,
      onLeaveChannel: function () {
        return onLeaveChannel(channel, null);
      },
      isActive: (channel === null || channel === void 0 ? void 0 : channel.url) === (currentChannel === null || currentChannel === void 0 ? void 0 : currentChannel.url),
      isTyping: typingChannels === null || typingChannels === void 0 ? void 0 : typingChannels.some(function (_a) {
        var url = _a.url;
        return url === (channel === null || channel === void 0 ? void 0 : channel.url);
      }),
      renderChannelAction: function () {
        return /*#__PURE__*/React__default["default"].createElement(ChannelList_components_ChannelPreviewAction, {
          channel: channel,
          disabled: !isOnline,
          onLeaveChannel: function () {
            return onLeaveChannel(channel, null);
          }
        });
      }
    });
  })), !initialized && loading && (renderPlaceHolderLoading && typeof renderPlaceHolderLoading === 'function' ? renderPlaceHolderLoading === null || renderPlaceHolderLoading === void 0 ? void 0 : renderPlaceHolderLoading() : /*#__PURE__*/React__default["default"].createElement(ui_PlaceHolder["default"], {
    type: ui_PlaceHolder.PlaceHolderTypes.LOADING
  })), initialized && (allChannels === null || allChannels === void 0 ? void 0 : allChannels.length) === 0 && (renderPlaceHolderEmptyList && typeof renderPlaceHolderEmptyList === 'function' ? renderPlaceHolderEmptyList === null || renderPlaceHolderEmptyList === void 0 ? void 0 : renderPlaceHolderEmptyList() : /*#__PURE__*/React__default["default"].createElement(ui_PlaceHolder["default"], {
    type: ui_PlaceHolder.PlaceHolderTypes.NO_CHANNELS
  }))));
};

module.exports = ChannelListUI;
//# sourceMappingURL=ChannelListUI.js.map
