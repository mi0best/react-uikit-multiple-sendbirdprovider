{"version":3,"file":"index-4e939c26.js","sources":["../../src/modules/OpenChannelSettings/components/ParticipantUI/ParticipantsModal.tsx","../../src/modules/OpenChannelSettings/components/ParticipantUI/ParticipantItem.tsx","../../src/modules/OpenChannelSettings/components/ParticipantUI/index.tsx"],"sourcesContent":["import React, {\n  ReactElement,\n  useEffect,\n  useState,\n  useContext,\n} from 'react';\nimport type { Participant, User } from '@sendbird/chat';\nimport type { ParticipantListQuery } from '@sendbird/chat/openChannel';\n\nimport ContextMenu, { MenuItem, MenuItems } from '../../../../ui/ContextMenu';\nimport Modal from '../../../../ui/Modal';\nimport UserListItem from '../../../../ui/UserListItem';\nimport IconButton from '../../../../ui/IconButton';\nimport Icon, { IconTypes, IconColors } from '../../../../ui/Icon';\nimport { LocalizationContext } from '../../../../lib/LocalizationContext';\nimport { noop } from '../../../../utils/utils';\nimport { useOpenChannelSettingsContext } from '../../context/OpenChannelSettingsProvider';\nimport useSendbirdStateContext from '../../../../hooks/useSendbirdStateContext';\n\ninterface Props {\n  onCancel(): void;\n}\n\nexport default function ParticipantsModal({\n  onCancel,\n}: Props): ReactElement {\n  const state = useSendbirdStateContext();\n  const { channel } = useOpenChannelSettingsContext();\n  const { stringSet } = useContext(LocalizationContext);\n  const [participants, setParticipants] = useState<Array<User> | null>([]);\n  const [participantListQuery, setParticipantListQuery] = useState<ParticipantListQuery | null>(null);\n  const userId = state?.config?.userId;\n  const sdk = state?.stores?.sdkStore?.sdk;\n  const isOperatorView = channel?.isOperator(userId);\n  useEffect(() => {\n    if (!channel || !channel?.createParticipantListQuery) {\n      return;\n    }\n    const participantListQuery = channel?.createParticipantListQuery({});\n    setParticipantListQuery(participantListQuery);\n    participantListQuery.next().then((participantList) => {\n      setParticipants(participantList);\n    });\n  }, []);\n  return (\n    <div>\n      <Modal\n        hideFooter\n        isFullScreenOnMobile\n        onCancel={() => onCancel()}\n        onSubmit={noop}\n        titleText={stringSet.OPEN_CHANNEL_SETTINGS__ALL_PARTICIPANTS_TITLE}\n      >\n        <div\n          className=\"sendbird-more-members__popup-scroll\"\n          onScroll={(e) => {\n            const { hasNext } = participantListQuery;\n            const target = e.target as HTMLTextAreaElement;\n            const fetchMore = (\n              target.clientHeight + target.scrollTop === target.scrollHeight\n            );\n\n            if (hasNext && fetchMore) {\n              participantListQuery.next().then((fetchedParticipants) => {\n                setParticipants([\n                  ...participants,\n                  ...fetchedParticipants,\n                ]);\n              });\n            }\n          }}\n        >\n          {\n            participants.map((p: Participant) => {\n              const isOperator = channel?.isOperator(p.userId);\n              return (\n                <UserListItem\n                  user={p}\n                  key={p.userId}\n                  currentUser={sdk?.currentUser?.userId}\n                  action={\n                    (userId !== p.userId && isOperatorView)\n                      ? ({ actionRef, parentRef }) => (\n                        <ContextMenu\n                          menuTrigger={(toggleDropdown) => (\n                            <IconButton\n                              className=\"sendbird-user-message__more__menu\"\n                              width=\"32px\"\n                              height=\"32px\"\n                              onClick={toggleDropdown}\n                            >\n                              <Icon\n                                width=\"24px\"\n                                height=\"24px\"\n                                type={IconTypes.MORE}\n                                fillColor={IconColors.CONTENT_INVERSE}\n                              />\n                            </IconButton>\n                          )}\n                          menuItems={(closeDropdown) => (\n                            <MenuItems\n                              parentContainRef={parentRef}\n                              parentRef={actionRef}\n                              closeDropdown={closeDropdown}\n                              openLeft\n                            >\n                              <MenuItem\n                                onClick={() => {\n                                  if (isOperator) {\n                                    channel?.removeOperators([p.userId]).then(() => {\n                                      closeDropdown();\n                                    });\n                                  } else {\n                                    channel?.addOperators([p.userId]).then(() => {\n                                      closeDropdown();\n                                    });\n                                  }\n                                }}\n                                dataSbId={`open_channel_setting_participant_context_menu_${(\n                                  isOperator) ? 'unregister_operator' : 'register_as_operator'}`\n                                }\n                              >\n                                {\n                                  isOperator\n                                    ? stringSet.OPEN_CHANNEL_SETTING__MODERATION__UNREGISTER_OPERATOR\n                                    : stringSet.OPEN_CHANNEL_SETTING__MODERATION__REGISTER_AS_OPERATOR\n                                }\n                              </MenuItem>\n                              <MenuItem\n                                onClick={() => {\n                                  if (p.isMuted) {\n                                    channel?.unmuteUser(p).then(() => {\n                                      closeDropdown();\n                                    });\n                                  } else {\n                                    channel?.muteUser(p).then(() => {\n                                      closeDropdown();\n                                    });\n                                  }\n                                }}\n                                dataSbId={`open_channel_setting_participant_context_menu_${p.isMuted ? 'unmute' : 'mute'}`\n                                }\n                              >\n                                {\n                                  p.isMuted\n                                    ? stringSet.OPEN_CHANNEL_SETTING__MODERATION__UNMUTE\n                                    : stringSet.OPEN_CHANNEL_SETTING__MODERATION__MUTE\n                                }\n                              </MenuItem>\n                              <MenuItem\n                                onClick={() => {\n                                  channel?.banUser(p).then(() => {\n                                    closeDropdown();\n                                  });\n                                }}\n                                dataSbId=\"open_channel_setting_participant_context_menu_ban\"\n                              >\n                                {stringSet.OPEN_CHANNEL_SETTING__MODERATION__BAN}\n                              </MenuItem>\n                            </MenuItems>\n                          )}\n                        />\n                      )\n                      : null\n                  }\n                />\n              );\n            })\n          }\n        </div>\n      </Modal>\n    </div>\n  );\n}\n","import React, {\n  ReactElement,\n  useContext,\n  useEffect,\n  useRef,\n  useState,\n} from 'react';\nimport type { Participant } from '@sendbird/chat';\nimport { LocalizationContext } from '../../../../lib/LocalizationContext';\n\nimport { UserProfileContext } from '../../../../lib/UserProfileContext';\nimport Button, { ButtonTypes, ButtonSizes } from '../../../../ui/Button';\nimport Accordion from '../../../../ui/Accordion';\nimport Icon, { IconTypes, IconColors } from '../../../../ui/Icon';\nimport Avatar from '../../../../ui/Avatar/index';\nimport Label, { LabelTypography, LabelColors } from '../../../../ui/Label';\nimport ParticipantsModal from './ParticipantsModal';\nimport UserProfile from '../../../../ui/UserProfile';\nimport ContextMenu, { MenuItems } from '../../../../ui/ContextMenu';\nimport { useOpenChannelSettingsContext } from '../../context/OpenChannelSettingsProvider';\nimport useSendbirdStateContext from '../../../../hooks/useSendbirdStateContext';\nimport MutedAvatarOverlay from '../../../../ui/Avatar/MutedAvatarOverlay';\n\nconst SHOWN_MEMBER_MAX = 10;\n\ninterface ActionProps {\n  actionRef: React.RefObject<HTMLInputElement>;\n}\ninterface UserListItemProps {\n  user: Participant;\n  currentUser?: string;\n  isOperator?: boolean;\n  action?(props: ActionProps): ReactElement;\n}\n\nexport const UserListItem: React.FC<UserListItemProps> = ({\n  user,\n  currentUser,\n  isOperator,\n  action,\n}: UserListItemProps) => {\n  const avatarRef = useRef(null);\n  const actionRef = useRef(null);\n  const { disableUserProfile, renderUserProfile } = useContext(UserProfileContext);\n  const { stringSet } = useContext(LocalizationContext);\n  return (\n    <div className=\"sendbird-participants-accordion__member\">\n      <div className=\"sendbird-participants-accordion__member-avatar\">\n        <ContextMenu\n          menuTrigger={(toggleDropdown) => (\n            <>\n              <Avatar\n                className=\"sendbird-participants-accordion__member-avatar__avatar\"\n                onClick={() => {\n                  if (!disableUserProfile) {\n                    toggleDropdown();\n                  }\n                }}\n                ref={avatarRef}\n                src={user.profileUrl}\n                width={24}\n                height={24}\n              />\n              {user?.isMuted ? (<MutedAvatarOverlay />) : ''}\n            </>\n          )}\n          menuItems={(closeDropdown) => (\n            <MenuItems\n              openLeft\n              parentRef={avatarRef}\n              // for catching location(x, y) of MenuItems\n              parentContainRef={avatarRef}\n              // for toggling more options(menus & reactions)\n              closeDropdown={closeDropdown}\n              style={{ paddingTop: '0px', paddingBottom: '0px' }}\n            >\n              {\n                renderUserProfile\n                  ? renderUserProfile({\n                    user: user,\n                    currentUserId: currentUser,\n                    close: closeDropdown,\n                  })\n                  : (\n                    <UserProfile\n                      disableMessaging\n                      user={user}\n                      currentUserId={currentUser}\n                      onSuccess={closeDropdown}\n                    />\n                  )\n              }\n            </MenuItems>\n          )}\n        />\n      </div>\n      <Label\n        className=\"sendbird-participants-accordion__member__title\"\n        type={LabelTypography.SUBTITLE_2}\n        color={LabelColors.ONBACKGROUND_1}\n      >\n        {user.nickname || stringSet.NO_NAME}\n        {\n          (currentUser === user.userId) && (\n            stringSet.OPEN_CHANNEL_SETTINGS__MEMBERS__YOU\n          )\n        }\n      </Label>\n      { // if there is now nickname, display userId\n        !user.nickname && (\n          <Label\n            className=\"sendbird-participants-accordion__member__title user-id\"\n            type={LabelTypography.CAPTION_3}\n            color={LabelColors.ONBACKGROUND_2}\n          >\n            {user.userId}\n          </Label>\n        )\n      }\n      {\n        isOperator && (\n          <Label\n            className={\n              `sendbird-participants-accordion__member__title\n                ${user?.userId !== currentUser ? 'operator' : ''}\n                ${user?.userId === currentUser ? 'self-operator' : ''}\n              `\n            }\n            type={LabelTypography.SUBTITLE_2}\n            color={LabelColors.ONBACKGROUND_2}\n          >\n            {stringSet.OPEN_CHANNEL_SETTINGS__MEMBERS__OPERATOR}\n          </Label>\n        )\n      }\n      {\n        action && (\n          <div\n            className=\"sendbird-participants-accordion__member__action\"\n            ref={actionRef}\n          >\n            {action({ actionRef })}\n          </div>\n        )\n      }\n    </div>\n  );\n};\n\nexport interface ParticipantsAccordionProps {\n  maxMembers?: number;\n}\n\nexport default function ParticipantsAccordion(props: ParticipantsAccordionProps): ReactElement {\n  const maxMembers = props?.maxMembers || SHOWN_MEMBER_MAX;\n  const { channel } = useOpenChannelSettingsContext();\n  const globalState = useSendbirdStateContext();\n  const currentUserId = globalState?.config?.userId;\n  const [participants, setParticipants] = useState([]);\n  const [showMoreModal, setShowMoreModal] = useState(false);\n  const { stringSet } = useContext(LocalizationContext);\n\n  useEffect(() => {\n    if (!channel || !channel?.createParticipantListQuery) {\n      return;\n    }\n    const participantListQuery = channel?.createParticipantListQuery({});\n    participantListQuery.next().then((participantList) => {\n      setParticipants(participantList);\n    });\n  }, [channel]);\n\n  return (\n    <Accordion\n      className=\"sendbird-participants-accordion\"\n      id=\"participants\"\n      renderTitle={() => (\n        <>\n          <Icon\n            type={IconTypes.MEMBERS}\n            fillColor={IconColors.PRIMARY}\n            width={24}\n            height={24}\n            className=\"sendbird-openchannel-settings__accordion-icon\"\n          />\n          <Label\n            type={LabelTypography.SUBTITLE_1}\n            color={LabelColors.ONBACKGROUND_1}\n          >\n            {stringSet.OPEN_CHANNEL_SETTINGS__PARTICIPANTS_ACCORDION_TITLE}\n          </Label>\n        </>\n      )}\n      renderContent={() => (\n        <div className=\"\">\n          <div className=\"sendbird-participants-accordion__list\">\n            {\n              participants.slice(0, maxMembers).map((p) => (\n                <UserListItem\n                  user={p}\n                  currentUser={currentUserId}\n                  key={p.userId}\n                />\n              ))\n            }\n            {(participants && participants.length === 0)\n              ? (\n                <Label\n                  className=\"sendbird-channel-settings__empty-list\"\n                  type={LabelTypography.SUBTITLE_2}\n                  color={LabelColors.ONBACKGROUND_3}\n                >\n                  {stringSet.OPEN_CHANNEL_SETTINGS__EMPTY_LIST}\n                </Label>\n              ) : ''\n            }\n          </div>\n          {\n            participants.length >= maxMembers && (\n              <div className=\"sendbird-participants-accordion__footer\">\n                <Button\n                  className=\"sendbird-participants-accordion__footer__all-participants\"\n                  type={ButtonTypes.SECONDARY}\n                  size={ButtonSizes.SMALL}\n                  onClick={() => setShowMoreModal(true)}\n                >\n                  {stringSet.OPEN_CHANNEL_SETTINGS__SEE_ALL}\n                </Button>\n                {\n                  showMoreModal && (\n                    <ParticipantsModal\n                      onCancel={() => {\n                        setShowMoreModal(false);\n                      }}\n                    />\n                  )\n                }\n              </div>\n            )\n          }\n        </div>\n      )}\n    />\n  );\n}\n","import React, {\n  ReactElement,\n  useContext,\n  useState,\n  useEffect,\n  useCallback,\n} from 'react';\nimport type { Participant, User } from '@sendbird/chat';\nimport type { ParticipantListQuery } from '@sendbird/chat/openChannel';\n\nimport Button, { ButtonTypes, ButtonSizes } from '../../../../ui/Button';\nimport ContextMenu, { MenuItem, MenuItems } from '../../../../ui/ContextMenu';\nimport Icon, { IconTypes, IconColors } from '../../../../ui/Icon';\nimport IconButton from '../../../../ui/IconButton';\nimport Label, { LabelTypography, LabelColors } from '../../../../ui/Label';\n\nimport { UserListItem } from './ParticipantItem';\nimport ParticipantsModal from './ParticipantsModal';\nimport { LocalizationContext } from '../../../../lib/LocalizationContext';\nimport { useOpenChannelSettingsContext } from '../../context/OpenChannelSettingsProvider';\nimport useSendbirdStateContext from '../../../../hooks/useSendbirdStateContext';\n\ninterface ParticipantListProps {\n  isOperatorView?: boolean;\n}\n\nexport default function ParticipantList({\n  isOperatorView = false,\n}: ParticipantListProps): ReactElement {\n  const globalState = useSendbirdStateContext();\n  const currentUserId = globalState?.config?.userId;\n  const { channel } = useOpenChannelSettingsContext();\n  const { stringSet } = useContext(LocalizationContext);\n  const [participants, setParticipants] = useState<Array<User> | null>(null);\n  const [participantListQuery, setParticipantListQuery] = useState<ParticipantListQuery | null>(null);\n  const [showParticipantsModal, setShowParticipantsModal] = useState<boolean>(false);\n  useEffect(() => {\n    if (!channel || !channel?.createParticipantListQuery) {\n      return;\n    }\n    const participantListQuery = channel?.createParticipantListQuery({ limit: 10 });\n    setParticipantListQuery(participantListQuery);\n    participantListQuery.next().then((participants) => {\n      setParticipants(participants);\n    });\n  }, [channel]);\n  const refreshList = useCallback(() => {\n    if (!channel) {\n      setParticipants([]);\n      return;\n    }\n    const participantListQuery = channel?.createParticipantListQuery({ limit: 10 });\n    participantListQuery.next().then((participants) => {\n      setParticipants(participants);\n    });\n  }, [channel]);\n  return (\n    <div\n      className=\"sendbird-openchannel-settings__participant-list\"\n      onScroll={(e) => {\n        const { hasNext } = participantListQuery;\n        const target = e.target as HTMLTextAreaElement;\n        const fetchMore = (\n          target.clientHeight + target.scrollTop === target.scrollHeight\n        );\n\n        if (hasNext && fetchMore) {\n          participantListQuery.next().then((fetchedParticipants) => {\n            setParticipants([\n              ...participants,\n              ...fetchedParticipants,\n            ]);\n          });\n        }\n      }}\n    >\n      <div>\n        {\n          participants?.map((p: Participant) => {\n            const isOperator = channel?.isOperator(p.userId);\n            return (\n              <UserListItem\n                user={p}\n                currentUser={currentUserId}\n                key={p.userId}\n                isOperator={isOperator}\n                action={({ actionRef }) => (\n                  (isOperatorView && currentUserId !== p?.userId)\n                    ? (\n                      <ContextMenu\n                        menuTrigger={(toggleDropdown) => (\n                          <IconButton\n                            className=\"sendbird-openchannel-participant-list__menu\"\n                            width=\"32px\"\n                            height=\"32px\"\n                            onClick={toggleDropdown}\n                          >\n                            <Icon\n                              width=\"24px\"\n                              height=\"24px\"\n                              type={IconTypes.MORE}\n                              fillColor={IconColors.CONTENT_INVERSE}\n                            />\n                          </IconButton>\n                        )}\n                        menuItems={(closeDropdown) => (\n                          <MenuItems\n                            parentRef={actionRef}\n                            closeDropdown={closeDropdown}\n                            openLeft\n                          >\n                            <MenuItem\n                              onClick={() => {\n                                if (isOperator) {\n                                  channel?.removeOperators([p.userId]).then(() => {\n                                    closeDropdown();\n                                    refreshList();\n                                  });\n                                } else {\n                                  channel?.addOperators([p.userId]).then(() => {\n                                    closeDropdown();\n                                    refreshList();\n                                  });\n                                }\n                              }}\n                              dataSbId={`open_channel_setting_partitipant_conext_menu_${(\n                                isOperator) ? 'unregister_operator' : 'register_as_operator'}`\n                              }\n                            >\n                              {\n                                isOperator\n                                  ? stringSet.OPEN_CHANNEL_SETTING__MODERATION__UNREGISTER_OPERATOR\n                                  : stringSet.OPEN_CHANNEL_SETTING__MODERATION__REGISTER_AS_OPERATOR\n                              }\n                            </MenuItem>\n                            <MenuItem\n                              onClick={() => {\n                                if (p.isMuted) {\n                                  channel?.unmuteUser(p).then(() => {\n                                    closeDropdown();\n                                    refreshList();\n                                  });\n                                } else {\n                                  channel?.muteUser(p).then(() => {\n                                    closeDropdown();\n                                    refreshList();\n                                  });\n                                }\n                              }}\n                              dataSbId={`open_channel_setting_partitipant_conext_menu_${p.isMuted ? 'unmute' : 'mute'}`}\n                            >\n                              {\n                                p.isMuted\n                                  ? stringSet.OPEN_CHANNEL_SETTING__MODERATION__UNMUTE\n                                  : stringSet.OPEN_CHANNEL_SETTING__MODERATION__MUTE\n                              }\n                            </MenuItem>\n                            <MenuItem\n                              onClick={() => {\n                                channel?.banUser(p).then(() => {\n                                  closeDropdown();\n                                  refreshList();\n                                });\n                              }}\n                              dataSbId=\"open_channel_setting_partitipant_conext_menu_ban\"\n                            >\n                              {stringSet.OPEN_CHANNEL_SETTING__MODERATION__BAN}\n                            </MenuItem>\n                          </MenuItems>\n                        )}\n                      />\n                    )\n                    : null\n                )}\n              />\n            );\n          })\n        }\n        {\n          (participants && participants.length === 0)\n            ? (\n              <Label\n                className=\"sendbird-channel-settings__empty-list\"\n                type={LabelTypography.SUBTITLE_2}\n                color={LabelColors.ONBACKGROUND_3}\n              >\n                {stringSet.OPEN_CHANNEL_SETTINGS__EMPTY_LIST}\n              </Label>\n            ) : null\n        }\n        <div className=\"sendbird-openchannel-participant-list__footer\">\n          {\n            participantListQuery?.hasNext && (\n              <Button\n                type={ButtonTypes.SECONDARY}\n                size={ButtonSizes.SMALL}\n                onClick={() => setShowParticipantsModal(true)}\n              >\n                {stringSet.OPEN_CHANNEL_SETTINGS__ALL_PARTICIPANTS_TITLE}\n              </Button>\n            )\n          }\n        </div>\n        {\n          showParticipantsModal && (\n            <ParticipantsModal\n              onCancel={() => {\n                setShowParticipantsModal(false);\n                refreshList();\n              }}\n            />\n          )\n        }\n      </div>\n    </div>\n  );\n}\n"],"names":["ParticipantsModal","_a","onCancel","state","useSendbirdStateContext","channel","useOpenChannelSettingsContext","stringSet","useContext","LocalizationContext","_e","useState","participants","setParticipants","_f","participantListQuery","setParticipantListQuery","userId","_b","config","sdk","_d","_c","stores","sdkStore","isOperatorView","isOperator","useEffect","createParticipantListQuery","next","then","participantList","React","createElement","Modal","hideFooter","isFullScreenOnMobile","onSubmit","noop","titleText","OPEN_CHANNEL_SETTINGS__ALL_PARTICIPANTS_TITLE","className","onScroll","e","hasNext","target","fetchMore","clientHeight","scrollTop","scrollHeight","fetchedParticipants","__spreadArray","map","p","UserListItem","user","key","currentUser","action","actionRef","parentRef","ContextMenu","menuTrigger","toggleDropdown","IconButton","width","height","onClick","Icon","type","IconTypes","MORE","fillColor","IconColors","CONTENT_INVERSE","menuItems","closeDropdown","MenuItems","parentContainRef","openLeft","MenuItem","removeOperators","addOperators","dataSbId","concat","OPEN_CHANNEL_SETTING__MODERATION__UNREGISTER_OPERATOR","OPEN_CHANNEL_SETTING__MODERATION__REGISTER_AS_OPERATOR","isMuted","unmuteUser","muteUser","OPEN_CHANNEL_SETTING__MODERATION__UNMUTE","OPEN_CHANNEL_SETTING__MODERATION__MUTE","banUser","OPEN_CHANNEL_SETTING__MODERATION__BAN","avatarRef","useRef","UserProfileContext","disableUserProfile","renderUserProfile","Fragment","Avatar","ref","src","profileUrl","MutedAvatarOverlay","style","paddingTop","paddingBottom","currentUserId","close","UserProfile","disableMessaging","onSuccess","Label","LabelTypography","SUBTITLE_2","color","LabelColors","ONBACKGROUND_1","nickname","NO_NAME","OPEN_CHANNEL_SETTINGS__MEMBERS__YOU","CAPTION_3","ONBACKGROUND_2","OPEN_CHANNEL_SETTINGS__MEMBERS__OPERATOR","ParticipantList","globalState","showParticipantsModal","setShowParticipantsModal","limit","refreshList","useCallback","length","ONBACKGROUND_3","OPEN_CHANNEL_SETTINGS__EMPTY_LIST","Button","ButtonTypes","SECONDARY","size","ButtonSizes","SMALL"],"mappings":"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"}