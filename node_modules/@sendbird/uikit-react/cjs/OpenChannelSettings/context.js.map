{"version":3,"file":"context.js","sources":["../../../src/modules/OpenChannelSettings/context/OpenChannelSettingsProvider.tsx"],"sourcesContent":["import React, {\n  useEffect,\n  useState,\n} from 'react';\nimport { OpenChannel, OpenChannelHandler, OpenChannelUpdateParams, SendbirdOpenChat } from '@sendbird/chat/openChannel';\n\nimport useSendbirdStateContext from '../../../hooks/useSendbirdStateContext';\nimport { UserProfileProvider } from '../../../lib/UserProfileContext';\nimport { RenderUserProfileProps } from '../../../types';\nimport uuidv4 from '../../../utils/uuid';\n\nexport interface OpenChannelSettingsContextProps {\n  channelUrl: string;\n  children?: React.ReactElement;\n  onCloseClick?(): void;\n  onBeforeUpdateChannel?(currentTitle: string, currentImg: File, data: string): OpenChannelUpdateParams;\n  onChannelModified?(channel: OpenChannel): void;\n  onDeleteChannel?(channel: OpenChannel): void;\n  disableUserProfile?: boolean;\n  renderUserProfile?: (props: RenderUserProfileProps) => React.ReactElement;\n}\n\ninterface OpenChannelSettingsContextType {\n  channelUrl: string;\n  channel?: OpenChannel;\n  isChannelInitialized: boolean;\n  setChannel?: React.Dispatch<React.SetStateAction<OpenChannel>>;\n  onCloseClick?(): void;\n  onBeforeUpdateChannel?(currentTitle: string, currentImg: File, data: string): OpenChannelUpdateParams;\n  onChannelModified?(channel: OpenChannel): void;\n  onDeleteChannel?(channel: OpenChannel): void;\n}\n\nconst OpenChannelSettingsContext = React.createContext<OpenChannelSettingsContextType | null>(undefined);\n\nconst OpenChannelSettingsProvider: React.FC<OpenChannelSettingsContextProps> = (props: OpenChannelSettingsContextProps) => {\n  const {\n    children,\n    channelUrl,\n    onCloseClick,\n    onChannelModified,\n    onBeforeUpdateChannel,\n    onDeleteChannel,\n  } = props;\n\n  // fetch store from <SendbirdProvider />\n  const globalStore = useSendbirdStateContext();\n  const sdk = globalStore?.stores?.sdkStore?.sdk as SendbirdOpenChat;\n  const isSDKInitialized = globalStore?.stores?.sdkStore?.initialized;\n\n  const logger = globalStore?.config?.logger;\n  const currentUserId = sdk?.currentUser?.userId;\n\n  const [currentChannel, setChannel] = useState<OpenChannel | null>(null);\n  const [isChannelInitialized, setChannelInitialized] = useState(false);\n  useEffect(() => {\n    if (!channelUrl || !sdk.openChannel) {\n      setChannel(null);\n      return;\n    }\n\n    sdk.openChannel.getChannel(channelUrl)\n      .then((channel) => {\n        logger.info('open channel setting: fetched', channel);\n        // TODO: Add pending status\n        channel.enter()\n          .then(() => {\n            setChannel(channel);\n            logger.info('OpenChannelSettings | Succeeded to enter channel', channel?.url);\n            setChannelInitialized(true);\n          })\n          .catch((error) => {\n            setChannel(null);\n            logger.warning('OpenChannelSettings | Failed to enter channel', error);\n          });\n      })\n      .catch((error) => {\n        logger.error('open channel setting: error fetching', error);\n        setChannel(null);\n      });\n    return () => {\n      if (currentChannel && currentChannel.exit) {\n        currentChannel.exit()\n          .then(() => {\n            logger.info('OpenChannelSettings | Succeeded to exit channel', currentChannel?.url);\n          })\n          .catch((error) => {\n            logger.warning('OpenChannelSettings | Failed to exit channel', error);\n          });\n      }\n    };\n  }, [channelUrl, isSDKInitialized]);\n\n  useEffect(() => {\n    const channelHandlerId = uuidv4();\n    if (currentChannel !== null && sdk?.openChannel?.addOpenChannelHandler) {\n      const channelHandlerParams = new OpenChannelHandler({\n        onOperatorUpdated(channel) {\n          if (channel?.url === currentChannel?.url) {\n            setChannel(channel as OpenChannel);\n          }\n        },\n        onUserMuted(channel, user) {\n          if (channel?.url === currentChannel?.url && user?.userId === currentUserId) {\n            setChannel(channel as OpenChannel);\n          }\n        },\n        onUserUnmuted(channel, user) {\n          if (channel?.url === currentChannel?.url && user?.userId === currentUserId) {\n            setChannel(channel as OpenChannel);\n          }\n        },\n        onUserBanned(channel, user) {\n          if (channel?.url === currentChannel?.url && user?.userId === currentUserId) {\n            setChannel(null);\n          }\n        },\n        onUserUnbanned(channel, user) {\n          if (user?.userId === currentUserId) {\n            setChannel(channel as OpenChannel);\n          }\n        },\n        onChannelChanged(channel) {\n          if (channel?.url === currentChannel?.url) {\n            setChannel(channel as OpenChannel);\n          }\n        },\n        onChannelDeleted(channelUrl) {\n          if (channelUrl === currentChannel?.url) {\n            setChannel(null);\n          }\n        },\n      });\n      sdk.openChannel.addOpenChannelHandler(channelHandlerId, channelHandlerParams);\n    }\n    return () => {\n      if (sdk?.openChannel?.removeOpenChannelHandler && channelHandlerId) {\n        logger.info('OpenChannelSettings | Removing channel handlers', channelHandlerId);\n        sdk.openChannel.removeOpenChannelHandler?.(channelHandlerId);\n      }\n    };\n  }, [channelUrl]);\n\n  return (\n    <OpenChannelSettingsContext.Provider value={{\n      channelUrl,\n      channel: currentChannel,\n      isChannelInitialized: isChannelInitialized,\n      setChannel,\n      onCloseClick,\n      onChannelModified,\n      onBeforeUpdateChannel,\n      onDeleteChannel,\n    }}>\n      <UserProfileProvider\n        isOpenChannel\n        renderUserProfile={props?.renderUserProfile}\n        disableUserProfile={props?.disableUserProfile ?? globalStore?.config?.disableUserProfile}\n      >\n        {children}\n      </UserProfileProvider>\n    </OpenChannelSettingsContext.Provider>\n  );\n};\n\ntype useOpenChannelSettingsType = () => OpenChannelSettingsContextType;\nconst useOpenChannelSettingsContext: useOpenChannelSettingsType = () => React.useContext(OpenChannelSettingsContext);\n\nexport {\n  OpenChannelSettingsProvider,\n  useOpenChannelSettingsContext,\n};\n"],"names":["OpenChannelSettingsContext","React","createContext","undefined","OpenChannelSettingsProvider","props","children","channelUrl","onCloseClick","onChannelModified","onBeforeUpdateChannel","onDeleteChannel","globalStore","useSendbirdStateContext","sdk","_b","_a","stores","sdkStore","isSDKInitialized","_d","_c","initialized","logger","_e","config","currentUserId","_f","currentUser","userId","_j","useState","currentChannel","setChannel","_k","isChannelInitialized","setChannelInitialized","useEffect","openChannel","getChannel","then","channel","info","enter","url","catch","error","warning","exit","channelHandlerId","uuidv4","addOpenChannelHandler","channelHandlerParams","OpenChannelHandler","onOperatorUpdated","onUserMuted","user","onUserUnmuted","onUserBanned","onUserUnbanned","onChannelChanged","onChannelDeleted","removeOpenChannelHandler","call","createElement","Provider","value","UserProfileProvider","isOpenChannel","renderUserProfile","disableUserProfile","_g","_h","useOpenChannelSettingsContext","useContext"],"mappings":"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"}