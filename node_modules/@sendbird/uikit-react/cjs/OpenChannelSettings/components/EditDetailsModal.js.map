{"version":3,"file":"EditDetailsModal.js","sources":["../../../../src/modules/OpenChannelSettings/components/EditDetailsModal.tsx"],"sourcesContent":["import React, {\n  useState,\n  useRef,\n  useContext,\n  ReactElement,\n} from 'react';\nimport { OpenChannelUpdateParams } from '@sendbird/chat/openChannel';\n\nimport { LocalizationContext } from '../../../lib/LocalizationContext';\nimport pubSubTopics from '../../../lib/pubSub/topics';\nimport Modal from '../../../ui/Modal';\nimport Input, { InputLabel } from '../../../ui/Input';\nimport Avatar from '../../../ui/Avatar/index';\nimport { ButtonTypes } from '../../../ui/Button';\nimport Label, { LabelColors, LabelTypography } from '../../../ui/Label';\nimport TextButton from '../../../ui/TextButton';\nimport OpenChannelAvatar from '../../../ui/ChannelAvatar/OpenChannelAvatar';\nimport { useOpenChannelSettingsContext } from '../context/OpenChannelSettingsProvider';\nimport useSendbirdStateContext from '../../../hooks/useSendbirdStateContext';\n\ninterface Props {\n  onCancel(): void;\n}\n\nconst EditDetails = (props: Props): ReactElement => {\n  const {\n    onCancel,\n  } = props;\n  const globalState = useSendbirdStateContext();\n  const { logger, theme, pubSub } = globalState.config;\n  const {\n    channel,\n    onBeforeUpdateChannel,\n    onChannelModified,\n    setChannel,\n  } = useOpenChannelSettingsContext();\n\n  const inputRef = useRef(null);\n  const formRef = useRef(null);\n  const hiddenInputRef = useRef(null);\n  const [currentImg, setCurrentImg] = useState(null);\n  const [newFile, setNewFile] = useState(null);\n  const { stringSet } = useContext(LocalizationContext);\n  const title = channel?.name;\n  return (\n    <Modal\n      isFullScreenOnMobile\n      titleText={stringSet.MODAL__CHANNEL_INFORMATION__TITLE}\n      submitText={stringSet.BUTTON__SAVE}\n      onCancel={onCancel}\n      onSubmit={() => {\n        if (title !== '' && !inputRef.current.value) {\n          if (formRef.current.reportValidity) { // might not work in explorer\n            formRef.current.reportValidity();\n          }\n          return;\n        }\n        const currentTitle = inputRef.current.value;\n        const currentImg = newFile;\n        logger.info('ChannelSettings: Channel information being updated');\n        const params: OpenChannelUpdateParams = onBeforeUpdateChannel\n          ? onBeforeUpdateChannel(currentTitle, currentImg, channel?.data)\n          : {\n            name: currentTitle,\n            coverUrlOrImage: currentImg,\n            data: channel?.data,\n          };\n        logger.info('ChannelSettings: Updating channel information', params);\n        channel?.updateChannel(params)\n          .then((updatedChannel) => {\n            logger.info('ChannelSettings: Channel information update succeeded', updatedChannel);\n            onChannelModified?.(updatedChannel);\n            setChannel(updatedChannel);\n            pubSub?.publish(pubSubTopics.UPDATE_OPEN_CHANNEL, updatedChannel);\n          })\n          .catch((error) => {\n            logger.error('ChannelSettings: Channel infomation update failed', error);\n            setChannel(null);\n          });\n        onCancel();\n      }}\n      type={ButtonTypes.PRIMARY}\n    >\n      <form\n        className=\"channel-profile-form\"\n        ref={formRef}\n        onSubmit={(e) => { e.preventDefault(); }}\n      >\n        <div className=\"channel-profile-form__img-section\">\n          <InputLabel>\n            {stringSet.MODAL__CHANNEL_INFORMATION__CHANNEL_IMAGE}\n          </InputLabel>\n          <div className=\"channel-profile-form__avatar\">\n            {\n              currentImg\n                ? (\n                  <Avatar\n                    height=\"80px\"\n                    width=\"80px\"\n                    src={currentImg}\n                  />\n                ) : (\n                  <OpenChannelAvatar\n                    height={80}\n                    width={80}\n                    channel={channel}\n                    theme={theme}\n                  />\n                )\n            }\n          </div>\n          <input\n            ref={hiddenInputRef}\n            type=\"file\"\n            accept=\"image/gif, image/jpeg, image/png\"\n            style={{ display: 'none' }}\n            onChange={(e) => {\n              setCurrentImg(URL.createObjectURL(e.target.files[0]));\n              setNewFile(e.target.files[0]);\n              hiddenInputRef.current.value = '';\n            }}\n          />\n          <TextButton\n            className=\"channel-profile-form__avatar-button\"\n            onClick={() => hiddenInputRef.current.click()}\n            disableUnderline\n          >\n            <Label type={LabelTypography.BUTTON_1} color={LabelColors.PRIMARY}>\n              {stringSet.MODAL__CHANNEL_INFORMATION__UPLOAD}\n            </Label>\n          </TextButton>\n        </div>\n        <div className=\"channel-profile-form__name-section\">\n          <InputLabel>\n            {stringSet.MODAL__CHANNEL_INFORMATION__CHANNEL_NAME}\n          </InputLabel>\n          <Input\n            required={title !== ''}\n            name=\"channel-profile-form__name\"\n            ref={inputRef}\n            value={title}\n            placeHolder={stringSet.MODAL__CHANNEL_INFORMATION__INPUT__PLACE_HOLDER}\n          />\n        </div>\n      </form>\n    </Modal>\n  );\n};\n\nexport default EditDetails;\n"],"names":["EditDetails","props","onCancel","globalState","useSendbirdStateContext","_a","config","logger","theme","pubSub","_b","useOpenChannelSettingsContext","channel","onBeforeUpdateChannel","onChannelModified","setChannel","inputRef","useRef","formRef","hiddenInputRef","_c","useState","currentImg","setCurrentImg","_d","newFile","setNewFile","stringSet","useContext","LocalizationContext","title","name","React","createElement","Modal","isFullScreenOnMobile","titleText","MODAL__CHANNEL_INFORMATION__TITLE","submitText","BUTTON__SAVE","onSubmit","current","value","reportValidity","currentTitle","info","params","data","coverUrlOrImage","updateChannel","then","updatedChannel","publish","pubSubTopics","UPDATE_OPEN_CHANNEL","catch","error","type","ButtonTypes","PRIMARY","className","ref","e","preventDefault","InputLabel","MODAL__CHANNEL_INFORMATION__CHANNEL_IMAGE","Avatar","height","width","src","OpenChannelAvatar","accept","style","display","onChange","URL","createObjectURL","target","files","TextButton","onClick","click","disableUnderline","Label","LabelTypography","BUTTON_1","color","LabelColors","MODAL__CHANNEL_INFORMATION__UPLOAD","MODAL__CHANNEL_INFORMATION__CHANNEL_NAME","Input","required","placeHolder","MODAL__CHANNEL_INFORMATION__INPUT__PLACE_HOLDER"],"mappings":"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"}