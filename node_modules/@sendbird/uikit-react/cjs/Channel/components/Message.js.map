{"version":3,"file":"Message.js","sources":["../../../../src/utils/useDidMountEffect.ts","../../../../src/modules/Channel/components/Message/index.tsx"],"sourcesContent":["import { useEffect, useState } from 'react';\n\nconst useDidMountEffect = (func: () => void, deps: Array<unknown>): void => {\n  const [didMount, setDidmount] = useState(false);\n  useEffect(() => {\n    if (didMount) {\n      func();\n    } else {\n      setDidmount(true);\n    }\n  }, deps);\n};\n\nexport default useDidMountEffect;\n","import React, {\n  useRef,\n  useMemo,\n  useState,\n  useEffect,\n  useLayoutEffect,\n} from 'react';\nimport type { FileMessage } from '@sendbird/chat/message';\nimport format from 'date-fns/format';\n\nimport useDidMountEffect from '../../../../utils/useDidMountEffect';\nimport SuggestedMentionList from '../SuggestedMentionList';\nimport useSendbirdStateContext from '../../../../hooks/useSendbirdStateContext';\nimport { useChannelContext } from '../../context/ChannelProvider';\nimport { getClassName } from '../../../../utils';\nimport { isDisabledBecauseFrozen, isDisabledBecauseMuted } from '../../context/utils';\nimport { MAX_USER_MENTION_COUNT, MAX_USER_SUGGESTION_COUNT } from '../../context/const';\n\nimport DateSeparator from '../../../../ui/DateSeparator';\nimport Label, { LabelTypography, LabelColors } from '../../../../ui/Label';\nimport MessageInput from '../../../../ui/MessageInput';\nimport MessageContent from '../../../../ui/MessageContent';\nimport FileViewer from '../FileViewer';\nimport RemoveMessageModal from '../RemoveMessageModal';\nimport { MessageInputKeys } from '../../../../ui/MessageInput/const';\nimport { EveryMessage, RenderCustomSeparatorProps, RenderMessageProps } from '../../../../types';\nimport { useLocalization } from '../../../../lib/LocalizationContext';\nimport { useHandleOnScrollCallback } from '../../../../hooks/useHandleOnScrollCallback';\nimport { useDirtyGetMentions } from '../../../Message/hooks/useDirtyGetMentions';\n\ntype MessageUIProps = {\n  message: EveryMessage;\n  hasSeparator?: boolean;\n  chainTop?: boolean;\n  chainBottom?: boolean;\n  handleScroll?: (isBottomMessageAffected?: boolean) => void;\n  // for extending\n  renderMessage?: (props: RenderMessageProps) => React.ReactElement;\n  renderCustomSeparator?: (props: RenderCustomSeparatorProps) => React.ReactElement;\n  renderEditInput?: () => React.ReactElement;\n  renderMessageContent?: () => React.ReactElement;\n};\n\n// todo: Refactor this component, is too complex now\nconst Message = ({\n  message,\n  hasSeparator,\n  chainTop,\n  chainBottom,\n  handleScroll,\n  renderCustomSeparator,\n  renderEditInput,\n  renderMessage,\n  renderMessageContent,\n}: MessageUIProps): React.ReactElement => {\n  const { dateLocale } = useLocalization();\n  const globalStore = useSendbirdStateContext();\n\n  const {\n    userId,\n    isOnline,\n    isMentionEnabled,\n    userMention,\n    logger,\n  } = globalStore.config;\n  const maxUserMentionCount = userMention?.maxMentionCount || MAX_USER_MENTION_COUNT;\n  const maxUserSuggestionCount = userMention?.maxSuggestionCount || MAX_USER_SUGGESTION_COUNT;\n\n  const {\n    initialized,\n    currentGroupChannel,\n    highLightedMessageId,\n    setHighLightedMessageId,\n    animatedMessageId,\n    setAnimatedMessageId,\n    updateMessage,\n    scrollToMessage,\n    replyType,\n    threadReplySelectType,\n    isReactionEnabled,\n    toggleReaction,\n    emojiContainer,\n    nicknamesMap,\n    setQuoteMessage,\n    resendMessage,\n    deleteMessage,\n    renderUserMentionItem,\n    onReplyInThread,\n    onQuoteMessageClick,\n    onMessageAnimated,\n    onMessageHighlighted,\n    onScrollCallback,\n    setIsScrolled,\n  } = useChannelContext();\n  const [showEdit, setShowEdit] = useState(false);\n  const [showRemove, setShowRemove] = useState(false);\n  const [showFileViewer, setShowFileViewer] = useState(false);\n  const [isAnimated, setIsAnimated] = useState(false);\n  const [isHighlighted, setIsHighlighted] = useState(false);\n  const [mentionNickname, setMentionNickname] = useState('');\n  const [mentionedUsers, setMentionedUsers] = useState([]);\n  const [mentionedUserIds, setMentionedUserIds] = useState([]);\n  const [messageInputEvent, setMessageInputEvent] = useState(null);\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [mentionSuggestedUsers, setMentionSuggestedUsers] = useState([]);\n  const editMessageInputRef = useRef(null);\n  const messageScrollRef = useRef(null);\n  const displaySuggestedMentionList = isOnline\n    && isMentionEnabled\n    && mentionNickname.length > 0\n    && !isDisabledBecauseFrozen(currentGroupChannel)\n    && !isDisabledBecauseMuted(currentGroupChannel);\n  const disabled = !initialized\n    || isDisabledBecauseFrozen(currentGroupChannel)\n    || isDisabledBecauseMuted(currentGroupChannel)\n    || !isOnline;\n\n  const handleOnScroll = useHandleOnScrollCallback({\n    hasMore: false,\n    onScroll: onScrollCallback,\n    scrollRef: messageScrollRef,\n    setIsScrolled,\n  });\n\n  const mentionNodes = useDirtyGetMentions({ ref: editMessageInputRef }, { logger });\n  const ableMention = mentionNodes?.length < maxUserMentionCount;\n\n  useEffect(() => {\n    setMentionedUsers(mentionedUsers.filter(({ userId }) => {\n      const i = mentionedUserIds.indexOf(userId);\n      if (i < 0) {\n        return false;\n      } else {\n        mentionedUserIds.splice(i, 1);\n        return true;\n      }\n    }));\n  }, [mentionedUserIds]);\n\n  useLayoutEffect(() => {\n    // Keep the scrollBottom value after fetching new message list\n    handleScroll?.();\n  }, []);\n  /**\n   * Move the messsage list scroll\n   * when the message's height is changed by `showEdit` OR `message.reactions`\n   */\n  useDidMountEffect(() => {\n    handleScroll?.();\n  }, [showEdit, message?.reactions?.length]);\n  useDidMountEffect(() => {\n    handleScroll?.(true);\n  }, [message?.updatedAt]);\n\n  useLayoutEffect(() => {\n    let animationTimeout = null;\n    let messageHighlightedTimeout = null;\n    if (highLightedMessageId === message.messageId && messageScrollRef?.current) {\n      handleOnScroll();\n      setIsAnimated(false);\n      animationTimeout = setTimeout(() => {\n        setIsHighlighted(true);\n      }, 500);\n      messageHighlightedTimeout = setTimeout(() => {\n        setHighLightedMessageId(0);\n        onMessageHighlighted?.();\n      }, 1600);\n    } else {\n      setIsHighlighted(false);\n    }\n    return () => {\n      clearTimeout(animationTimeout);\n      clearTimeout(messageHighlightedTimeout);\n    };\n  }, [highLightedMessageId, messageScrollRef.current, message.messageId]);\n\n  useLayoutEffect(() => {\n    let animationTimeout = null;\n    let messageAnimatedTimeout = null;\n    if (animatedMessageId === message.messageId && messageScrollRef?.current) {\n      handleOnScroll();\n      setIsHighlighted(false);\n      animationTimeout = setTimeout(() => {\n        setIsAnimated(true);\n      }, 500);\n      messageAnimatedTimeout = setTimeout(() => {\n        setAnimatedMessageId(0);\n        onMessageAnimated?.();\n      }, 1600);\n    } else {\n      setIsAnimated(false);\n    }\n    return () => {\n      clearTimeout(animationTimeout);\n      clearTimeout(messageAnimatedTimeout);\n    };\n  }, [animatedMessageId, messageScrollRef.current, message.messageId, onMessageAnimated]);\n  const renderedMessage = useMemo(() => {\n    return renderMessage?.({\n      message,\n      chainTop,\n      chainBottom,\n    });\n  }, [message, renderMessage]);\n  const renderedCustomSeparator = useMemo(() => {\n    if (renderCustomSeparator) {\n      return renderCustomSeparator?.({ message: message });\n    }\n    return null;\n  }, [message, renderCustomSeparator]);\n\n  if (renderedMessage) {\n    return (\n      <div\n        // do not delete this data attribute, used for scroll to given message\n        // and also for testing\n        data-sb-message-id={message.messageId}\n        data-sb-created-at={message.createdAt}\n        ref={messageScrollRef}\n        className={getClassName([\n          'sendbird-msg-hoc sendbird-msg--scroll-ref',\n          isAnimated ? 'sendbird-msg-hoc__animated' : '',\n          isHighlighted ? 'sendbird-msg-hoc__highlighted' : '',\n        ])}\n      >\n        {/* date-separator */}\n        {\n          // TODO: Add message instance as a function parameter\n          hasSeparator && (renderedCustomSeparator || (\n            <DateSeparator>\n              <Label type={LabelTypography.CAPTION_2} color={LabelColors.ONBACKGROUND_2}>\n                {format(message.createdAt, 'MMMM dd, yyyy', {\n                  locale: dateLocale,\n                })}\n              </Label>\n            </DateSeparator>\n          ))\n        }\n        {renderedMessage}\n      </div>\n    );\n  }\n\n  if (showEdit && message?.isUserMessage?.()) {\n    return renderEditInput?.() || (\n      <>\n        {\n          displaySuggestedMentionList && (\n            <SuggestedMentionList\n              targetNickname={mentionNickname}\n              inputEvent={messageInputEvent}\n              renderUserMentionItem={renderUserMentionItem}\n              onUserItemClick={(user) => {\n                if (user) {\n                  setMentionedUsers([...mentionedUsers, user]);\n                }\n                setMentionNickname('');\n                setSelectedUser(user);\n                setMessageInputEvent(null);\n              }}\n              onFocusItemChange={() => {\n                setMessageInputEvent(null);\n              }}\n              onFetchUsers={(users) => {\n                setMentionSuggestedUsers(users);\n              }}\n              ableAddMention={ableMention}\n              maxMentionCount={maxUserMentionCount}\n              maxSuggestionCount={maxUserSuggestionCount}\n            />\n          )\n        }\n        <MessageInput\n          isEdit\n          channel={currentGroupChannel}\n          disabled={disabled}\n          ref={editMessageInputRef}\n          mentionSelectedUser={selectedUser}\n          isMentionEnabled={isMentionEnabled}\n          message={message}\n          onStartTyping={() => {\n            currentGroupChannel?.startTyping?.();\n          }}\n          onUpdateMessage={({ messageId, message, mentionTemplate }) => {\n            updateMessage({\n              messageId,\n              message,\n              mentionedUsers,\n              mentionTemplate,\n            });\n            setShowEdit(false);\n            currentGroupChannel?.endTyping?.();\n          }}\n          onCancelEdit={() => {\n            setMentionNickname('');\n            setMentionedUsers([]);\n            setMentionedUserIds([]);\n            setMentionSuggestedUsers([]);\n            setShowEdit(false);\n            currentGroupChannel?.endTyping?.();\n          }}\n          onUserMentioned={(user) => {\n            if (selectedUser?.userId === user?.userId) {\n              setSelectedUser(null);\n              setMentionNickname('');\n            }\n          }}\n          onMentionStringChange={(mentionText) => {\n            setMentionNickname(mentionText);\n          }}\n          onMentionedUserIdsUpdated={(userIds) => {\n            setMentionedUserIds(userIds);\n          }}\n          onKeyDown={(e) => {\n            if (displaySuggestedMentionList && mentionSuggestedUsers?.length > 0\n              && ((e.key === MessageInputKeys.Enter && ableMention) || e.key === MessageInputKeys.ArrowUp || e.key === MessageInputKeys.ArrowDown)\n            ) {\n              setMessageInputEvent(e);\n              return true;\n            }\n            return false;\n          }}\n        />\n      </>\n    );\n  }\n\n  return (\n    <div\n      className={getClassName([\n        'sendbird-msg-hoc sendbird-msg--scroll-ref',\n        isAnimated ? 'sendbird-msg-hoc__animated' : '',\n        isHighlighted ? 'sendbird-msg-hoc__highlighted' : '',\n      ])}\n      style={{ marginBottom: '2px' }}\n      data-sb-message-id={message.messageId}\n      data-sb-created-at={message.createdAt}\n      ref={messageScrollRef}\n    >\n      {/* date-separator */}\n      {\n        hasSeparator && (renderedCustomSeparator || (\n          <DateSeparator>\n            <Label type={LabelTypography.CAPTION_2} color={LabelColors.ONBACKGROUND_2}>\n              {format(message.createdAt, 'MMMM dd, yyyy', {\n                locale: dateLocale,\n              })}\n            </Label>\n          </DateSeparator>\n        ))\n      }\n      {/* Message */}\n      {\n        renderMessageContent?.() || (\n          <MessageContent\n            className=\"sendbird-message-hoc__message-content\"\n            userId={userId}\n            scrollToMessage={scrollToMessage}\n            channel={currentGroupChannel}\n            message={message}\n            disabled={!isOnline}\n            chainTop={chainTop}\n            chainBottom={chainBottom}\n            isReactionEnabled={isReactionEnabled}\n            replyType={replyType}\n            threadReplySelectType={threadReplySelectType}\n            nicknamesMap={nicknamesMap}\n            emojiContainer={emojiContainer}\n            showEdit={setShowEdit}\n            showRemove={setShowRemove}\n            showFileViewer={setShowFileViewer}\n            resendMessage={resendMessage}\n            deleteMessage={deleteMessage}\n            toggleReaction={toggleReaction}\n            setQuoteMessage={setQuoteMessage}\n            onReplyInThread={onReplyInThread}\n            onQuoteMessageClick={onQuoteMessageClick}\n            onMessageHeightChange={handleScroll}\n          />\n        )\n      }\n      {/* Modal */}\n      {\n        showRemove && (\n          <RemoveMessageModal\n            message={message}\n            onCancel={() => setShowRemove(false)}\n          />\n        )\n      }\n      {\n        showFileViewer && (\n          <FileViewer\n            message={message as FileMessage}\n            onCancel={() => setShowFileViewer(false)}\n          />\n        )\n      }\n    </div>\n  );\n};\n\nexport default Message;\n"],"names":["useDidMountEffect","func","deps","_a","useState","didMount","setDidmount","useEffect","Message","message","hasSeparator","chainTop","chainBottom","handleScroll","renderCustomSeparator","renderEditInput","renderMessage","renderMessageContent","dateLocale","useLocalization","globalStore","useSendbirdStateContext","_d","config","userId","isOnline","isMentionEnabled","userMention","logger","maxUserMentionCount","maxMentionCount","MAX_USER_MENTION_COUNT","maxUserSuggestionCount","maxSuggestionCount","MAX_USER_SUGGESTION_COUNT","_e","useChannelContext","initialized","currentGroupChannel","highLightedMessageId","setHighLightedMessageId","animatedMessageId","setAnimatedMessageId","updateMessage","scrollToMessage","replyType","threadReplySelectType","isReactionEnabled","toggleReaction","emojiContainer","nicknamesMap","setQuoteMessage","resendMessage","deleteMessage","renderUserMentionItem","onReplyInThread","onQuoteMessageClick","onMessageAnimated","onMessageHighlighted","onScrollCallback","setIsScrolled","_f","showEdit","setShowEdit","_g","showRemove","setShowRemove","_h","showFileViewer","setShowFileViewer","_j","isAnimated","setIsAnimated","_k","isHighlighted","setIsHighlighted","_l","mentionNickname","setMentionNickname","_m","mentionedUsers","setMentionedUsers","_o","mentionedUserIds","setMentionedUserIds","_p","messageInputEvent","setMessageInputEvent","_q","selectedUser","setSelectedUser","_r","mentionSuggestedUsers","setMentionSuggestedUsers","editMessageInputRef","useRef","messageScrollRef","displaySuggestedMentionList","length","isDisabledBecauseFrozen","isDisabledBecauseMuted","disabled","handleOnScroll","useHandleOnScrollCallback","hasMore","onScroll","scrollRef","mentionNodes","useDirtyGetMentions","ref","ableMention","filter","i","indexOf","splice","useLayoutEffect","_b","reactions","updatedAt","animationTimeout","messageHighlightedTimeout","messageId","current","setTimeout","clearTimeout","messageAnimatedTimeout","renderedMessage","useMemo","renderedCustomSeparator","React","createElement","createdAt","className","getClassName","DateSeparator","Label","type","LabelTypography","CAPTION_2","color","LabelColors","ONBACKGROUND_2","format","locale","_c","isUserMessage","call","Fragment","SuggestedMentionList","targetNickname","inputEvent","onUserItemClick","user","__spreadArray","onFocusItemChange","onFetchUsers","users","ableAddMention","MessageInput","isEdit","channel","mentionSelectedUser","onStartTyping","startTyping","onUpdateMessage","mentionTemplate","endTyping","onCancelEdit","onUserMentioned","onMentionStringChange","mentionText","onMentionedUserIdsUpdated","userIds","onKeyDown","e","key","MessageInputKeys","Enter","ArrowUp","ArrowDown","style","marginBottom","MessageContent","onMessageHeightChange","RemoveMessageModal","onCancel","FileViewer"],"mappings":"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"}