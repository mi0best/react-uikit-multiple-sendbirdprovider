{"version":3,"file":"index-ce07a2a3.js","sources":["../../src/modules/Message/utils/tokens/keyGenerator.ts","../../src/modules/Message/components/TextFragment/index.tsx"],"sourcesContent":["// this function is used to generate a unique key for token in message\n// it changes with updated time and index\n// messageUpdatedAt is the key part of this key generator\nexport function keyGenerator(\n  createdAt: number,\n  messageUpdatedAt: number,\n  index: number,\n): string {\n  return `sb-msg_${createdAt}_${messageUpdatedAt}_${index}`;\n}\n","import React from 'react';\nimport { UserMessage } from '@sendbird/chat/message';\nimport { match } from 'ts-pattern';\n\nimport { TOKEN_TYPES, Token } from '../../utils/tokens/types';\nimport { useMessageContext } from '../../context/MessageProvider';\nimport { keyGenerator } from '../../utils/tokens/keyGenerator';\nimport MentionLabel from '../../../../ui/MentionLabel';\nimport { USER_MENTION_PREFIX } from '../../consts';\nimport LinkLabel from '../../../../ui/LinkLabel';\nimport { LabelTypography } from '../../../../ui/Label';\nimport { getWhiteSpacePreservedText } from '../../utils/tokens/tokenize';\n\nexport type TextFragmentProps = {\n  tokens: Token[];\n};\n\nexport default function TextFragment({\n  tokens,\n}: TextFragmentProps): React.ReactElement {\n  const messageStore = useMessageContext();\n\n  const message = messageStore?.message as UserMessage;\n  const isByMe = messageStore?.isByMe;\n  const { updatedAt, createdAt } = message;\n\n  return (\n    <>\n      {tokens?.map((token, idx) => {\n        const key = keyGenerator(createdAt, updatedAt, idx);\n        return match(token.type)\n          .with(TOKEN_TYPES.mention, () => (\n            <span className=\"sendbird-word\" key={key}>\n              <MentionLabel\n                mentionTemplate={USER_MENTION_PREFIX}\n                mentionedUserId={token.userId}\n                mentionedUserNickname={token.value}\n                isByMe={isByMe}\n              />\n            </span>\n          ))\n          .with(TOKEN_TYPES.url, () => (\n            <span className=\"sendbird-word\" key={key}>\n              <LinkLabel\n                className=\"sendbird-word__url\"\n                src={token.value}\n                type={LabelTypography.BODY_1}\n              >\n                {token.value}\n              </LinkLabel>\n            </span>\n          ))\n          .otherwise(() => <React.Fragment key={key}>{getWhiteSpacePreservedText(token.value)}</React.Fragment>);\n      })}\n    </>\n  );\n}\n"],"names":["keyGenerator","createdAt","messageUpdatedAt","index","concat","TextFragment","_a","tokens","messageStore","useMessageContext","message","isByMe","updatedAt","React","createElement","Fragment","map","token","idx","key","match","type","with","TOKEN_TYPES","mention","className","MentionLabel","mentionTemplate","USER_MENTION_PREFIX","mentionedUserId","userId","mentionedUserNickname","value","url","LinkLabel","src","LabelTypography","BODY_1","otherwise","getWhiteSpacePreservedText"],"mappings":";;;;;;;;;;;;;;AAAA;AACA;AACA;SACgBA,YAAYA,CAC1BC,SAAiB,EACjBC,gBAAwB,EACxBC,KAAa,EAAA;AAEb,EAAA,OAAO,iBAAUF,SAAS,EAAA,GAAA,CAAA,CAAAG,MAAA,CAAIF,gBAAgB,EAAI,GAAA,CAAA,CAAAE,MAAA,CAAAD,KAAK,CAAE,CAAA;AAC3D;;ACQwB,SAAAE,YAAYA,CAACC,EAEjB,EAAA;AADlB,EAAA,IAAAC,MAAM,GAAAD,EAAA,CAAAC,MAAA,CAAA;AAEN,EAAA,IAAMC,YAAY,GAAGC,iCAAiB,EAAE,CAAA;AAExC,EAAA,IAAMC,OAAO,GAAGF,YAAY,KAAA,IAAA,IAAZA,YAAY,KAAZ,KAAA,CAAA,GAAA,KAAA,CAAA,GAAAA,YAAY,CAAEE,OAAsB,CAAA;AACpD,EAAA,IAAMC,MAAM,GAAGH,YAAY,KAAA,IAAA,IAAZA,YAAY,KAAZ,KAAA,CAAA,GAAA,KAAA,CAAA,GAAAA,YAAY,CAAEG,MAAM,CAAA;AAC3B,EAAA,IAAAC,SAAS,GAAgBF,OAAO,CAAAE,SAAvB;IAAEX,SAAS,GAAKS,OAAO,CAAAT,SAAZ,CAAA;AAE5B,EAAA,oBACEY,yBAAA,CAAAC,aAAA,CAAAD,yBAAA,CAAAE,QAAA,EAAA,IAAA,EACGR,MAAM,KAAN,IAAA,IAAAA,MAAM,KAAN,KAAA,CAAA,GAAA,KAAA,CAAA,GAAAA,MAAM,CAAES,GAAG,CAAC,UAACC,KAAK,EAAEC,GAAG,EAAA;IACtB,IAAMC,GAAG,GAAGnB,YAAY,CAACC,SAAS,EAAEW,SAAS,EAAEM,GAAG,CAAC,CAAA;AACnD,IAAA,OAAOE,OAAK,CAACH,KAAK,CAACI,IAAI,CAAC,CACrBC,IAAI,CAACC,oBAAW,CAACC,OAAO,EAAE,YAAM;MAAA,oBAC/BX,yBAAA,CAAAC,aAAA,CAAA,MAAA,EAAA;AAAMW,QAAAA,SAAS,EAAC,eAAe;AAACN,QAAAA,GAAG,EAAEA,GAAAA;AAAI,OAAA,eACvCN,yBAAA,CAAAC,aAAA,CAACY,eAAY,EAAA;AACXC,QAAAA,eAAe,EAAEC,4BAAoB;QACrCC,eAAe,EAAEZ,KAAK,CAACa,MAAO;QAC9BC,qBAAqB,EAAEd,KAAK,CAACe,KAAM;AACnCrB,QAAAA,MAAM,EAAEA,MAAAA;AAAO,OAEnB,CAAM,CAAC,CAAA;KACR,CAAC,CACDW,IAAI,CAACC,oBAAW,CAACU,GAAG,EAAE,YAAM;MAAA,oBAC3BpB,yBAAA,CAAAC,aAAA,CAAA,MAAA,EAAA;AAAMW,QAAAA,SAAS,EAAC,eAAe;AAACN,QAAAA,GAAG,EAAEA,GAAAA;AAAI,OAAA,eACvCN,yBAAA,CAAAC,aAAA,CAACoB,uBAAS,EAAA;AACRT,QAAAA,SAAS,EAAC,oBAAoB;QAC9BU,GAAG,EAAElB,KAAK,CAACe,KAAM;QACjBX,IAAI,EAAEe,wBAAe,CAACC,MAAAA;AAAO,OAAA,EAE5BpB,KAAK,CAACe,KACE,CACP,CAAC,CAAA;AAToB,KAU5B,CAAC,CACDM,SAAS,CAAC,YAAA;AAAM,MAAA,oBAAAzB,yBAAA,CAAAC,aAAA,CAACD,yBAAK,CAACE,QAAQ,EAAA;AAACI,QAAAA,GAAG,EAAEA,GAAAA;AAAI,OAAA,EAAEoB,mCAA0B,CAACtB,KAAK,CAACe,KAAK,CAAkB,CAAC,CAAA;AAApF,KAAoF,CAAC,CAAA;AAC1G,GAAC,CACH,CAAG,CAAA;AAEP;;;;"}