{"version":3,"file":"index-dbe8dd84.js","sources":["../../src/utils/index.ts"],"sourcesContent":["import SendbirdChat, { Emoji, EmojiCategory, EmojiContainer, User } from '@sendbird/chat';\nimport { GroupChannel, Member, SendbirdGroupChat, GroupChannelListQuery } from '@sendbird/chat/groupChannel';\nimport {\n  AdminMessage,\n  BaseMessage,\n  FileMessage,\n  MessageListParams,\n  MultipleFilesMessage,\n  Reaction,\n  UploadedFileInfo,\n  UserMessage,\n} from '@sendbird/chat/message';\nimport { OpenChannel, SendbirdOpenChat } from '@sendbird/chat/openChannel';\n\nimport { getOutgoingMessageState, OutgoingMessageStates } from './exports/getOutgoingMessageState';\nimport { Nullable } from '../types';\nimport { match } from 'ts-pattern';\n\n// https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types/Complete_list_of_MIME_types\nexport const SUPPORTED_MIMES = {\n  IMAGE: [\n    'image/jpeg',\n    'image/jpg',\n    'image/png',\n    'image/gif',\n    'image/svg+xml',\n    'image/webp', // not supported in IE\n  ],\n  VIDEO: [\n    'video/mpeg',\n    'video/ogg',\n    'video/webm',\n    'video/mp4',\n    'video/quicktime', // .mov\n  ],\n  AUDIO: [\n    'audio/aac',\n    'audio/midi',\n    'audio/x-midi',\n    'audio/mpeg',\n    'audio/ogg',\n    'audio/opus',\n    'audio/wav',\n    'audio/webm',\n    'audio/3gpp',\n    'audio/3gpp2',\n    'audio/mp3',\n  ],\n  DOCUMENT: [\n    'text/plain',\n    'text/css',\n    'text/csv',\n    'text/html',\n    'text/calendar',\n    'text/javascript',\n    'text/xml',\n  ],\n  APPLICATION: [\n    'application/x-abiword',\n    'application/x-freearc',\n    'application/vnd.amazon.ebook',\n    'application/octet-stream',\n    'application/x-bzip',\n    'application/x-bzip2',\n    'application/x-cdf',\n    'application/x-csh',\n    'application/msword',\n    'application/vnd.openxmlformats-officedocument.wordprocessingml.document',\n    'application/vnd.ms-fontobject',\n    'application/epub+zip',\n    'application/gzip',\n    'application/java-archive',\n    'application/json',\n    'application/ld+json',\n    'application/vnd.apple.installer+xml',\n    'application/vnd.oasis.opendocument.presentation',\n    'application/vnd.oasis.opendocument.spreadsheet',\n    'application/vnd.oasis.opendocument.text',\n    'application/ogg',\n    'application/pdf',\n    'application/x-httpd-php',\n    'application/vnd.ms-powerpoint',\n    'application/vnd.openxmlformats-officedocument.presentationml.presentation',\n    'application/vnd.rar',\n    'application/rtf',\n    'application/x-sh',\n    'application/x-tar',\n    'application/vnd.visio',\n    'application/xhtml+xml',\n    'application/vnd.ms-excel',\n    'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\n    'application/xml',\n    'application/vnd.mozilla.xul+xml',\n    'application/zip',\n    'application/x-7z-compressed',\n  ],\n};\n\nexport const getMimeTypesUIKitAccepts = (acceptableMimeTypes?: Array<string>): string => {\n  const { IMAGE, VIDEO, AUDIO } = SUPPORTED_MIMES;\n\n  if (Array.isArray(acceptableMimeTypes) && acceptableMimeTypes.length > 0) {\n    return (\n      acceptableMimeTypes\n        .reduce((accumulator: Array<string>, acceptableMimeType: string): Array<string> => (\n          accumulator.concat(\n            match(acceptableMimeType)\n              .with('image', () => IMAGE)\n              .with('video', () => VIDEO)\n              .with('audio', () => AUDIO)\n              .otherwise(() => []),\n          )\n        ), [])\n        .join()\n    );\n  }\n  return (\n    Object.values(SUPPORTED_MIMES)\n      .reduce((accumulator: Array<string>, mimeTypes: Array<string>) => (\n        accumulator.concat(mimeTypes)\n      ), [])\n      .join()\n  );\n  // concat() is fater than flat()\n};\n\n/* eslint-disable no-redeclare */\nexport interface UIKitMessageTypes {\n  ADMIN: 'ADMIN',\n  TEXT: 'TEXT',\n  FILE: 'FILE',\n  MULTIPLE_FILES: 'MULTIPLE_FILES',\n  THUMBNAIL: 'THUMBNAIL',\n  OG: 'OG',\n  UNKNOWN: 'UNKNOWN',\n}\nexport const UIKitMessageTypes: UIKitMessageTypes = {\n  ADMIN: 'ADMIN',\n  TEXT: 'TEXT',\n  FILE: 'FILE',\n  MULTIPLE_FILES: 'MULTIPLE_FILES',\n  THUMBNAIL: 'THUMBNAIL',\n  OG: 'OG',\n  UNKNOWN: 'UNKNOWN',\n};\n/* eslint-disable no-redeclare */\nexport interface UIKitFileTypes {\n  IMAGE: 'IMAGE',\n  AUDIO: 'AUDIO',\n  VIDEO: 'VIDEO',\n  GIF: 'GIF',\n  VOICE: 'VOICE',\n  OTHERS: 'OTHERS',\n}\nexport const UIKitFileTypes: UIKitFileTypes = {\n  IMAGE: 'IMAGE',\n  AUDIO: 'AUDIO',\n  VIDEO: 'VIDEO',\n  GIF: 'GIF',\n  VOICE: 'VOICE',\n  OTHERS: 'OTHERS',\n};\n\n/* eslint-disable no-redeclare */\nexport interface SendingMessageStatus {\n  NONE: 'none',\n  SUCCEEDED: 'succeeded',\n  FAILED: 'failed',\n  PENDING: 'pending',\n}\nconst SendingMessageStatus: SendingMessageStatus = {\n  NONE: 'none',\n  SUCCEEDED: 'succeeded',\n  FAILED: 'failed',\n  PENDING: 'pending',\n};\n\nexport type CoreMessageType = AdminMessage | UserMessage | FileMessage | MultipleFilesMessage;\nexport type SendableMessageType = UserMessage | FileMessage | MultipleFilesMessage;\n\nexport const isTextuallyNull = (text: string): boolean => {\n  if (text === '' || text === null) {\n    return true;\n  }\n  return false;\n};\n\nexport const isImage = (type: string): boolean => SUPPORTED_MIMES.IMAGE.indexOf(type) >= 0;\nexport const isVideo = (type: string): boolean => SUPPORTED_MIMES.VIDEO.indexOf(type) >= 0;\nexport const isGif = (type: string): boolean => type === 'image/gif';\nexport const isSupportedFileView = (type: string): boolean => isImage(type) || isVideo(type);\nexport const isAudio = (type: string): boolean => SUPPORTED_MIMES.AUDIO.indexOf(type) >= 0;\n\nexport const getUIKitFileTypes = (): UIKitFileTypes => ({ ...UIKitFileTypes });\nexport const getUIKitFileType = (type: string): string => {\n  if (isGif(type)) return UIKitFileTypes.GIF;\n  if (isImage(type)) return UIKitFileTypes.IMAGE;\n  if (isVideo(type)) return UIKitFileTypes.VIDEO;\n  if (isAudio(type)) return UIKitFileTypes.AUDIO;\n  return UIKitFileTypes.OTHERS;\n};\n\nexport const isSentMessage = (\n  message: SendableMessageType,\n): boolean => (message.sendingStatus === 'succeeded');\nexport const isDeliveredMessage = (\n  channel: GroupChannel,\n  message: SendableMessageType,\n): boolean => (\n  getOutgoingMessageState(channel, message) === OutgoingMessageStates.DELIVERED\n  || getOutgoingMessageState(channel, message) === OutgoingMessageStates.READ\n);\nexport const isReadMessage = (\n  channel: GroupChannel,\n  message: SendableMessageType,\n): boolean => (\n  getOutgoingMessageState(channel, message) === OutgoingMessageStates.READ\n);\n// TODO: Remove channel from the params, it seems unnecessary\nexport const isFailedMessage = (\n  message: SendableMessageType,\n): boolean => (message?.sendingStatus === 'failed');\nexport const isPendingMessage = (\n  message: SendableMessageType,\n): boolean => (message?.sendingStatus === 'pending');\nexport const isSentStatus = (state: string): boolean => (\n  state === OutgoingMessageStates.SENT\n  || state === OutgoingMessageStates.DELIVERED\n  || state === OutgoingMessageStates.READ\n);\n\nexport const isAdminMessage = (message: CoreMessageType): boolean => (\n  message && (\n    message['isAdminMessage'] && typeof message.isAdminMessage === 'function'\n      ? message.isAdminMessage()\n      : message?.messageType === 'admin'\n  )\n);\nexport const isUserMessage = (message: CoreMessageType): boolean => (\n  message && (\n    message['isUserMessage'] && typeof message.isUserMessage === 'function'\n      ? message.isUserMessage()\n      : message?.messageType === 'user'\n  )\n);\nexport const isFileMessage = (message: CoreMessageType): boolean => (\n  message && (\n    message['isFileMessage'] && typeof message.isFileMessage === 'function'\n      ? message.isFileMessage()\n      : message?.messageType === 'file'\n  )\n);\nexport const isMultipleFilesMessage = (\n  message: CoreMessageType,\n): boolean => (\n  message && (\n    message['isMultipleFilesMessage'] && typeof message.isMultipleFilesMessage === 'function'\n      ? message.isMultipleFilesMessage()\n      : (\n        message.messageType === 'file'\n        && Object.prototype.hasOwnProperty.call(message, 'fileInfoList')\n      )\n  )\n);\nexport const isParentMessage = (message: CoreMessageType): boolean => (\n  !message.parentMessageId && !message.parentMessage && (message.threadInfo?.replyCount ?? 0) > 0\n);\nexport const isThreadMessage = (message: CoreMessageType): boolean => (\n  !!message.parentMessageId && !!message.parentMessage\n);\nexport const isOGMessage = (message: SendableMessageType): boolean => !!(\n  message && isUserMessage(message) && message?.ogMetaData && (\n    message.ogMetaData?.url\n    || message.ogMetaData?.title\n    || message.ogMetaData?.description\n    || message.ogMetaData?.defaultImage\n  )\n);\nexport const isTextMessage = (message: SendableMessageType): boolean => (\n  isUserMessage(message)\n);\nexport const isThumbnailMessage = (message: SendableMessageType): boolean => (\n  message && isFileMessage(message) && isSupportedFileView((message as FileMessage).type)\n);\nexport const isImageMessage = (message: FileMessage): boolean => message && isThumbnailMessage(message) && isImage(message.type);\nexport const isImageFileInfo = (fileInfo: UploadedFileInfo): boolean => fileInfo\n  && (isImage(fileInfo.mimeType) || isGif(fileInfo.mimeType));\nexport const isVideoMessage = (message: SendableMessageType): boolean => (\n  message && isThumbnailMessage(message) && isVideo((message as FileMessage).type)\n);\nexport const isGifMessage = (message: SendableMessageType): boolean => (\n  message && isThumbnailMessage(message) && isGif((message as FileMessage).type)\n);\nexport const isAudioMessage = (message: FileMessage): boolean => message && isFileMessage(message) && isAudio(message.type);\nexport const isAudioMessageMimeType = (type: string): boolean => (/^audio\\//.test(type));\nexport const isVoiceMessageMimeType = (type: string): boolean => (/^voice\\//.test(type));\nexport const isVoiceMessage = (message: Nullable<SendableMessageType>): boolean => {\n  // ex) audio/m4a OR audio/m4a;sbu_type=voice\n  if (!(message && isFileMessage(message)) || !(message as FileMessage).type) {\n    return false;\n  }\n  const [mimeType, typeParameter] = (message as FileMessage).type.split(';');\n\n  if (!isAudioMessageMimeType(mimeType)) {\n    return false;\n  }\n\n  if (typeParameter) {\n    const [key, value] = typeParameter.split('=');\n    return key === 'sbu_type' && value === 'voice';\n  }\n  // ex) message.metaArrays = [{ key: 'KEY_INTERNAL_MESSAGE_TYPE', value: ['voice/m4a'] }]\n  return isVoiceMessageMimeType(message?.metaArrays?.find((metaArray) => metaArray.key === 'KEY_INTERNAL_MESSAGE_TYPE')?.value?.[0] ?? '');\n};\n\nexport const isEditedMessage = (\n  message: CoreMessageType,\n): boolean => isUserMessage(message) && (message?.updatedAt > 0);\nexport const isEnabledOGMessage = (message: UserMessage): boolean => (\n  (!message || !message.ogMetaData || !message.ogMetaData.url) ? false : true\n);\n\nexport const getUIKitMessageTypes = (): UIKitMessageTypes => ({ ...UIKitMessageTypes });\n\n/**\n * Do not use this for MultipleFilesMessage. Use isMultipleFilesMessage() instead.\n */\nexport const getUIKitMessageType = (\n  message: CoreMessageType,\n): string => {\n  if (isAdminMessage(message as AdminMessage)) return UIKitMessageTypes.ADMIN;\n  if (isUserMessage(message as UserMessage)) {\n    return isOGMessage(message as UserMessage) ? UIKitMessageTypes.OG : UIKitMessageTypes.TEXT;\n  }\n  // This is only a safeguard to not return UNKNOWN for MFM.\n  if (isMultipleFilesMessage(message as FileMessage)) {\n    return UIKitMessageTypes.MULTIPLE_FILES;\n  }\n  if (isFileMessage(message as FileMessage)) {\n    if (isThumbnailMessage(message as FileMessage)) {\n      return UIKitMessageTypes.THUMBNAIL;\n    }\n    if (isVoiceMessage(message as FileMessage)) {\n      return UIKitFileTypes.VOICE;\n    }\n    return UIKitMessageTypes.FILE;\n  }\n  return UIKitMessageTypes.UNKNOWN;\n};\n/**\n * @deprecated use SendingStatus of @sendbird/chat instead\n * */\nexport const getSendingMessageStatus = (): SendingMessageStatus => ({ ...SendingMessageStatus });\n\nconst reducer = (accumulator: Array<string>, currentValue: string | Array<string>): Array<any> => {\n  if (Array.isArray(currentValue)) {\n    return [...accumulator, ...currentValue];\n  } else {\n    accumulator.push(currentValue);\n    return accumulator;\n  }\n};\nexport const getClassName = (classNames: string | Array<string | Array<string>>): string => (\n  Array.isArray(classNames)\n    ? classNames.reduce(reducer, []).join(' ')\n    : classNames\n);\nexport const isReactedBy = (userId: string, reaction: Reaction): boolean => (\n  reaction.userIds.some((reactorUserId: string): boolean => reactorUserId === userId)\n);\ninterface StringSet {\n  TOOLTIP__YOU: string;\n  TOOLTIP__AND_YOU: string;\n  TOOLTIP__UNKNOWN_USER: string;\n}\nexport const getEmojiTooltipString = (reaction: Reaction, userId: string, memberNicknamesMap: Map<string, string>, stringSet: StringSet): string => {\n  let you = '';\n  if (isReactedBy(userId, reaction)) {\n    you = reaction.userIds.length === 1 ? stringSet.TOOLTIP__YOU : stringSet.TOOLTIP__AND_YOU;\n  }\n  return (`${reaction.userIds\n    .filter((reactorUserId: string) => reactorUserId !== userId)\n    .map((reactorUserId: string) => (memberNicknamesMap.get(reactorUserId) || stringSet.TOOLTIP__UNKNOWN_USER))\n    .join(', ')}${you}`);\n};\n\n// TODO: Use the interface after language tranlsatation of Sendbird.js\ninterface UIKitStore {\n  stores: {\n    sdkStore: {\n      sdk: SendbirdChat | SendbirdOpenChat | SendbirdGroupChat,\n    },\n    userStore: {\n      user: User,\n    },\n  },\n  config: {\n    isReactionEnabled: boolean,\n  }\n}\nexport const getCurrentUserId = (store: UIKitStore): string => (store?.stores?.userStore?.user?.userId);\nexport const getUseReaction = (store: UIKitStore, channel: GroupChannel | OpenChannel): boolean => {\n  if (!store?.config?.isReactionEnabled)\n    return false;\n  if (!store?.stores?.sdkStore?.sdk?.appInfo?.useReaction)\n    return false;\n  if (channel?.isGroupChannel())\n    return !((channel as GroupChannel).isBroadcast || (channel as GroupChannel).isSuper);\n  return store?.config?.isReactionEnabled;\n};\n\nexport const isMessageSentByMe = (\n  userId: string,\n  message: SendableMessageType,\n): boolean => (\n  !!(userId && message?.sender?.userId && userId === message.sender.userId)\n);\n\nconst URL_REG = /^((http|https):\\/\\/)?([a-z\\d]+\\.)+[a-z]{2,6}(\\:[0-9]{1,5})?(\\/[-a-zA-Z\\d%_.~+&=]*)*(\\?[;&a-zA-Z\\d%_.~+=-]*)?(\\#[-a-zA-Z\\d_]*)?$/;\nexport const isUrl = (text: string): boolean => URL_REG.test(text);\n\nconst MENTION_TAG_REG = /\\@\\{.*?\\}/i;\nexport const isMentionedText = (text: string): boolean => MENTION_TAG_REG.test(text);\n\nexport const truncateString = (fullStr: string, strLen?: number): string => {\n  if (!strLen) strLen = 40;\n  if (fullStr === null || fullStr === undefined) return '';\n  if (fullStr.length <= strLen) return fullStr;\n  const separator = '...';\n  const sepLen = separator.length;\n  const charsToShow = strLen - sepLen;\n  const frontChars = Math.ceil(charsToShow / 2);\n  const backChars = Math.floor(charsToShow / 2);\n  return fullStr.substr(0, frontChars) + separator + fullStr.substr(fullStr.length - backChars);\n};\n\nexport const copyToClipboard = (text: string): boolean => {\n  // @ts-ignore: Unreachable code error\n  if (window.clipboardData && window.clipboardData.setData) {\n    // Internet Explorer-specific code path to prevent textarea being shown while dialog is visible.\n    // @ts-ignore: Unreachable code error\n    return window.clipboardData.setData('Text', text);\n  }\n  if (document.queryCommandSupported && document.queryCommandSupported('copy')) {\n    const textarea = document.createElement('textarea');\n    textarea.textContent = text;\n    textarea.style.position = 'fixed'; // Prevent scrolling to bottom of page in Microsoft Edge.\n    document.body.appendChild(textarea);\n    textarea.select();\n    try {\n      return document.execCommand('copy'); // Security exception may be thrown by some browsers.\n    } catch (ex) {\n      return false;\n    } finally {\n      document.body.removeChild(textarea);\n    }\n  }\n  return false;\n};\n\nexport const getEmojiListAll = (emojiContainer: EmojiContainer): Array<Emoji> => (\n  emojiContainer?.emojiCategories?.map((emojiCategory: EmojiCategory) => emojiCategory.emojis)\n    .reduce((prevArr: Array<Emoji>, currArr: Array<Emoji>) => prevArr.concat(currArr), [])\n);\nexport const getEmojiMapAll = (emojiContainer: EmojiContainer): Map<string, Emoji> => {\n  const emojiMap = new Map();\n  emojiContainer?.emojiCategories?.forEach((category: EmojiCategory) => {\n    category?.emojis?.forEach((emoji: Emoji): void => {\n      if (emoji && emoji.key) {\n        emojiMap.set(emoji.key, emoji);\n      }\n    });\n  });\n  return emojiMap;\n};\nconst findEmojiUrl = (targetKey: string) => ({ key }) => key === targetKey;\nexport const getEmojiUrl = (emojiContainer?: EmojiContainer, emojiKey?: string): string => {\n  const isFindingKey = findEmojiUrl(emojiKey ?? '');\n  return emojiContainer?.emojiCategories\n    .find((category) => category.emojis.some(isFindingKey))?.emojis\n    .find(isFindingKey)\n    ?.url || '';\n};\n\nexport const getUserName = (user: User): string => (user?.friendName || user?.nickname || user?.userId);\nexport const getSenderName = (message: SendableMessageType): string => (\n  message?.sender && getUserName(message?.sender)\n);\n\nexport const hasSameMembers = <T>(a: T[], b: T[]): boolean => {\n  if (a === b) {\n    return true;\n  }\n  if (a == null || b == null) {\n    return false;\n  }\n  if (a.length !== b.length) {\n    return false;\n  }\n\n  const sortedA = [...a].sort();\n  const sortedB = [...b].sort();\n\n  for (let i = 0; i < sortedA.length; ++i) {\n    if (sortedA[i] !== sortedB[i]) {\n      return false;\n    }\n  }\n  return true;\n};\nexport const isFriend = (user: Nullable<User>): boolean => {\n  if (!user) return false;\n  return !!(user.friendDiscoveryKey || user.friendName);\n};\n\nexport const filterMessageListParams = (\n  params: MessageListParams,\n  message: SendableMessageType,\n): boolean => {\n  const { customTypesFilter = [] } = params;\n  // @ts-ignore\n  if (params?.messageTypeFilter && params.messageTypeFilter !== message.messageType) {\n    return false;\n  }\n  if (customTypesFilter?.length > 0) {\n    const customTypes = customTypesFilter.filter((item) => item !== '*');\n    // Because Chat SDK inserts '*' when customTypes is empty\n    if (customTypes.length > 0 && !customTypes.includes(message.customType)) {\n      return false;\n    }\n  }\n  if (params?.senderUserIdsFilter && params?.senderUserIdsFilter?.length > 0) {\n    if (message?.isUserMessage?.() || message?.isFileMessage?.()) {\n      const messageSender = (message as SendableMessageType).sender || message['_sender'];\n      if (!params?.senderUserIdsFilter?.includes(messageSender?.userId)) {\n        return false;\n      }\n    } else {\n      return false;\n    }\n  }\n  if (!params?.includeParentMessageInfo && (message?.parentMessageId || message?.parentMessage)) {\n    return false;\n  }\n  return true;\n};\n\nexport const filterChannelListParams = (params: GroupChannelListQuery, channel: GroupChannel, currentUserId: string): boolean => {\n  const {\n    includeEmpty,\n    includeFrozen,\n    searchFilter,\n    userIdsFilter,\n    customTypesFilter,\n    channelUrlsFilter,\n    customTypeStartsWithFilter,\n    channelNameContainsFilter,\n    nicknameContainsFilter,\n    myMemberStateFilter,\n    hiddenChannelFilter,\n    unreadChannelFilter,\n    publicChannelFilter,\n    superChannelFilter,\n    metadataKey = '',\n    metadataValues = ['a', 'b'],\n    metadataValueStartsWith,\n  } = params;\n\n  if (!includeEmpty && channel?.lastMessage === null) {\n    return false;\n  }\n  if (searchFilter?.query && (searchFilter?.fields?.length ?? 0) > 0) {\n    const searchQuery = searchFilter.query;\n    const searchFields = searchFilter.fields;\n    if (searchQuery && searchFields && searchFields.length > 0) {\n      if (!searchFields.some((searchField) => {\n        switch (searchField) {\n          case 'channel_name': {\n            return channel?.name?.toLowerCase().includes(searchQuery.toLowerCase());\n          }\n          case 'member_nickname': {\n            return channel?.members?.some((member: Member) => member.nickname.toLowerCase().includes(searchQuery.toLowerCase()));\n          }\n          default: {\n            return true;\n          }\n        }\n      })) {\n        return false;\n      }\n    }\n  }\n  if (userIdsFilter?.userIds?.length > 0) {\n    const { includeMode, queryType } = userIdsFilter;\n    const userIds: Array<string> = userIdsFilter.userIds;\n    const memberIds = channel?.members?.map((member: Member) => member.userId);\n    if (!includeMode) { // exact match\n      if (!userIds.includes(currentUserId)) {\n        userIds.push(currentUserId); // add the caller's userId if not added already.\n      }\n      if (channel?.members?.length > userIds.length) {\n        return false; // userIds may contain one or more non-member(s).\n      }\n      if (!hasSameMembers(userIds, memberIds)) {\n        return false;\n      }\n    } else if (userIds.length > 0) { // inclusive\n      switch (queryType) {\n        case 'AND': {\n          if (userIds.some((userId: string) => !memberIds.includes(userId))) {\n            return false;\n          }\n          break;\n        }\n        case 'OR': {\n          if (userIds.every((userId: string) => !memberIds.includes(userId))) {\n            return false;\n          }\n          break;\n        }\n        default: {\n          break;\n        }\n      }\n    }\n  }\n  if (includeEmpty === false && channel?.lastMessage === null) {\n    return false;\n  }\n  if (includeFrozen === false && channel?.isFrozen === true) {\n    return false;\n  }\n  if (customTypesFilter && !customTypesFilter.includes(channel?.customType)) {\n    return false;\n  }\n  if (customTypeStartsWithFilter && !new RegExp(`^${customTypeStartsWithFilter}`).test(channel?.customType)) {\n    return false;\n  }\n  if (channelNameContainsFilter && !channel?.name?.toLowerCase().includes(channelNameContainsFilter.toLowerCase())) {\n    return false;\n  }\n  if (nicknameContainsFilter) {\n    const lowerCasedSubString = nicknameContainsFilter.toLowerCase();\n    if (channel?.members?.every((member: Member) => !member.nickname.toLowerCase().includes(lowerCasedSubString))) {\n      return false;\n    }\n  }\n  if (channelUrlsFilter && !channelUrlsFilter.includes(channel?.url)) {\n    return false;\n  }\n  if (myMemberStateFilter) {\n    switch (myMemberStateFilter) {\n      case 'joined_only':\n        if (channel?.myMemberState !== 'joined') {\n          return false;\n        }\n        break;\n      case 'invited_only':\n        if (channel?.myMemberState !== 'invited') {\n          return false;\n        }\n        break;\n      case 'invited_by_friend':\n        if (channel?.myMemberState !== 'invited' || !isFriend(channel?.inviter)) {\n          return false;\n        }\n        break;\n      case 'invited_by_non_friend':\n        if (channel?.myMemberState !== 'invited' || isFriend(channel?.inviter)) {\n          return false;\n        }\n        break;\n    }\n  }\n  if (hiddenChannelFilter) {\n    switch (hiddenChannelFilter) {\n      case 'unhidden_only':\n        if (channel?.isHidden || channel?.hiddenState !== 'unhidden') {\n          return false;\n        }\n        break;\n      case 'hidden_only':\n        if (!channel?.isHidden) {\n          return false;\n        }\n        break;\n      case 'hidden_allow_auto_unhide':\n        if (!channel?.isHidden || channel?.hiddenState !== 'hidden_allow_auto_unhide') {\n          return false;\n        }\n        break;\n      case 'hidden_prevent_auto_unhide':\n        if (!channel?.isHidden || channel?.hiddenState !== 'hidden_prevent_auto_unhide') {\n          return false;\n        }\n        break;\n    }\n  }\n  if (unreadChannelFilter) {\n    switch (unreadChannelFilter) {\n      case 'unread_message':\n        if (channel?.unreadMessageCount === 0) {\n          return false;\n        }\n        break;\n    }\n  }\n  if (publicChannelFilter) {\n    switch (publicChannelFilter) {\n      case 'public':\n        if (!channel?.isPublic) {\n          return false;\n        }\n        break;\n      case 'private':\n        if (channel?.isPublic) {\n          return false;\n        }\n        break;\n    }\n  }\n  if (superChannelFilter) {\n    switch (superChannelFilter) {\n      case 'super':\n        if (!channel?.isSuper) {\n          return false;\n        }\n        break;\n      case 'nonsuper':\n        if (channel?.isSuper) {\n          return false;\n        }\n        break;\n    }\n  }\n  const { cachedMetaData = {} } = channel;\n  if (metadataKey && (metadataValues || metadataValueStartsWith)) {\n    const metadataValue: string = cachedMetaData[metadataKey];\n    if (!metadataValue) {\n      return false;\n    }\n    if (metadataValues && !metadataValues.every(value => metadataValue.includes(value))) {\n      return false;\n    }\n    if (metadataValueStartsWith && !metadataValue.startsWith(metadataValueStartsWith)) {\n      return false;\n    }\n  }\n  return true;\n};\n\nexport const binarySearch = (list: Array<number>, number: number): number => { // [100, 99, 98, 97, ...]\n  const pivot = Math.floor(list.length / 2);\n  if (list[pivot] === number) {\n    return pivot;\n  }\n  const leftList = list.slice(0, pivot);\n  const rightList = list.slice(pivot + 1, list.length);\n  if (list[pivot] > number) {\n    return pivot + 1 + (rightList.length === 0 ? 0 : binarySearch(rightList, number));\n  } else {\n    return (leftList.length === 0) ? pivot : binarySearch(leftList, number);\n  }\n};\n// This is required when channel is displayed on channel list by filter\nexport const getChannelsWithUpsertedChannel = (channels: Array<GroupChannel>, channel: GroupChannel): Array<GroupChannel> => {\n  if (channels.some((ch: GroupChannel) => ch.url === channel?.url)) {\n    return channels.map((ch: GroupChannel) => (ch.url === channel?.url ? channel : ch));\n  }\n  const targetIndex = binarySearch(\n    channels.map((channel: GroupChannel) => channel?.lastMessage?.createdAt || channel?.createdAt),\n    channel?.lastMessage?.createdAt || channel?.createdAt,\n  );\n  return [...channels.slice(0, targetIndex), channel, ...channels.slice(targetIndex, channels.length)];\n};\n\nexport const getMatchedUserIds = (word: string, users: Array<User>, _template?: string): boolean => {\n  const template = _template || '@'; // Use global variable\n  // const matchedUserIds = [];\n  // users.map((user) => user?.userId).forEach((userId) => {\n  //   if (word.indexOf(`${template}{${userId}}`) > -1) {\n  //     matchedUserIds.push(userId);\n  //   }\n  // });\n  // return matchedUserIds;\n  return users.map((user) => user?.userId).some((userId) => word.indexOf(`${template}{${userId}}`) > -1);\n};\n\nexport enum StringObjType {\n  normal = 'normal',\n  mention = 'mention',\n  url = 'url',\n}\nexport interface StringObj {\n  type: StringObjType;\n  value: string;\n  userId?: string;\n}\n\n/**\n * @deprecated\n * use modules/message/utils/tokenize instead\n */\nexport const convertWordToStringObj = (word: string, _users: Array<User>, _template?: string): Array<StringObj> => {\n  const users = _users || [];\n  const template = _template || '@'; // Use global variable\n  const resultArray: Array<StringObj> = [];\n  const regex = RegExp(`${template}{(${users.map((user) => user?.userId).join('|')})}`, 'g');\n  let excutionResult;\n  let lastIndex = 0;\n  while ((excutionResult = regex.exec(word)) !== null) {\n    const [template, userId] = excutionResult;\n    const endIndex = regex.lastIndex;\n    const startIndex = endIndex - template.length;\n    // Normal text\n    const normalText = word.slice(lastIndex, startIndex);\n    resultArray.push({\n      type: isUrl(normalText) ? StringObjType.url : StringObjType.normal,\n      value: normalText,\n    });\n    // Mention template\n    const mentionedUser = users.find((user) => user?.userId === userId);\n    if (!mentionedUser) {\n      resultArray.push({\n        type: StringObjType.normal,\n        value: template, // because template is the origin text\n      });\n    } else {\n      resultArray.push({\n        type: StringObjType.mention,\n        value: mentionedUser?.nickname || '(No name)',\n        userId: userId,\n      });\n    }\n    lastIndex = endIndex;\n  }\n  if (lastIndex < word.length) {\n    // Normal text\n    const normalText = word.slice(lastIndex);\n    resultArray.push({\n      type: isUrl(normalText) ? StringObjType.url : StringObjType.normal,\n      value: normalText,\n    });\n  }\n  return resultArray;\n};\n\nexport const arrayEqual = (array1: Array<unknown>, array2: Array<unknown>): boolean => {\n  if (Array.isArray(array1) && Array.isArray(array2) && array1.length === array2.length) {\n    for (let i = 0; i < array1.length; i++) {\n      if (array1[i] !== array2[i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n  return false;\n};\n\nexport const isSendableMessage = (message?: BaseMessage | null): message is SendableMessageType => {\n  return Boolean(message) && 'sender' in message;\n};\n"],"names":["SUPPORTED_MIMES","IMAGE","VIDEO","AUDIO","DOCUMENT","APPLICATION","getMimeTypesUIKitAccepts","acceptableMimeTypes","Array","isArray","length","reduce","accumulator","acceptableMimeType","concat","match","with","otherwise","join","Object","values","mimeTypes","UIKitMessageTypes","ADMIN","TEXT","FILE","MULTIPLE_FILES","THUMBNAIL","OG","UNKNOWN","UIKitFileTypes","GIF","VOICE","OTHERS","isTextuallyNull","text","isImage","type","indexOf","isVideo","isGif","isSupportedFileView","isAudio","getUIKitFileTypes","__assign","getUIKitFileType","isSentMessage","message","sendingStatus","isReadMessage","channel","getOutgoingMessageState","OutgoingMessageStates","READ","isFailedMessage","isPendingMessage","isSentStatus","state","SENT","DELIVERED","isAdminMessage","messageType","isUserMessage","isFileMessage","isMultipleFilesMessage","prototype","hasOwnProperty","call","isThreadMessage","parentMessageId","parentMessage","isOGMessage","ogMetaData","_a","url","_b","title","_c","description","_d","defaultImage","isTextMessage","isThumbnailMessage","isImageMessage","isImageFileInfo","fileInfo","mimeType","isVideoMessage","isGifMessage","isAudioMessage","isAudioMessageMimeType","test","isVoiceMessageMimeType","isVoiceMessage","_e","split","typeParameter","_f","key","value","metaArrays","find","metaArray","isEditedMessage","updatedAt","getUIKitMessageTypes","getUIKitMessageType","reducer","currentValue","__spreadArray","push","getClassName","classNames","isReactedBy","userId","reaction","userIds","some","reactorUserId","getEmojiTooltipString","memberNicknamesMap","stringSet","you","TOOLTIP__YOU","TOOLTIP__AND_YOU","filter","map","get","TOOLTIP__UNKNOWN_USER","URL_REG","isUrl","truncateString","fullStr","strLen","undefined","separator","sepLen","charsToShow","frontChars","Math","ceil","backChars","floor","substr","copyToClipboard","window","clipboardData","setData","document","queryCommandSupported","textarea","createElement","textContent","style","position","body","appendChild","select","execCommand","ex","removeChild","getEmojiListAll","emojiContainer","emojiCategories","emojiCategory","emojis","prevArr","currArr","getEmojiMapAll","emojiMap","Map","forEach","category","emoji","set","findEmojiUrl","targetKey","getEmojiUrl","emojiKey","isFindingKey","getUserName","user","friendName","nickname","getSenderName","sender","hasSameMembers","a","b","sortedA","sort","sortedB","i","isFriend","friendDiscoveryKey","filterMessageListParams","params","customTypesFilter","messageTypeFilter","customTypes","item","includes","customType","senderUserIdsFilter","messageSender","includeParentMessageInfo","filterChannelListParams","currentUserId","includeEmpty","includeFrozen","searchFilter","userIdsFilter","channelUrlsFilter","customTypeStartsWithFilter","channelNameContainsFilter","nicknameContainsFilter","myMemberStateFilter","hiddenChannelFilter","unreadChannelFilter","publicChannelFilter","superChannelFilter","_h","metadataKey","_j","metadataValues","metadataValueStartsWith","lastMessage","query","fields","searchQuery_1","searchFields","searchField","name","toLowerCase","members","member","includeMode","queryType","memberIds_1","every","isFrozen","RegExp","lowerCasedSubString_1","_g","myMemberState","inviter","isHidden","hiddenState","unreadMessageCount","isPublic","isSuper","_k","cachedMetaData","metadataValue_1","startsWith","binarySearch","list","number","pivot","leftList","slice","rightList","getChannelsWithUpsertedChannel","channels","ch","targetIndex","createdAt","StringObjType","convertWordToStringObj","word","_users","_template","users","template","resultArray","regex","excutionResult","lastIndex","template_1","endIndex","startIndex","normalText","normal","mentionedUser","mention","exec","arrayEqual","array1","array2","isSendableMessage","Boolean"],"mappings":";;;;;;AAkBA;AACO,IAAMA,eAAe,GAAG;AAC7BC,EAAAA,KAAK,EAAE,CACL,YAAY,EACZ,WAAW,EACX,WAAW,EACX,WAAW,EACX,eAAe,EACf,YAAY;GACb;;EACDC,KAAK,EAAE,CACL,YAAY,EACZ,WAAW,EACX,YAAY,EACZ,WAAW,EACX,iBAAiB;GAClB;;EACDC,KAAK,EAAE,CACL,WAAW,EACX,YAAY,EACZ,cAAc,EACd,YAAY,EACZ,WAAW,EACX,YAAY,EACZ,WAAW,EACX,YAAY,EACZ,YAAY,EACZ,aAAa,EACb,WAAW,CACZ;AACDC,EAAAA,QAAQ,EAAE,CACR,YAAY,EACZ,UAAU,EACV,UAAU,EACV,WAAW,EACX,eAAe,EACf,iBAAiB,EACjB,UAAU,CACX;AACDC,EAAAA,WAAW,EAAE,CACX,uBAAuB,EACvB,uBAAuB,EACvB,8BAA8B,EAC9B,0BAA0B,EAC1B,oBAAoB,EACpB,qBAAqB,EACrB,mBAAmB,EACnB,mBAAmB,EACnB,oBAAoB,EACpB,yEAAyE,EACzE,+BAA+B,EAC/B,sBAAsB,EACtB,kBAAkB,EAClB,0BAA0B,EAC1B,kBAAkB,EAClB,qBAAqB,EACrB,qCAAqC,EACrC,iDAAiD,EACjD,gDAAgD,EAChD,yCAAyC,EACzC,iBAAiB,EACjB,iBAAiB,EACjB,yBAAyB,EACzB,+BAA+B,EAC/B,2EAA2E,EAC3E,qBAAqB,EACrB,iBAAiB,EACjB,kBAAkB,EAClB,mBAAmB,EACnB,uBAAuB,EACvB,uBAAuB,EACvB,0BAA0B,EAC1B,mEAAmE,EACnE,iBAAiB,EACjB,iCAAiC,EACjC,iBAAiB,EACjB,6BAA6B,CAAA;CAEhC,CAAA;IAEYC,wBAAwB,GAAG,UAACC,mBAAmC,EAAA;AAClE,EAAA,IAAAN,KAAK,GAAmBD,eAAe,CAAAC,KAAlC;IAAEC,KAAK,GAAYF,eAAe,CAAAE,KAA3B;IAAEC,KAAK,GAAKH,eAAe,MAApB,CAAA;AAE3B,EAAA,IAAIQ,KAAK,CAACC,OAAO,CAACF,mBAAmB,CAAC,IAAIA,mBAAmB,CAACG,MAAM,GAAG,CAAC,EAAE;IACxE,OACEH,mBAAmB,CAChBI,MAAM,CAAC,UAACC,WAA0B,EAAEC,kBAA0B,EAAoB;AAAA,MAAA,OACjFD,WAAW,CAACE,MAAM,CAChBC,OAAK,CAACF,kBAAkB,CAAC,CACtBG,IAAI,CAAC,OAAO,EAAE,YAAA;AAAM,QAAA,OAAAf,KAAK,CAAA;AAAL,OAAK,CAAC,CAC1Be,IAAI,CAAC,OAAO,EAAE,YAAA;AAAM,QAAA,OAAAd,KAAK,CAAA;AAAL,OAAK,CAAC,CAC1Bc,IAAI,CAAC,OAAO,EAAE,YAAA;AAAM,QAAA,OAAAb,KAAK,CAAA;AAAL,OAAK,CAAC,CAC1Bc,SAAS,CAAC,YAAA;AAAM,QAAA,OAAA,EAAE,CAAA;AAAF,OAAE,CAAC,CACvB,CAAA;AAPgF,KAQlF,EAAE,EAAE,CAAC,CACLC,IAAI,EAAE,CAAA;AAEZ,GAAA;AACD,EAAA,OACEC,MAAM,CAACC,MAAM,CAACpB,eAAe,CAAC,CAC3BW,MAAM,CAAC,UAACC,WAA0B,EAAES,SAAwB,EAAA;AAAK,IAAA,OAChET,WAAW,CAACE,MAAM,CAACO,SAAS,CAAC,CAAA;AADmC,GAEjE,EAAE,EAAE,CAAC,CACLH,IAAI,EAAE,CAAA;AAEX;AACF,EAAC;;AAYM,IAAMI,iBAAiB,GAAsB;AAClDC,EAAAA,KAAK,EAAE,OAAO;AACdC,EAAAA,IAAI,EAAE,MAAM;AACZC,EAAAA,IAAI,EAAE,MAAM;AACZC,EAAAA,cAAc,EAAE,gBAAgB;AAChCC,EAAAA,SAAS,EAAE,WAAW;AACtBC,EAAAA,EAAE,EAAE,IAAI;AACRC,EAAAA,OAAO,EAAE,SAAA;EACV;AAUM,IAAMC,cAAc,GAAmB;AAC5C7B,EAAAA,KAAK,EAAE,OAAO;AACdE,EAAAA,KAAK,EAAE,OAAO;AACdD,EAAAA,KAAK,EAAE,OAAO;AACd6B,EAAAA,GAAG,EAAE,KAAK;AACVC,EAAAA,KAAK,EAAE,OAAO;AACdC,EAAAA,MAAM,EAAE,QAAA;CACT,CAAA;IAmBYC,eAAe,GAAG,UAACC,IAAY,EAAA;AAC1C,EAAA,IAAIA,IAAI,KAAK,EAAE,IAAIA,IAAI,KAAK,IAAI,EAAE;AAChC,IAAA,OAAO,IAAI,CAAA;AACZ,GAAA;AACD,EAAA,OAAO,KAAK,CAAA;AACd,EAAC;IAEYC,OAAO,GAAG,UAACC,IAAY,EAAA;EAAc,OAAArC,eAAe,CAACC,KAAK,CAACqC,OAAO,CAACD,IAAI,CAAC,IAAI,CAAC,CAAA;AAAxC,EAAwC;IAC7EE,OAAO,GAAG,UAACF,IAAY,EAAA;EAAc,OAAArC,eAAe,CAACE,KAAK,CAACoC,OAAO,CAACD,IAAI,CAAC,IAAI,CAAC,CAAA;AAAxC,EAAwC;IAC7EG,KAAK,GAAG,UAACH,IAAY,EAAc;EAAA,OAAAA,IAAI,KAAK,WAAW,CAAA;AAApB,EAAoB;IACvDI,mBAAmB,GAAG,UAACJ,IAAY;EAAc,OAAAD,OAAO,CAACC,IAAI,CAAC,IAAIE,OAAO,CAACF,IAAI,CAAC,CAAA;AAA9B,EAA8B;IAC/EK,OAAO,GAAG,UAACL,IAAY,EAAA;EAAc,OAAArC,eAAe,CAACG,KAAK,CAACmC,OAAO,CAACD,IAAI,CAAC,IAAI,CAAC,CAAA;AAAxC,EAAwC;AAE7EM,IAAAA,iBAAiB,GAAG,YAAA;AAAsB,EAAA,OAAAC,kBAAA,CAAA,EAAA,EAAMd,cAAc,CAAA,CAAA;AAApB,EAAuB;IACjEe,gBAAgB,GAAG,UAACR,IAAY,EAAA;EAC3C,IAAIG,KAAK,CAACH,IAAI,CAAC,EAAE,OAAOP,cAAc,CAACC,GAAG,CAAA;EAC1C,IAAIK,OAAO,CAACC,IAAI,CAAC,EAAE,OAAOP,cAAc,CAAC7B,KAAK,CAAA;EAC9C,IAAIsC,OAAO,CAACF,IAAI,CAAC,EAAE,OAAOP,cAAc,CAAC5B,KAAK,CAAA;EAC9C,IAAIwC,OAAO,CAACL,IAAI,CAAC,EAAE,OAAOP,cAAc,CAAC3B,KAAK,CAAA;EAC9C,OAAO2B,cAAc,CAACG,MAAM,CAAA;AAC9B,EAAC;IAEYa,aAAa,GAAG,UAC3BC,OAA4B,EAChB;AAAA,EAAA,OAACA,OAAO,CAACC,aAAa,KAAK,WAAW,CAAA;AAAtC,EAAuC;AAQ9C,IAAMC,aAAa,GAAG,UAC3BC,OAAqB,EACrBH,OAA4B,EAChB;EAAA,OACZI,6DAAuB,CAACD,OAAO,EAAEH,OAAO,CAAC,KAAKK,2DAAqB,CAACC,IAAI,CAAA;AAD5D,EAEb;AACD;IACaC,eAAe,GAAG,UAC7BP,OAA4B,EAAA;AAChB,EAAA,OAAC,CAAAA,OAAO,aAAPA,OAAO,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAPA,OAAO,CAAEC,aAAa,MAAK,QAAQ,CAAA;AAApC,EAAqC;IACtCO,gBAAgB,GAAG,UAC9BR,OAA4B,EAAA;AAChB,EAAA,OAAC,CAAAA,OAAO,aAAPA,OAAO,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAPA,OAAO,CAAEC,aAAa,MAAK,SAAS,CAAA;AAArC,EAAsC;IACvCQ,YAAY,GAAG,UAACC,KAAa,EAAc;AAAA,EAAA,OACtDA,KAAK,KAAKL,2DAAqB,CAACM,IAAI,IACjCD,KAAK,KAAKL,2DAAqB,CAACO,SAAS,IACzCF,KAAK,KAAKL,2DAAqB,CAACC,IAAI,CAAA;AAHe,EAIvD;AAEM,IAAMO,cAAc,GAAG,UAACb,OAAwB,EAAA;AAAc,EAAA,OACnEA,OAAO,KACLA,OAAO,CAAC,gBAAgB,CAAC,IAAI,OAAOA,OAAO,CAACa,cAAc,KAAK,UAAU,GACrEb,OAAO,CAACa,cAAc,EAAE,GACxB,CAAAb,OAAO,KAAA,IAAA,IAAPA,OAAO,KAAP,KAAA,CAAA,GAAA,KAAA,CAAA,GAAAA,OAAO,CAAEc,WAAW,MAAK,OAAO,CACrC,CAAA;AALkE,CAMpE,CAAA;IACYC,aAAa,GAAG,UAACf,OAAwB,EAAA;AAAc,EAAA,OAClEA,OAAO,KACLA,OAAO,CAAC,eAAe,CAAC,IAAI,OAAOA,OAAO,CAACe,aAAa,KAAK,UAAU,GACnEf,OAAO,CAACe,aAAa,EAAE,GACvB,CAAAf,OAAO,KAAA,IAAA,IAAPA,OAAO,KAAP,KAAA,CAAA,GAAA,KAAA,CAAA,GAAAA,OAAO,CAAEc,WAAW,MAAK,MAAM,CACpC,CAAA;AALiE,EAMnE;IACYE,aAAa,GAAG,UAAChB,OAAwB,EAAA;AAAc,EAAA,OAClEA,OAAO,KACLA,OAAO,CAAC,eAAe,CAAC,IAAI,OAAOA,OAAO,CAACgB,aAAa,KAAK,UAAU,GACnEhB,OAAO,CAACgB,aAAa,EAAE,GACvB,CAAAhB,OAAO,KAAA,IAAA,IAAPA,OAAO,KAAP,KAAA,CAAA,GAAA,KAAA,CAAA,GAAAA,OAAO,CAAEc,WAAW,MAAK,MAAM,CACpC,CAAA;AALiE,EAMnE;IACYG,sBAAsB,GAAG,UACpCjB,OAAwB,EAAA;AACZ,EAAA,OACZA,OAAO,KACLA,OAAO,CAAC,wBAAwB,CAAC,IAAI,OAAOA,OAAO,CAACiB,sBAAsB,KAAK,UAAU,GACrFjB,OAAO,CAACiB,sBAAsB,EAAE,GAEhCjB,OAAO,CAACc,WAAW,KAAK,MAAM,IAC3B1C,MAAM,CAAC8C,SAAS,CAACC,cAAc,CAACC,IAAI,CAACpB,OAAO,EAAE,cAAc,CAChE,CACJ,CAAA;AARW,EASb;IAIYqB,eAAe,GAAG,UAACrB,OAAwB,EAAA;EAAc,OACpE,CAAC,CAACA,OAAO,CAACsB,eAAe,IAAI,CAAC,CAACtB,OAAO,CAACuB,aAAa,CAAA;AADgB,EAErE;IACYC,WAAW,GAAG,UAACxB,OAA4B,EAAA;;EAAc,OAAA,CAAC,EACrEA,OAAO,IAAIe,aAAa,CAACf,OAAO,CAAC,KAAIA,OAAO,KAAP,IAAA,IAAAA,OAAO,uBAAPA,OAAO,CAAEyB,UAAU,CAAA,KACtD,CAAA,CAAAC,EAAA,GAAA1B,OAAO,CAACyB,UAAU,MAAA,IAAA,IAAAC,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAAA,EAAA,CAAEC,GAAG,MACpB,CAAAC,EAAA,GAAA5B,OAAO,CAACyB,UAAU,MAAA,IAAA,IAAAG,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAAA,EAAA,CAAEC,KAAK,CAAA,KACzB,CAAAC,EAAA,GAAA9B,OAAO,CAACyB,UAAU,MAAA,IAAA,IAAAK,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAAA,EAAA,CAAEC,WAAW,CAAA,KAC/B,CAAAC,EAAA,GAAAhC,OAAO,CAACyB,UAAU,MAAA,IAAA,IAAAO,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAAA,EAAA,CAAEC,YAAY,CAAA,CACpC,CACF,CAAA;EAAA;IACYC,aAAa,GAAG,UAAClC,OAA4B,EAAc;EAAA,OACtEe,aAAa,CAACf,OAAO,CAAC,CAAA;AADgD,EAEvE;IACYmC,kBAAkB,GAAG,UAACnC,OAA4B,EAAc;AAAA,EAAA,OAC3EA,OAAO,IAAIgB,aAAa,CAAChB,OAAO,CAAC,IAAIN,mBAAmB,CAAEM,OAAuB,CAACV,IAAI,CAAC,CAAA;AADZ,EAE5E;IACY8C,cAAc,GAAG,UAACpC,OAAoB,EAAA;AAAc,EAAA,OAAAA,OAAO,IAAImC,kBAAkB,CAACnC,OAAO,CAAC,IAAIX,OAAO,CAACW,OAAO,CAACV,IAAI,CAAC,CAAA;AAA/D,EAA+D;IACnH+C,eAAe,GAAG,UAACC,QAA0B,EAAA;AAAc,EAAA,OAAAA,QAAQ,KAC1EjD,OAAO,CAACiD,QAAQ,CAACC,QAAQ,CAAC,IAAI9C,KAAK,CAAC6C,QAAQ,CAACC,QAAQ,CAAC,CAAC,CAAA;AADW,EACX;IAChDC,cAAc,GAAG,UAACxC,OAA4B,EAAc;AAAA,EAAA,OACvEA,OAAO,IAAImC,kBAAkB,CAACnC,OAAO,CAAC,IAAIR,OAAO,CAAEQ,OAAuB,CAACV,IAAI,CAAC,CAAA;AADT,EAExE;IACYmD,YAAY,GAAG,UAACzC,OAA4B,EAAc;AAAA,EAAA,OACrEA,OAAO,IAAImC,kBAAkB,CAACnC,OAAO,CAAC,IAAIP,KAAK,CAAEO,OAAuB,CAACV,IAAI,CAAC,CAAA;AADT,EAEtE;IACYoD,cAAc,GAAG,UAAC1C,OAAoB,EAAA;AAAc,EAAA,OAAAA,OAAO,IAAIgB,aAAa,CAAChB,OAAO,CAAC,IAAIL,OAAO,CAACK,OAAO,CAACV,IAAI,CAAC,CAAA;AAA1D,EAA0D;AACpH,IAAMqD,sBAAsB,GAAG,UAACrD,IAAY;AAAc,EAAA,OAAC,UAAU,CAACsD,IAAI,CAACtD,IAAI,CAAC,CAAA;AAAtB,CAAuB,CAAA;IAC3EuD,sBAAsB,GAAG,UAACvD,IAAY;AAAc,EAAA,OAAC,UAAU,CAACsD,IAAI,CAACtD,IAAI,CAAC,CAAA;AAAtB,EAAuB;IAC3EwD,cAAc,GAAG,UAAC9C,OAAsC,EAAA;;AACnE;AACA,EAAA,IAAI,EAAEA,OAAO,IAAIgB,aAAa,CAAChB,OAAO,CAAC,CAAC,IAAI,CAAEA,OAAuB,CAACV,IAAI,EAAE;AAC1E,IAAA,OAAO,KAAK,CAAA;AACb,GAAA;EACK,IAAAyD,EAA6B,GAAA/C,OAAuB,CAACV,IAAI,CAAC0D,KAAK,CAAC,GAAG,CAAC;AAAnET,IAAAA,QAAQ,GAAAQ,EAAA,CAAA,CAAA,CAAA;AAAEE,IAAAA,aAAa,QAA4C,CAAA;AAE1E,EAAA,IAAI,CAACN,sBAAsB,CAACJ,QAAQ,CAAC,EAAE;AACrC,IAAA,OAAO,KAAK,CAAA;AACb,GAAA;AAED,EAAA,IAAIU,aAAa,EAAE;AACX,IAAA,IAAAC,EAAe,GAAAD,aAAa,CAACD,KAAK,CAAC,GAAG,CAAC;AAAtCG,MAAAA,GAAG,GAAAD,EAAA,CAAA,CAAA,CAAA;AAAEE,MAAAA,KAAK,QAA4B,CAAA;AAC7C,IAAA,OAAOD,GAAG,KAAK,UAAU,IAAIC,KAAK,KAAK,OAAO,CAAA;AAC/C,GAAA;AACD;EACA,OAAOP,sBAAsB,CAAC,CAAAb,EAAA,GAAA,CAAAF,EAAA,GAAA,CAAAF,EAAA,GAAA,MAAA5B,OAAO,KAAA,IAAA,IAAPA,OAAO,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAPA,OAAO,CAAEqD,UAAU,MAAE,IAAA,IAAA3B,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAAA,EAAA,CAAA4B,IAAI,CAAC,UAACC,SAAS,EAAK;AAAA,IAAA,OAAAA,SAAS,CAACJ,GAAG,KAAK,2BAA2B,CAAA;AAA7C,GAA6C,CAAC,MAAE,IAAA,IAAAvB,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAAA,EAAA,CAAAwB,KAAK,0CAAG,CAAC,CAAC,MAAI,IAAA,IAAApB,EAAA,KAAA,KAAA,CAAA,GAAAA,EAAA,GAAA,EAAE,CAAC,CAAA;AAC1I,EAAC;IAEYwB,eAAe,GAAG,UAC7BxD,OAAwB,EAAA;EACZ,OAAAe,aAAa,CAACf,OAAO,CAAC,IAAK,CAAAA,OAAO,KAAA,IAAA,IAAPA,OAAO,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAPA,OAAO,CAAEyD,SAAS,IAAG,CAAE,CAAA;AAAlD,EAAkD;AAKnDC,IAAAA,oBAAoB,GAAG,YAAA;AAAyB,EAAA,OAAA7D,kBAAA,CAAA,EAAA,EAAMtB,iBAAiB,CAAA,CAAA;AAAvB,EAA0B;AAEvF;;AAEG;IACUoF,mBAAmB,GAAG,UACjC3D,OAAwB,EAAA;EAExB,IAAIa,cAAc,CAACb,OAAuB,CAAC,EAAE,OAAOzB,iBAAiB,CAACC,KAAK,CAAA;AAC3E,EAAA,IAAIuC,aAAa,CAACf,OAAsB,CAAC,EAAE;IACzC,OAAOwB,WAAW,CAACxB,OAAsB,CAAC,GAAGzB,iBAAiB,CAACM,EAAE,GAAGN,iBAAiB,CAACE,IAAI,CAAA;AAC3F,GAAA;AACD;AACA,EAAA,IAAIwC,sBAAsB,CAACjB,OAAsB,CAAC,EAAE;IAClD,OAAOzB,iBAAiB,CAACI,cAAc,CAAA;AACxC,GAAA;AACD,EAAA,IAAIqC,aAAa,CAAChB,OAAsB,CAAC,EAAE;AACzC,IAAA,IAAImC,kBAAkB,CAACnC,OAAsB,CAAC,EAAE;MAC9C,OAAOzB,iBAAiB,CAACK,SAAS,CAAA;AACnC,KAAA;AACD,IAAA,IAAIkE,cAAc,CAAC9C,OAAsB,CAAC,EAAE;MAC1C,OAAOjB,cAAc,CAACE,KAAK,CAAA;AAC5B,KAAA;IACD,OAAOV,iBAAiB,CAACG,IAAI,CAAA;AAC9B,GAAA;EACD,OAAOH,iBAAiB,CAACO,OAAO,CAAA;AAClC,EAAC;AAMD,IAAM8E,OAAO,GAAG,UAAC/F,WAA0B,EAAEgG,YAAoC,EAAA;AAC/E,EAAA,IAAIpG,KAAK,CAACC,OAAO,CAACmG,YAAY,CAAC,EAAE;AAC/B,IAAA,OAAWC,uBAAA,CAAAA,uBAAA,CAAA,EAAA,EAAAjG,WAAW,EAAK,IAAA,CAAA,EAAAgG,YAAY,EAAE,IAAA,CAAA,CAAA;AAC1C,GAAA,MAAM;AACLhG,IAAAA,WAAW,CAACkG,IAAI,CAACF,YAAY,CAAC,CAAA;AAC9B,IAAA,OAAOhG,WAAW,CAAA;AACnB,GAAA;AACH,CAAC,CAAA;IACYmG,YAAY,GAAG,UAACC,UAAkD,EAAA;EAAa,OAC1FxG,KAAK,CAACC,OAAO,CAACuG,UAAU,CAAC,GACrBA,UAAU,CAACrG,MAAM,CAACgG,OAAO,EAAE,EAAE,CAAC,CAACzF,IAAI,CAAC,GAAG,CAAC,GACxC8F,UAAU,CAAA;AAH4E,EAI3F;AACM,IAAMC,WAAW,GAAG,UAACC,MAAc,EAAEC,QAAkB,EAAc;EAAA,OAC1EA,QAAQ,CAACC,OAAO,CAACC,IAAI,CAAC,UAACC,aAAqB,EAAc;IAAA,OAAAA,aAAa,KAAKJ,MAAM,CAAA;AAAxB,GAAwB,CAAC,CAAA;AADT,EAE3E;AAMYK,IAAAA,qBAAqB,GAAG,UAACJ,QAAkB,EAAED,MAAc,EAAEM,kBAAuC,EAAEC,SAAoB,EAAA;EACrI,IAAIC,GAAG,GAAG,EAAE,CAAA;AACZ,EAAA,IAAIT,WAAW,CAACC,MAAM,EAAEC,QAAQ,CAAC,EAAE;AACjCO,IAAAA,GAAG,GAAGP,QAAQ,CAACC,OAAO,CAAC1G,MAAM,KAAK,CAAC,GAAG+G,SAAS,CAACE,YAAY,GAAGF,SAAS,CAACG,gBAAgB,CAAA;AAC1F,GAAA;AACD,EAAA,OAAQ,EAAA,CAAA9G,MAAA,CAAGqG,QAAQ,CAACC,OAAO,CACxBS,MAAM,CAAC,UAACP,aAAqB,EAAK;IAAA,OAAAA,aAAa,KAAKJ,MAAM,CAAA;AAAxB,GAAwB,CAAC,CAC3DY,GAAG,CAAC,UAACR,aAAqB;IAAK,OAACE,kBAAkB,CAACO,GAAG,CAACT,aAAa,CAAC,IAAIG,SAAS,CAACO,qBAAqB,CAAA;GAAC,CAAC,CAC1G9G,IAAI,CAAC,IAAI,CAAC,SAAGwG,GAAG,CAAE,CAAA;AACvB,EAAC;AAkCD,IAAMO,OAAO,GAAG,iIAAiI,CAAA;IACpIC,KAAK,GAAG,UAAC/F,IAAY,EAAc;AAAA,EAAA,OAAA8F,OAAO,CAACtC,IAAI,CAACxD,IAAI,CAAC,CAAA;AAAlB,EAAkB;AAK3D,IAAMgG,cAAc,GAAG,UAACC,OAAe,EAAEC,MAAe,EAAA;AAC7D,EAAA,IAAI,CAACA,MAAM,EAAEA,MAAM,GAAG,EAAE,CAAA;EACxB,IAAID,OAAO,KAAK,IAAI,IAAIA,OAAO,KAAKE,SAAS,EAAE,OAAO,EAAE,CAAA;AACxD,EAAA,IAAIF,OAAO,CAAC1H,MAAM,IAAI2H,MAAM,EAAE,OAAOD,OAAO,CAAA;EAC5C,IAAMG,SAAS,GAAG,KAAK,CAAA;AACvB,EAAA,IAAMC,MAAM,GAAGD,SAAS,CAAC7H,MAAM,CAAA;AAC/B,EAAA,IAAM+H,WAAW,GAAGJ,MAAM,GAAGG,MAAM,CAAA;EACnC,IAAME,UAAU,GAAGC,IAAI,CAACC,IAAI,CAACH,WAAW,GAAG,CAAC,CAAC,CAAA;EAC7C,IAAMI,SAAS,GAAGF,IAAI,CAACG,KAAK,CAACL,WAAW,GAAG,CAAC,CAAC,CAAA;EAC7C,OAAOL,OAAO,CAACW,MAAM,CAAC,CAAC,EAAEL,UAAU,CAAC,GAAGH,SAAS,GAAGH,OAAO,CAACW,MAAM,CAACX,OAAO,CAAC1H,MAAM,GAAGmI,SAAS,CAAC,CAAA;AAC/F,EAAC;IAEYG,eAAe,GAAG,UAAC7G,IAAY,EAAA;AAC1C;EACA,IAAI8G,MAAM,CAACC,aAAa,IAAID,MAAM,CAACC,aAAa,CAACC,OAAO,EAAE;AACxD;AACA;IACA,OAAOF,MAAM,CAACC,aAAa,CAACC,OAAO,CAAC,MAAM,EAAEhH,IAAI,CAAC,CAAA;AAClD,GAAA;EACD,IAAIiH,QAAQ,CAACC,qBAAqB,IAAID,QAAQ,CAACC,qBAAqB,CAAC,MAAM,CAAC,EAAE;AAC5E,IAAA,IAAMC,QAAQ,GAAGF,QAAQ,CAACG,aAAa,CAAC,UAAU,CAAC,CAAA;IACnDD,QAAQ,CAACE,WAAW,GAAGrH,IAAI,CAAA;AAC3BmH,IAAAA,QAAQ,CAACG,KAAK,CAACC,QAAQ,GAAG,OAAO,CAAC;AAClCN,IAAAA,QAAQ,CAACO,IAAI,CAACC,WAAW,CAACN,QAAQ,CAAC,CAAA;IACnCA,QAAQ,CAACO,MAAM,EAAE,CAAA;IACjB,IAAI;AACF,MAAA,OAAOT,QAAQ,CAACU,WAAW,CAAC,MAAM,CAAC,CAAC;KACrC,CAAC,OAAOC,EAAE,EAAE;AACX,MAAA,OAAO,KAAK,CAAA;AACb,KAAA,SAAS;AACRX,MAAAA,QAAQ,CAACO,IAAI,CAACK,WAAW,CAACV,QAAQ,CAAC,CAAA;AACpC,KAAA;AACF,GAAA;AACD,EAAA,OAAO,KAAK,CAAA;AACd,EAAC;IAEYW,eAAe,GAAG,UAACC,cAA8B,EAAA;;AAAmB,EAAA,OAC/E,CAAAzF,EAAA,GAAAyF,cAAc,aAAdA,cAAc,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAdA,cAAc,CAAEC,eAAe,0CAAErC,GAAG,CAAC,UAACsC,aAA4B,EAAA;IAAK,OAAAA,aAAa,CAACC,MAAM,CAAA;GAAA,CACxF,CAAA1J,MAAM,CAAC,UAAC2J,OAAqB,EAAEC,OAAqB,EAAA;AAAK,IAAA,OAAAD,OAAO,CAACxJ,MAAM,CAACyJ,OAAO,CAAC,CAAA;GAAA,EAAE,EAAE,CAAC,CAAA;EACzF;IACYC,cAAc,GAAG,UAACN,cAA8B,EAAA;;AAC3D,EAAA,IAAMO,QAAQ,GAAG,IAAIC,GAAG,EAAE,CAAA;AAC1B,EAAA,CAAAjG,EAAA,GAAAyF,cAAc,KAAd,IAAA,IAAAA,cAAc,KAAd,KAAA,CAAA,GAAA,KAAA,CAAA,GAAAA,cAAc,CAAEC,eAAe,MAAE,IAAA,IAAA1F,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAAA,EAAA,CAAAkG,OAAO,CAAC,UAACC,QAAuB,EAAA;;AAC/D,IAAA,CAAAnG,EAAA,GAAAmG,QAAQ,KAAR,IAAA,IAAAA,QAAQ,KAAR,KAAA,CAAA,GAAA,KAAA,CAAA,GAAAA,QAAQ,CAAEP,MAAM,MAAE,IAAA,IAAA5F,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAAA,EAAA,CAAAkG,OAAO,CAAC,UAACE,KAAY,EAAA;AACrC,MAAA,IAAIA,KAAK,IAAIA,KAAK,CAAC3E,GAAG,EAAE;QACtBuE,QAAQ,CAACK,GAAG,CAACD,KAAK,CAAC3E,GAAG,EAAE2E,KAAK,CAAC,CAAA;AAC/B,OAAA;AACH,KAAC,CAAC,CAAA;AACJ,GAAC,CAAC,CAAA;AACF,EAAA,OAAOJ,QAAQ,CAAA;AACjB,EAAC;AACD,IAAMM,YAAY,GAAG,UAACC,SAAiB,EAAK;EAAA,OAAA,UAACvG,EAAO,EAAA;AAAL,IAAA,IAAAyB,GAAG,GAAAzB,EAAA,CAAAyB,GAAA,CAAA;IAAO,OAAAA,GAAG,KAAK8E,SAAS,CAAA;GAAA,CAAA;AAA9B,CAA8B,CAAA;AACnE,IAAMC,WAAW,GAAG,UAACf,cAA+B,EAAEgB,QAAiB,EAAA;;AAC5E,EAAA,IAAMC,YAAY,GAAGJ,YAAY,CAACG,QAAQ,KAAA,IAAA,IAARA,QAAQ,KAAA,KAAA,CAAA,GAARA,QAAQ,GAAI,EAAE,CAAC,CAAA;EACjD,OAAO,CAAA,CAAAvG,EAAA,GAAA,CAAAF,EAAA,GAAAyF,cAAc,KAAA,IAAA,IAAdA,cAAc,KAAd,KAAA,CAAA,GAAA,KAAA,CAAA,GAAAA,cAAc,CAAEC,eAAe,CACnC9D,IAAI,CAAC,UAACuE,QAAQ,EAAA;AAAK,IAAA,OAAAA,QAAQ,CAACP,MAAM,CAAChD,IAAI,CAAC8D,YAAY,CAAC,CAAA;AAAlC,GAAkC,CAAC,MAAE,IAAA,IAAA1G,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAAA,EAAA,CAAA4F,MAAM,CAC9DhE,IAAI,CAAC8E,YAAY,CAAC,0CACjBzG,GAAG,KAAI,EAAE,CAAA;AACf,EAAC;AAEM,IAAM0G,WAAW,GAAG,UAACC,IAAU,EAAa;EAAA,OAAC,CAAAA,IAAI,KAAJ,IAAA,IAAAA,IAAI,uBAAJA,IAAI,CAAEC,UAAU,MAAID,IAAI,KAAJ,IAAA,IAAAA,IAAI,uBAAJA,IAAI,CAAEE,QAAQ,CAAA,KAAIF,IAAI,KAAA,IAAA,IAAJA,IAAI,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAJA,IAAI,CAAEnE,MAAM,CAAA,CAAA;AAAnD,CAAoD,CAAA;IAC1FsE,aAAa,GAAG,UAACzI,OAA4B,EAAa;AAAA,EAAA,OACrE,CAAAA,OAAO,KAAA,IAAA,IAAPA,OAAO,KAAP,KAAA,CAAA,GAAA,KAAA,CAAA,GAAAA,OAAO,CAAE0I,MAAM,KAAIL,WAAW,CAACrI,OAAO,aAAPA,OAAO,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAPA,OAAO,CAAE0I,MAAM,CAAC,CAAA;AADsB,EAEtE;AAEM,IAAMC,cAAc,GAAG,UAAIC,CAAM,EAAEC,CAAM,EAAA;EAC9C,IAAID,CAAC,KAAKC,CAAC,EAAE;AACX,IAAA,OAAO,IAAI,CAAA;AACZ,GAAA;AACD,EAAA,IAAID,CAAC,IAAI,IAAI,IAAIC,CAAC,IAAI,IAAI,EAAE;AAC1B,IAAA,OAAO,KAAK,CAAA;AACb,GAAA;AACD,EAAA,IAAID,CAAC,CAACjL,MAAM,KAAKkL,CAAC,CAAClL,MAAM,EAAE;AACzB,IAAA,OAAO,KAAK,CAAA;AACb,GAAA;AAED,EAAA,IAAMmL,OAAO,GAAGhF,uBAAA,CAAA,EAAA,EAAI8E,CAAC,EAAE,IAAA,CAAA,CAAAG,IAAI,EAAE,CAAA;AAC7B,EAAA,IAAMC,OAAO,GAAGlF,uBAAA,CAAA,EAAA,EAAI+E,CAAC,EAAE,IAAA,CAAA,CAAAE,IAAI,EAAE,CAAA;AAE7B,EAAA,KAAK,IAAIE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,OAAO,CAACnL,MAAM,EAAE,EAAEsL,CAAC,EAAE;IACvC,IAAIH,OAAO,CAACG,CAAC,CAAC,KAAKD,OAAO,CAACC,CAAC,CAAC,EAAE;AAC7B,MAAA,OAAO,KAAK,CAAA;AACb,KAAA;AACF,GAAA;AACD,EAAA,OAAO,IAAI,CAAA;AACb,CAAC,CAAA;AACM,IAAMC,QAAQ,GAAG,UAACZ,IAAoB,EAAA;AAC3C,EAAA,IAAI,CAACA,IAAI,EAAE,OAAO,KAAK,CAAA;EACvB,OAAO,CAAC,EAAEA,IAAI,CAACa,kBAAkB,IAAIb,IAAI,CAACC,UAAU,CAAC,CAAA;AACvD,CAAC,CAAA;AAEM,IAAMa,uBAAuB,GAAG,UACrCC,MAAyB,EACzBrJ,OAA4B,EAAA;;AAEpB,EAAA,IAAA+C,EAAA,GAA2BsG,MAAM,CAAXC,iBAAA;IAAtBA,iBAAiB,GAAGvG,EAAA,KAAA,KAAA,CAAA,GAAA,EAAE,KAAA,CAAA;AAC9B;EACA,IAAI,CAAAsG,MAAM,KAAA,IAAA,IAANA,MAAM,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAANA,MAAM,CAAEE,iBAAiB,KAAIF,MAAM,CAACE,iBAAiB,KAAKvJ,OAAO,CAACc,WAAW,EAAE;AACjF,IAAA,OAAO,KAAK,CAAA;AACb,GAAA;AACD,EAAA,IAAI,CAAAwI,iBAAiB,KAAA,IAAA,IAAjBA,iBAAiB,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAjBA,iBAAiB,CAAE3L,MAAM,IAAG,CAAC,EAAE;IACjC,IAAM6L,WAAW,GAAGF,iBAAiB,CAACxE,MAAM,CAAC,UAAC2E,IAAI,EAAK;MAAA,OAAAA,IAAI,KAAK,GAAG,CAAA;AAAZ,KAAY,CAAC,CAAA;AACpE;AACA,IAAA,IAAID,WAAW,CAAC7L,MAAM,GAAG,CAAC,IAAI,CAAC6L,WAAW,CAACE,QAAQ,CAAC1J,OAAO,CAAC2J,UAAU,CAAC,EAAE;AACvE,MAAA,OAAO,KAAK,CAAA;AACb,KAAA;AACF,GAAA;EACD,IAAI,CAAAN,MAAM,KAAN,IAAA,IAAAA,MAAM,uBAANA,MAAM,CAAEO,mBAAmB,KAAI,CAAA,CAAAlI,EAAA,GAAA2H,MAAM,KAAN,IAAA,IAAAA,MAAM,uBAANA,MAAM,CAAEO,mBAAmB,MAAE,IAAA,IAAAlI,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAAA,EAAA,CAAA/D,MAAM,IAAG,CAAC,EAAE;AAC1E,IAAA,IAAI,CAAA,MAAAqC,OAAO,KAAA,IAAA,IAAPA,OAAO,KAAP,KAAA,CAAA,GAAA,KAAA,CAAA,GAAAA,OAAO,CAAEe,aAAa,MAAA,IAAA,IAAAa,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAAA,EAAA,CAAAR,IAAA,CAAApB,OAAA,CAAI,MAAI,CAAA8B,EAAA,GAAA9B,OAAO,aAAPA,OAAO,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAPA,OAAO,CAAEgB,aAAa,MAAI,IAAA,IAAAc,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAAA,EAAA,CAAAV,IAAA,CAAApB,OAAA,CAAA,CAAA,EAAE;MAC5D,IAAM6J,aAAa,GAAI7J,OAA+B,CAAC0I,MAAM,IAAI1I,OAAO,CAAC,SAAS,CAAC,CAAA;MACnF,IAAI,EAAC,CAAAgC,EAAA,GAAAqH,MAAM,aAANA,MAAM,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAANA,MAAM,CAAEO,mBAAmB,MAAA,IAAA,IAAA5H,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAAA,EAAA,CAAE0H,QAAQ,CAACG,aAAa,aAAbA,aAAa,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAbA,aAAa,CAAE1F,MAAM,CAAC,CAAA,EAAE;AACjE,QAAA,OAAO,KAAK,CAAA;AACb,OAAA;AACF,KAAA,MAAM;AACL,MAAA,OAAO,KAAK,CAAA;AACb,KAAA;AACF,GAAA;EACD,IAAI,EAACkF,MAAM,KAAA,IAAA,IAANA,MAAM,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAANA,MAAM,CAAES,wBAAwB,CAAA,KAAK,CAAA9J,OAAO,KAAA,IAAA,IAAPA,OAAO,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAPA,OAAO,CAAEsB,eAAe,MAAItB,OAAO,KAAA,IAAA,IAAPA,OAAO,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAPA,OAAO,CAAEuB,aAAa,CAAA,CAAC,EAAE;AAC7F,IAAA,OAAO,KAAK,CAAA;AACb,GAAA;AACD,EAAA,OAAO,IAAI,CAAA;AACb,EAAC;AAEM,IAAMwI,uBAAuB,GAAG,UAACV,MAA6B,EAAElJ,OAAqB,EAAE6J,aAAqB,EAAA;;AAE/G,EAAA,IAAAC,YAAY,GAiBVZ,MAAM,CAAAY,YAjBI;IACZC,aAAa,GAgBXb,MAAM,CAhBKa,aAAA;IACbC,YAAY,GAeVd,MAAM,aAfI;IACZe,aAAa,GAcXf,MAAM,CAAAe,aAdK;IACbd,iBAAiB,GAafD,MAAM,kBAbS;IACjBgB,iBAAiB,GAYfhB,MAAM,CAAAgB,iBAZS;IACjBC,0BAA0B,GAWxBjB,MAAM,CAXkBiB,0BAAA;IAC1BC,yBAAyB,GAUvBlB,MAAM,0BAViB;IACzBmB,sBAAsB,GASpBnB,MAAM,CAAAmB,sBATc;IACtBC,mBAAmB,GAQjBpB,MAAM,oBARW;IACnBqB,mBAAmB,GAOjBrB,MAAM,CAAAqB,mBAPW;IACnBC,mBAAmB,GAMjBtB,MAAM,CANWsB,mBAAA;IACnBC,mBAAmB,GAKjBvB,MAAM,oBALW;IACnBwB,kBAAkB,GAIhBxB,MAAM,CAAAwB,kBAJU;IAClBC,EAAA,GAGEzB,MAAM,CAAA0B,WAHQ;IAAhBA,WAAW,GAAAD,EAAA,KAAA,KAAA,CAAA,GAAG,EAAE,GAAAA,EAAA;IAChBE,KAEE3B,MAAM,CAAA4B,cAFmB;AAA3BA,IAAAA,cAAc,GAAAD,EAAA,KAAA,KAAA,CAAA,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,GAAAA,EAAA;IAC3BE,uBAAuB,GACrB7B,MAAM,CAAA6B,uBADe,CAAA;EAGzB,IAAI,CAACjB,YAAY,IAAI,CAAA9J,OAAO,KAAA,IAAA,IAAPA,OAAO,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAPA,OAAO,CAAEgL,WAAW,MAAK,IAAI,EAAE;AAClD,IAAA,OAAO,KAAK,CAAA;AACb,GAAA;AACD,EAAA,IAAI,CAAAhB,YAAY,KAAA,IAAA,IAAZA,YAAY,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAZA,YAAY,CAAEiB,KAAK,KAAI,CAAC,CAAAxJ,EAAA,GAAA,CAAAF,EAAA,GAAAyI,YAAY,aAAZA,YAAY,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAZA,YAAY,CAAEkB,MAAM,MAAA,IAAA,IAAA3J,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAAA,EAAA,CAAE/D,MAAM,MAAA,IAAA,IAAAiE,EAAA,KAAA,KAAA,CAAA,GAAAA,EAAA,GAAI,CAAC,IAAI,CAAC,EAAE;AAClE,IAAA,IAAM0J,aAAW,GAAGnB,YAAY,CAACiB,KAAK,CAAA;AACtC,IAAA,IAAMG,YAAY,GAAGpB,YAAY,CAACkB,MAAM,CAAA;IACxC,IAAIC,aAAW,IAAIC,YAAY,IAAIA,YAAY,CAAC5N,MAAM,GAAG,CAAC,EAAE;AAC1D,MAAA,IAAI,CAAC4N,YAAY,CAACjH,IAAI,CAAC,UAACkH,WAAW,EAAA;;AACjC,QAAA,QAAQA,WAAW;AACjB,UAAA,KAAK,cAAc;AAAE,YAAA;AACnB,cAAA,OAAO,MAAArL,OAAO,KAAA,IAAA,IAAPA,OAAO,KAAP,KAAA,CAAA,GAAA,KAAA,CAAA,GAAAA,OAAO,CAAEsL,IAAI,MAAA,IAAA,IAAA/J,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAAA,EAAA,CAAEgK,WAAW,EAAA,CAAGhC,QAAQ,CAAC4B,aAAW,CAACI,WAAW,EAAE,CAAC,CAAA;AACxE,aAAA;AACD,UAAA,KAAK,iBAAiB;AAAE,YAAA;AACtB,cAAA,OAAO,CAAA9J,EAAA,GAAAzB,OAAO,KAAP,IAAA,IAAAA,OAAO,uBAAPA,OAAO,CAAEwL,OAAO,MAAA,IAAA,IAAA/J,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAAA,EAAA,CAAE0C,IAAI,CAAC,UAACsH,MAAc;AAAK,gBAAA,OAAAA,MAAM,CAACpD,QAAQ,CAACkD,WAAW,EAAE,CAAChC,QAAQ,CAAC4B,aAAW,CAACI,WAAW,EAAE,CAAC,CAAA;AAAjE,eAAiE,CAAC,CAAA;AACrH,aAAA;AACD,UAAA;AAAS,YAAA;AACP,cAAA,OAAO,IAAI,CAAA;AACZ,aAAA;AACF,SAAA;AACH,OAAC,CAAC,EAAE;AACF,QAAA,OAAO,KAAK,CAAA;AACb,OAAA;AACF,KAAA;AACF,GAAA;AACD,EAAA,IAAI,CAAA,CAAA5J,EAAA,GAAAsI,aAAa,KAAA,IAAA,IAAbA,aAAa,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAbA,aAAa,CAAE/F,OAAO,MAAA,IAAA,IAAAvC,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAAA,EAAA,CAAEnE,MAAM,IAAG,CAAC,EAAE;AAC9B,IAAA,IAAAkO,WAAW,GAAgBzB,aAAa,CAAAyB,WAA7B;MAAEC,SAAS,GAAK1B,aAAa,CAAA0B,SAAlB,CAAA;AAC9B,IAAA,IAAMzH,OAAO,GAAkB+F,aAAa,CAAC/F,OAAO,CAAA;AACpD,IAAA,IAAM0H,WAAS,GAAG,CAAA/J,EAAA,GAAA7B,OAAO,aAAPA,OAAO,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAPA,OAAO,CAAEwL,OAAO,MAAA,IAAA,IAAA3J,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAAA,EAAA,CAAE+C,GAAG,CAAC,UAAC6G,MAAc,EAAA;MAAK,OAAAA,MAAM,CAACzH,MAAM,CAAA;AAAb,KAAa,CAAC,CAAA;IAC1E,IAAI,CAAC0H,WAAW,EAAE;AAAE;AAClB,MAAA,IAAI,CAACxH,OAAO,CAACqF,QAAQ,CAACM,aAAa,CAAC,EAAE;AACpC3F,QAAAA,OAAO,CAACN,IAAI,CAACiG,aAAa,CAAC,CAAC;AAC7B,OAAA;;AACD,MAAA,IAAI,CAAA,CAAAjH,EAAA,GAAA5C,OAAO,KAAA,IAAA,IAAPA,OAAO,KAAP,KAAA,CAAA,GAAA,KAAA,CAAA,GAAAA,OAAO,CAAEwL,OAAO,0CAAEhO,MAAM,IAAG0G,OAAO,CAAC1G,MAAM,EAAE;QAC7C,OAAO,KAAK,CAAC;AACd,OAAA;;AACD,MAAA,IAAI,CAACgL,cAAc,CAACtE,OAAO,EAAE0H,WAAS,CAAC,EAAE;AACvC,QAAA,OAAO,KAAK,CAAA;AACb,OAAA;AACF,KAAA,MAAM,IAAI1H,OAAO,CAAC1G,MAAM,GAAG,CAAC,EAAE;AAAE;AAC/B,MAAA,QAAQmO,SAAS;AACf,QAAA,KAAK,KAAK;AAAE,UAAA;AACV,YAAA,IAAIzH,OAAO,CAACC,IAAI,CAAC,UAACH,MAAc;AAAK,cAAA,OAAA,CAAC4H,WAAS,CAACrC,QAAQ,CAACvF,MAAM,CAAC,CAAA;AAA3B,aAA2B,CAAC,EAAE;AACjE,cAAA,OAAO,KAAK,CAAA;AACb,aAAA;AACD,YAAA,MAAA;AACD,WAAA;AACD,QAAA,KAAK,IAAI;AAAE,UAAA;AACT,YAAA,IAAIE,OAAO,CAAC2H,KAAK,CAAC,UAAC7H,MAAc;AAAK,cAAA,OAAA,CAAC4H,WAAS,CAACrC,QAAQ,CAACvF,MAAM,CAAC,CAAA;AAA3B,aAA2B,CAAC,EAAE;AAClE,cAAA,OAAO,KAAK,CAAA;AACb,aAAA;AACD,YAAA,MAAA;AACD,WAAA;AAIF,OAAA;AACF,KAAA;AACF,GAAA;EACD,IAAI8F,YAAY,KAAK,KAAK,IAAI,CAAA9J,OAAO,KAAA,IAAA,IAAPA,OAAO,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAPA,OAAO,CAAEgL,WAAW,MAAK,IAAI,EAAE;AAC3D,IAAA,OAAO,KAAK,CAAA;AACb,GAAA;EACD,IAAIjB,aAAa,KAAK,KAAK,IAAI,CAAA/J,OAAO,KAAA,IAAA,IAAPA,OAAO,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAPA,OAAO,CAAE8L,QAAQ,MAAK,IAAI,EAAE;AACzD,IAAA,OAAO,KAAK,CAAA;AACb,GAAA;EACD,IAAI3C,iBAAiB,IAAI,CAACA,iBAAiB,CAACI,QAAQ,CAACvJ,OAAO,KAAA,IAAA,IAAPA,OAAO,KAAP,KAAA,CAAA,GAAA,KAAA,CAAA,GAAAA,OAAO,CAAEwJ,UAAU,CAAC,EAAE;AACzE,IAAA,OAAO,KAAK,CAAA;AACb,GAAA;AACD,EAAA,IAAIW,0BAA0B,IAAI,CAAC,IAAI4B,MAAM,CAAC,GAAA,CAAAnO,MAAA,CAAIuM,0BAA0B,CAAE,CAAC,CAAC1H,IAAI,CAACzC,OAAO,KAAP,IAAA,IAAAA,OAAO,uBAAPA,OAAO,CAAEwJ,UAAU,CAAC,EAAE;AACzG,IAAA,OAAO,KAAK,CAAA;AACb,GAAA;EACD,IAAIY,yBAAyB,IAAI,EAAC,MAAApK,OAAO,KAAA,IAAA,IAAPA,OAAO,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAPA,OAAO,CAAEsL,IAAI,MAAE,IAAA,IAAAvI,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAAA,EAAA,CAAAwI,WAAW,EAAG,CAAAhC,QAAQ,CAACa,yBAAyB,CAACmB,WAAW,EAAE,CAAC,CAAA,EAAE;AAChH,IAAA,OAAO,KAAK,CAAA;AACb,GAAA;AACD,EAAA,IAAIlB,sBAAsB,EAAE;AAC1B,IAAA,IAAM2B,qBAAmB,GAAG3B,sBAAsB,CAACkB,WAAW,EAAE,CAAA;AAChE,IAAA,IAAI,CAAAU,EAAA,GAAAjM,OAAO,KAAP,IAAA,IAAAA,OAAO,KAAP,KAAA,CAAA,GAAA,KAAA,CAAA,GAAAA,OAAO,CAAEwL,OAAO,MAAE,IAAA,IAAAS,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAAA,EAAA,CAAAJ,KAAK,CAAC,UAACJ,MAAc,EAAK;AAAA,MAAA,OAAA,CAACA,MAAM,CAACpD,QAAQ,CAACkD,WAAW,EAAE,CAAChC,QAAQ,CAACyC,qBAAmB,CAAC,CAAA;AAA5D,KAA4D,CAAC,EAAE;AAC7G,MAAA,OAAO,KAAK,CAAA;AACb,KAAA;AACF,GAAA;EACD,IAAI9B,iBAAiB,IAAI,CAACA,iBAAiB,CAACX,QAAQ,CAACvJ,OAAO,KAAA,IAAA,IAAPA,OAAO,KAAP,KAAA,CAAA,GAAA,KAAA,CAAA,GAAAA,OAAO,CAAEwB,GAAG,CAAC,EAAE;AAClE,IAAA,OAAO,KAAK,CAAA;AACb,GAAA;AACD,EAAA,IAAI8I,mBAAmB,EAAE;AACvB,IAAA,QAAQA,mBAAmB;AACzB,MAAA,KAAK,aAAa;AAChB,QAAA,IAAI,CAAAtK,OAAO,KAAA,IAAA,IAAPA,OAAO,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAPA,OAAO,CAAEkM,aAAa,MAAK,QAAQ,EAAE;AACvC,UAAA,OAAO,KAAK,CAAA;AACb,SAAA;AACD,QAAA,MAAA;AACF,MAAA,KAAK,cAAc;AACjB,QAAA,IAAI,CAAAlM,OAAO,KAAA,IAAA,IAAPA,OAAO,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAPA,OAAO,CAAEkM,aAAa,MAAK,SAAS,EAAE;AACxC,UAAA,OAAO,KAAK,CAAA;AACb,SAAA;AACD,QAAA,MAAA;AACF,MAAA,KAAK,mBAAmB;AACtB,QAAA,IAAI,CAAAlM,OAAO,KAAP,IAAA,IAAAA,OAAO,uBAAPA,OAAO,CAAEkM,aAAa,MAAK,SAAS,IAAI,CAACnD,QAAQ,CAAC/I,OAAO,KAAP,IAAA,IAAAA,OAAO,uBAAPA,OAAO,CAAEmM,OAAO,CAAC,EAAE;AACvE,UAAA,OAAO,KAAK,CAAA;AACb,SAAA;AACD,QAAA,MAAA;AACF,MAAA,KAAK,uBAAuB;AAC1B,QAAA,IAAI,CAAAnM,OAAO,KAAP,IAAA,IAAAA,OAAO,uBAAPA,OAAO,CAAEkM,aAAa,MAAK,SAAS,IAAInD,QAAQ,CAAC/I,OAAO,KAAP,IAAA,IAAAA,OAAO,uBAAPA,OAAO,CAAEmM,OAAO,CAAC,EAAE;AACtE,UAAA,OAAO,KAAK,CAAA;AACb,SAAA;AACD,QAAA,MAAA;AACH,KAAA;AACF,GAAA;AACD,EAAA,IAAI5B,mBAAmB,EAAE;AACvB,IAAA,QAAQA,mBAAmB;AACzB,MAAA,KAAK,eAAe;AAClB,QAAA,IAAI,CAAAvK,OAAO,KAAA,IAAA,IAAPA,OAAO,KAAP,KAAA,CAAA,GAAA,KAAA,CAAA,GAAAA,OAAO,CAAEoM,QAAQ,KAAI,CAAApM,OAAO,KAAA,IAAA,IAAPA,OAAO,KAAP,KAAA,CAAA,GAAA,KAAA,CAAA,GAAAA,OAAO,CAAEqM,WAAW,MAAK,UAAU,EAAE;AAC5D,UAAA,OAAO,KAAK,CAAA;AACb,SAAA;AACD,QAAA,MAAA;AACF,MAAA,KAAK,aAAa;AAChB,QAAA,IAAI,EAACrM,OAAO,KAAP,IAAA,IAAAA,OAAO,uBAAPA,OAAO,CAAEoM,QAAQ,CAAA,EAAE;AACtB,UAAA,OAAO,KAAK,CAAA;AACb,SAAA;AACD,QAAA,MAAA;AACF,MAAA,KAAK,0BAA0B;AAC7B,QAAA,IAAI,EAACpM,OAAO,KAAA,IAAA,IAAPA,OAAO,KAAP,KAAA,CAAA,GAAA,KAAA,CAAA,GAAAA,OAAO,CAAEoM,QAAQ,CAAA,IAAI,CAAApM,OAAO,aAAPA,OAAO,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAPA,OAAO,CAAEqM,WAAW,MAAK,0BAA0B,EAAE;AAC7E,UAAA,OAAO,KAAK,CAAA;AACb,SAAA;AACD,QAAA,MAAA;AACF,MAAA,KAAK,4BAA4B;AAC/B,QAAA,IAAI,EAACrM,OAAO,KAAA,IAAA,IAAPA,OAAO,KAAP,KAAA,CAAA,GAAA,KAAA,CAAA,GAAAA,OAAO,CAAEoM,QAAQ,CAAA,IAAI,CAAApM,OAAO,aAAPA,OAAO,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAPA,OAAO,CAAEqM,WAAW,MAAK,4BAA4B,EAAE;AAC/E,UAAA,OAAO,KAAK,CAAA;AACb,SAAA;AACD,QAAA,MAAA;AACH,KAAA;AACF,GAAA;AACD,EAAA,IAAI7B,mBAAmB,EAAE;AACvB,IAAA,QAAQA,mBAAmB;AACzB,MAAA,KAAK,gBAAgB;AACnB,QAAA,IAAI,CAAAxK,OAAO,KAAA,IAAA,IAAPA,OAAO,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAPA,OAAO,CAAEsM,kBAAkB,MAAK,CAAC,EAAE;AACrC,UAAA,OAAO,KAAK,CAAA;AACb,SAAA;AACD,QAAA,MAAA;AACH,KAAA;AACF,GAAA;AACD,EAAA,IAAI7B,mBAAmB,EAAE;AACvB,IAAA,QAAQA,mBAAmB;AACzB,MAAA,KAAK,QAAQ;AACX,QAAA,IAAI,EAACzK,OAAO,KAAP,IAAA,IAAAA,OAAO,uBAAPA,OAAO,CAAEuM,QAAQ,CAAA,EAAE;AACtB,UAAA,OAAO,KAAK,CAAA;AACb,SAAA;AACD,QAAA,MAAA;AACF,MAAA,KAAK,SAAS;AACZ,QAAA,IAAIvM,OAAO,KAAP,IAAA,IAAAA,OAAO,uBAAPA,OAAO,CAAEuM,QAAQ,EAAE;AACrB,UAAA,OAAO,KAAK,CAAA;AACb,SAAA;AACD,QAAA,MAAA;AACH,KAAA;AACF,GAAA;AACD,EAAA,IAAI7B,kBAAkB,EAAE;AACtB,IAAA,QAAQA,kBAAkB;AACxB,MAAA,KAAK,OAAO;AACV,QAAA,IAAI,EAAC1K,OAAO,KAAP,IAAA,IAAAA,OAAO,uBAAPA,OAAO,CAAEwM,OAAO,CAAA,EAAE;AACrB,UAAA,OAAO,KAAK,CAAA;AACb,SAAA;AACD,QAAA,MAAA;AACF,MAAA,KAAK,UAAU;AACb,QAAA,IAAIxM,OAAO,KAAP,IAAA,IAAAA,OAAO,uBAAPA,OAAO,CAAEwM,OAAO,EAAE;AACpB,UAAA,OAAO,KAAK,CAAA;AACb,SAAA;AACD,QAAA,MAAA;AACH,KAAA;AACF,GAAA;AACO,EAAA,IAAAC,EAAA,GAAwBzM,OAAO,CAAZ0M,cAAA;IAAnBA,cAAc,GAAGD,EAAA,KAAA,KAAA,CAAA,GAAA,EAAE,KAAA,CAAA;AAC3B,EAAA,IAAI7B,WAAW,KAAKE,cAAc,IAAIC,uBAAuB,CAAC,EAAE;AAC9D,IAAA,IAAM4B,eAAa,GAAWD,cAAc,CAAC9B,WAAW,CAAC,CAAA;IACzD,IAAI,CAAC+B,eAAa,EAAE;AAClB,MAAA,OAAO,KAAK,CAAA;AACb,KAAA;IACD,IAAI7B,cAAc,IAAI,CAACA,cAAc,CAACe,KAAK,CAAC,UAAA5I,KAAK,EAAA;AAAI,MAAA,OAAA0J,eAAa,CAACpD,QAAQ,CAACtG,KAAK,CAAC,CAAA;AAA7B,KAA6B,CAAC,EAAE;AACnF,MAAA,OAAO,KAAK,CAAA;AACb,KAAA;IACD,IAAI8H,uBAAuB,IAAI,CAAC4B,eAAa,CAACC,UAAU,CAAC7B,uBAAuB,CAAC,EAAE;AACjF,MAAA,OAAO,KAAK,CAAA;AACb,KAAA;AACF,GAAA;AACD,EAAA,OAAO,IAAI,CAAA;AACb,EAAC;AAEM,IAAM8B,YAAY,GAAG,UAACC,IAAmB,EAAEC,MAAc,EAAA;EAC9D,IAAMC,KAAK,GAAGvH,IAAI,CAACG,KAAK,CAACkH,IAAI,CAACtP,MAAM,GAAG,CAAC,CAAC,CAAA;AACzC,EAAA,IAAIsP,IAAI,CAACE,KAAK,CAAC,KAAKD,MAAM,EAAE;AAC1B,IAAA,OAAOC,KAAK,CAAA;AACb,GAAA;EACD,IAAMC,QAAQ,GAAGH,IAAI,CAACI,KAAK,CAAC,CAAC,EAAEF,KAAK,CAAC,CAAA;AACrC,EAAA,IAAMG,SAAS,GAAGL,IAAI,CAACI,KAAK,CAACF,KAAK,GAAG,CAAC,EAAEF,IAAI,CAACtP,MAAM,CAAC,CAAA;AACpD,EAAA,IAAIsP,IAAI,CAACE,KAAK,CAAC,GAAGD,MAAM,EAAE;AACxB,IAAA,OAAOC,KAAK,GAAG,CAAC,IAAIG,SAAS,CAAC3P,MAAM,KAAK,CAAC,GAAG,CAAC,GAAGqP,YAAY,CAACM,SAAS,EAAEJ,MAAM,CAAC,CAAC,CAAA;AAClF,GAAA,MAAM;AACL,IAAA,OAAQE,QAAQ,CAACzP,MAAM,KAAK,CAAC,GAAIwP,KAAK,GAAGH,YAAY,CAACI,QAAQ,EAAEF,MAAM,CAAC,CAAA;AACxE,GAAA;AACH,CAAC,CAAA;AACD;AACO,IAAMK,8BAA8B,GAAG,UAACC,QAA6B,EAAErN,OAAqB,EAAA;;AACjG,EAAA,IAAIqN,QAAQ,CAAClJ,IAAI,CAAC,UAACmJ,EAAgB,EAAA;AAAK,IAAA,OAAAA,EAAE,CAAC9L,GAAG,MAAKxB,OAAO,KAAA,IAAA,IAAPA,OAAO,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAPA,OAAO,CAAEwB,GAAG,CAAA,CAAA;AAAvB,GAAuB,CAAC,EAAE;AAChE,IAAA,OAAO6L,QAAQ,CAACzI,GAAG,CAAC,UAAC0I,EAAgB,EAAA;MAAK,OAACA,EAAE,CAAC9L,GAAG,MAAKxB,OAAO,KAAP,IAAA,IAAAA,OAAO,KAAP,KAAA,CAAA,GAAA,KAAA,CAAA,GAAAA,OAAO,CAAEwB,GAAG,CAAA,GAAGxB,OAAO,GAAGsN,EAAE,CAAA;AAAvC,KAAwC,CAAC,CAAA;AACpF,GAAA;EACD,IAAMC,WAAW,GAAGV,YAAY,CAC9BQ,QAAQ,CAACzI,GAAG,CAAC,UAAC5E,OAAqB,EAAA;AAAA,IAAA,IAAAuB,EAAA,CAAA;IAAK,OAAA,CAAA,MAAAvB,OAAO,KAAA,IAAA,IAAPA,OAAO,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAPA,OAAO,CAAEgL,WAAW,MAAA,IAAA,IAAAzJ,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAAA,EAAA,CAAEiM,SAAS,MAAIxN,OAAO,KAAA,IAAA,IAAPA,OAAO,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAPA,OAAO,CAAEwN,SAAS,CAAA,CAAA;GAAA,CAAC,EAC9F,CAAA,CAAAjM,EAAA,GAAAvB,OAAO,KAAP,IAAA,IAAAA,OAAO,KAAP,KAAA,CAAA,GAAA,KAAA,CAAA,GAAAA,OAAO,CAAEgL,WAAW,MAAE,IAAA,IAAAzJ,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAAA,EAAA,CAAAiM,SAAS,MAAIxN,OAAO,KAAP,IAAA,IAAAA,OAAO,KAAP,KAAA,CAAA,GAAA,KAAA,CAAA,GAAAA,OAAO,CAAEwN,SAAS,CAAA,CACtD,CAAA;AACD,EAAA,OAAW7J,uBAAA,CAAAA,uBAAA,CAAAA,uBAAA,CAAA,EAAA,EAAA0J,QAAQ,CAACH,KAAK,CAAC,CAAC,EAAEK,WAAW,CAAC,EAAE,IAAA,CAAA,EAAA,CAAAvN,OAAO,WAAKqN,QAAQ,CAACH,KAAK,CAACK,WAAW,EAAEF,QAAQ,CAAC7P,MAAM,CAAC,EAAE,IAAA,CAAA,CAAA;AACvG,EAAC;AAcWiQ,+BAIX;AAJD,CAAA,UAAYA,aAAa,EAAA;AACvBA,EAAAA,aAAA,CAAA,QAAA,CAAA,GAAA,QAAiB,CAAA;AACjBA,EAAAA,aAAA,CAAA,SAAA,CAAA,GAAA,SAAmB,CAAA;AACnBA,EAAAA,aAAA,CAAA,KAAA,CAAA,GAAA,KAAW,CAAA;AACb,CAAC,EAJWA,qBAAa,KAAbA,qBAAa,GAIxB,EAAA,CAAA,CAAA,CAAA;AAOD;;;AAGG;AACI,IAAMC,sBAAsB,GAAG,UAACC,IAAY,EAAEC,MAAmB,EAAEC,SAAkB,EAAA;AAC1F,EAAA,IAAMC,KAAK,GAAGF,MAAM,IAAI,EAAE,CAAA;AAC1B,EAAA,IAAMG,QAAQ,GAAGF,SAAS,IAAI,GAAG,CAAC;EAClC,IAAMG,WAAW,GAAqB,EAAE,CAAA;EACxC,IAAMC,KAAK,GAAGlC,MAAM,CAAC,UAAGgC,QAAQ,EAAA,IAAA,CAAA,CAAAnQ,MAAA,CAAKkQ,KAAK,CAAClJ,GAAG,CAAC,UAACuD,IAAI,EAAA;AAAK,IAAA,OAAAA,IAAI,KAAA,IAAA,IAAJA,IAAI,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAJA,IAAI,CAAEnE,MAAM,CAAA;GAAA,CAAC,CAAChG,IAAI,CAAC,GAAG,CAAC,EAAA,IAAA,CAAI,EAAE,GAAG,CAAC,CAAA;AAC1F,EAAA,IAAIkQ,cAAc,CAAA;EAClB,IAAIC,SAAS,GAAG,CAAC,CAAA;;AAER,IAAA,IAAAC,UAAQ,GAAYF,cAAc,CAAA,CAAA,CAA1B;AAAElK,MAAAA,MAAM,GAAIkK,cAAc,CAAA,CAAA,CAAlB,CAAA;AACvB,IAAA,IAAMG,QAAQ,GAAGJ,KAAK,CAACE,SAAS,CAAA;AAChC,IAAA,IAAMG,UAAU,GAAGD,QAAQ,GAAGD,UAAQ,CAAC5Q,MAAM,CAAA;AAC7C;IACA,IAAM+Q,UAAU,GAAGZ,IAAI,CAACT,KAAK,CAACiB,SAAS,EAAEG,UAAU,CAAC,CAAA;IACpDN,WAAW,CAACpK,IAAI,CAAC;AACfzE,MAAAA,IAAI,EAAE6F,KAAK,CAACuJ,UAAU,CAAC,GAAGd,qBAAa,CAACjM,GAAG,GAAGiM,qBAAa,CAACe,MAAM;AAClEvL,MAAAA,KAAK,EAAEsL,UAAAA;AACR,KAAA,CAAC,CAAA;AACF;IACA,IAAME,aAAa,GAAGX,KAAK,CAAC3K,IAAI,CAAC,UAACgF,IAAI,EAAA;AAAK,MAAA,OAAA,CAAAA,IAAI,KAAJ,IAAA,IAAAA,IAAI,KAAJ,KAAA,CAAA,GAAA,KAAA,CAAA,GAAAA,IAAI,CAAEnE,MAAM,MAAKA,MAAM,CAAA;AAAvB,KAAuB,CAAC,CAAA;IACnE,IAAI,CAACyK,aAAa,EAAE;MAClBT,WAAW,CAACpK,IAAI,CAAC;QACfzE,IAAI,EAAEsO,qBAAa,CAACe,MAAM;QAC1BvL,KAAK,EAAEmL,UAAQ;AAChB,OAAA,CAAC,CAAA;AACH,KAAA,MAAM;MACLJ,WAAW,CAACpK,IAAI,CAAC;QACfzE,IAAI,EAAEsO,qBAAa,CAACiB,OAAO;AAC3BzL,QAAAA,KAAK,EAAE,CAAAwL,aAAa,KAAb,IAAA,IAAAA,aAAa,uBAAbA,aAAa,CAAEpG,QAAQ,KAAI,WAAW;AAC7CrE,QAAAA,MAAM,EAAEA,MAAAA;AACT,OAAA,CAAC,CAAA;AACH,KAAA;AACDmK,IAAAA,SAAS,GAAGE,QAAQ,CAAA;;EAxBtB,OAAO,CAACH,cAAc,GAAGD,KAAK,CAACU,IAAI,CAAChB,IAAI,CAAC,MAAM,IAAI,EAAA;;AAyBlD,GAAA;AACD,EAAA,IAAIQ,SAAS,GAAGR,IAAI,CAACnQ,MAAM,EAAE;AAC3B;AACA,IAAA,IAAM+Q,UAAU,GAAGZ,IAAI,CAACT,KAAK,CAACiB,SAAS,CAAC,CAAA;IACxCH,WAAW,CAACpK,IAAI,CAAC;AACfzE,MAAAA,IAAI,EAAE6F,KAAK,CAACuJ,UAAU,CAAC,GAAGd,qBAAa,CAACjM,GAAG,GAAGiM,qBAAa,CAACe,MAAM;AAClEvL,MAAAA,KAAK,EAAEsL,UAAAA;AACR,KAAA,CAAC,CAAA;AACH,GAAA;AACD,EAAA,OAAOP,WAAW,CAAA;AACpB,EAAC;AAEM,IAAMY,UAAU,GAAG,UAACC,MAAsB,EAAEC,MAAsB,EAAA;EACvE,IAAIxR,KAAK,CAACC,OAAO,CAACsR,MAAM,CAAC,IAAIvR,KAAK,CAACC,OAAO,CAACuR,MAAM,CAAC,IAAID,MAAM,CAACrR,MAAM,KAAKsR,MAAM,CAACtR,MAAM,EAAE;AACrF,IAAA,KAAK,IAAIsL,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG+F,MAAM,CAACrR,MAAM,EAAEsL,CAAC,EAAE,EAAE;MACtC,IAAI+F,MAAM,CAAC/F,CAAC,CAAC,KAAKgG,MAAM,CAAChG,CAAC,CAAC,EAAE;AAC3B,QAAA,OAAO,KAAK,CAAA;AACb,OAAA;AACF,KAAA;AACD,IAAA,OAAO,IAAI,CAAA;AACZ,GAAA;AACD,EAAA,OAAO,KAAK,CAAA;AACd,EAAC;IAEYiG,iBAAiB,GAAG,UAAClP,OAA4B,EAAA;AAC5D,EAAA,OAAOmP,OAAO,CAACnP,OAAO,CAAC,IAAI,QAAQ,IAAIA,OAAO,CAAA;AAChD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}