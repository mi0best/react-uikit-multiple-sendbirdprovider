{"version":3,"file":"sendbirdSelectors.js","sources":["../../src/lib/selectors.ts"],"sourcesContent":["import topics from './pubSub/topics';\nimport type {\n  User,\n  UserUpdateParams,\n} from '@sendbird/chat';\n\nimport { FailedMessageHandler, MessageHandler, UserMessage, UserMessageCreateParams } from '@sendbird/chat/message';\nimport { GroupChannel, GroupChannelCreateParams, SendbirdGroupChat } from '@sendbird/chat/groupChannel';\nimport { OpenChannel, OpenChannelCreateParams, SendbirdOpenChat } from '@sendbird/chat/openChannel';\nimport { FileMessage, FileMessageCreateParams, SendableMessage, UserMessageUpdateParams } from '@sendbird/chat/lib/__definition';\n\nimport {\n  SdkStore,\n  SendBirdState,\n  SendBirdStateConfig,\n  SendBirdStateStore,\n} from './types';\nimport { noop } from '../utils/utils';\nimport { SendableMessageType } from '../utils';\n\n/**\n * 1. UIKit Instances\n *    a. getSdk\n *    b. getPubSub\n * 2. Chat & Connection\n *    a. getConnect\n *    b. getDisconnect\n *    c. getUpdateUserInfo\n * 3. Channel\n *    a. getCreateGroupChannel\n *    b. getCreateOpenChannel\n *    c. getGetGroupChannel\n *    d. getGetOpenChannel\n *    e. getLeaveGroupChannel\n *    f. getEnterOpenChannel\n *    g. getExitOpenChannel\n *    h. getFreezeChannel\n *    i. getUnfreezeChannel\n * 4. Message\n *    a. getSendUserMessage\n *    b. getSendFileMessage\n *    c. getUpdateUserMessage\n *    d. x - getUpdateFileMessage\n *    e. getDeleteMessage\n *    f. getResendUserMessage\n *    g. getResendFileMessage\n */\n\n/**\n * import useSendbirdStateContext from '@sendbird-uikit/useSendbirdStateContext'\n * import selectors from '@sendbird-uikit/send'\n * const state = useSendbirdStateContext();\n */\n\n// 1. UIKit Instances\n\n/**\n * const sdk = selectors.getSdk(state);\n */\nexport const getSdk = (state: SendBirdState): SendbirdGroupChat & SendbirdOpenChat => {\n  const { stores = {} } = state;\n  const { sdkStore = {} } = stores as SendBirdStateStore;\n  const { sdk } = sdkStore as SdkStore;\n  return sdk;\n};\n\n/**\n * const pubSub = selectors.getPubSub(state);\n */\nexport const getPubSub = (state: SendBirdState): any => {\n  const { config = {} } = state;\n  const { pubSub } = config as SendBirdStateConfig;\n  return pubSub;\n};\n\n// 2. Chat & Connection\n\n/**\n * const connect = selectors.getConnect(state);\n * connect('user-id-sendbirdian', 'access-token-0000')\n *  .then((user) => {})\n *  .catch((error) => {})\n */\nexport const getConnect = (state: SendBirdState) => (\n  (userId: string, accessToken?: string): Promise<User> => (\n    new Promise((resolve, reject) => {\n      const sdk = getSdk(state);\n      if (!sdk) {\n        reject(new Error('Sdk not found'));\n      }\n      if (!(sdk?.connect && typeof sdk.connect === 'function')) {\n        reject(new Error('Not found the function \"connect'));\n      }\n      if (!accessToken) {\n        sdk.connect(userId)\n          .then((res) => resolve(res))\n          .catch((err) => reject(err));\n      } else {\n        sdk.connect(userId, accessToken)\n          .then((res) => resolve(res))\n          .catch((err) => reject(err));\n      }\n    })\n  )\n);\n\n/**\n * const disconnect = selectors.getDisconnect(state);\n * disconnect()\n *  .then(() => {})\n *  .catch((error) => {})\n */\nexport const getDisconnect = (state: SendBirdState) => (\n  (): Promise<void> => (\n    new Promise((resolve, reject) => {\n      const sdk = getSdk(state);\n      if (!sdk) {\n        reject(new Error('Sdk not found'));\n      }\n      if (!(sdk.disconnect && typeof sdk.disconnect === 'function')) {\n        reject(new Error('Not found the function \"disconnect'));\n      }\n      sdk.disconnect()\n        .then((res) => resolve(res))\n        .catch((err) => reject(err));\n    })\n  )\n);\n\n/**\n * const updateUserInfo = selectors.getUpdateUserInfo(state);\n * updateUserInfo('new-nickname', 'new-profile-url')\n *  .then((user) => {})\n *  .catch((error) => {})\n */\nexport const getUpdateUserInfo = (state: SendBirdState) => (\n  (nickname: string, profileUrl?: string): Promise<User> => (\n    new Promise((resolve, reject) => {\n      const sdk = getSdk(state);\n      if (!sdk) {\n        reject(new Error('Sdk not found'));\n      }\n      if (!(sdk.updateCurrentUserInfo && typeof sdk.updateCurrentUserInfo === 'function')) {\n        reject(new Error('Not found the function \"updateCurrentUserInfo\"'));\n      }\n      const userParams: UserUpdateParams = { nickname };\n      if (profileUrl) {\n        userParams.profileUrl = profileUrl;\n      }\n      sdk.updateCurrentUserInfo(userParams)\n        .then((res) => resolve(res))\n        .catch((err) => reject(err));\n    })\n  )\n);\n\n// 3. Channel\n\n/**\n * const createGroupChannel = selectors.getCreateGroupChannel(state);\n * createGroupChannel(channelParams: GroupChannelCreateParams)\n *  .then((channel) => {})\n *  .catch((error) => {})\n */\nexport const getCreateGroupChannel = (state: SendBirdState) => (\n  (params: GroupChannelCreateParams): Promise<GroupChannel> => (\n    new Promise((resolve, reject) => {\n      const sdk = getSdk(state);\n      const pubSub = getPubSub(state);\n      if (!sdk) {\n        reject(new Error('Sdk not found'));\n      }\n      if (!sdk.groupChannel) {\n        reject(new Error('Not found GroupChannelModule'));\n      }\n      if (!(sdk.groupChannel.createChannel && typeof sdk.groupChannel.createChannel === 'function')) {\n        reject(new Error('Not found the function \"createChannel\"'));\n      }\n      sdk.groupChannel.createChannel(params)\n        .then((channel) => {\n          resolve(channel);\n          pubSub.publish(\n            topics.CREATE_CHANNEL,\n            { channel },\n          );\n        })\n        .catch(reject);\n    })\n  )\n);\n\n/**\n * const createOpenChannel = selectors.getCreateOpenChannel(state);\n * createOpenChannel(channelParams: OpenChannelCreateParams)\n *  .then((channel) => {})\n *  .catch((error) => {})\n */\nexport const getCreateOpenChannel = (state: SendBirdState) => (\n  (params: OpenChannelCreateParams): Promise<OpenChannel> => (\n    new Promise((resolve, reject) => {\n      const sdk = getSdk(state);\n      // const pubSub = getPubSub(state);\n      if (!sdk) {\n        reject(new Error('Sdk not found'));\n      }\n      if (!sdk.openChannel) {\n        reject(new Error('Not found OpenChannelModule'));\n      }\n      if (!(sdk.openChannel.createChannel && typeof sdk.openChannel.createChannel === 'function')) {\n        reject(new Error('Not found the function \"createChannel\"'));\n      }\n      sdk.openChannel.createChannel(params)\n        .then((channel) => {\n          resolve(channel);\n          // Consider pubSub process\n        })\n        .catch(reject);\n    })\n  )\n);\n\n/**\n * const getGroupChannel = selectors.getGetGroupChannel(state);\n * getGroupChannel('channel-url-1234', isSelected)\n *  .then((channel) => {\n *    // groupChannel = channel;\n *    // or\n *    // setCurrentChannel(channel);\n *  })\n *  .catch((error) => {})\n */\nexport const getGetGroupChannel = (state: SendBirdState) => (\n  (channelUrl: string): Promise<GroupChannel> => (\n    new Promise((resolve, reject) => {\n      const sdk = getSdk(state);\n      // const pubSub = getPubSub(state);\n      if (!sdk) {\n        reject(new Error('Sdk not found'));\n      }\n      if (!sdk.groupChannel) {\n        reject(new Error('Not found GroupChannelModule'));\n      }\n      if (!(sdk.groupChannel.getChannel && typeof sdk.groupChannel.getChannel === 'function')) {\n        reject(new Error('Not found the function \"getChannel\"'));\n      }\n      sdk.groupChannel.getChannel(channelUrl)\n        .then((channel) => {\n          resolve(channel);\n          // Add pubSub with isSelected\n        })\n        .catch(reject);\n    })\n  )\n);\n\n/**\n * const getOpenChannel = selectors.getGetOpenChannel(state);\n * getOpenChannel('channel-url-12345')\n *  .then((channel) => {\n *    // openChannel = channel;\n *    // or\n *    // setCurrentChannel(channel);\n *  })\n *  .catch((error) => {})\n */\nexport const getGetOpenChannel = (state: SendBirdState) => (\n  (channelUrl: string): Promise<OpenChannel> => (\n    new Promise((resolve, reject) => {\n      const sdk = getSdk(state);\n      // const pubSub = getPubSub(state);\n      if (!sdk) {\n        reject(new Error('Sdk not found'));\n      }\n      if (!sdk.openChannel) {\n        reject(new Error('Not found OpenChannelModule'));\n      }\n      if (!(sdk.openChannel.getChannel && typeof sdk.openChannel.getChannel === 'function')) {\n        reject(new Error('Not found the function \"getChannel\"'));\n      }\n      sdk.openChannel.getChannel(channelUrl)\n        .then((channel) => {\n          resolve(channel);\n          // Add pubSub with isSelected\n        })\n        .catch(reject);\n    })\n  )\n);\n\n/**\n * const leaveChannel = selectors.getLeaveGroupChannel(state);\n * leaveChannel('group-channel-url')\n *  .then((channel) => {})\n *  .catch((error) => {})\n */\nexport const getLeaveGroupChannel = (state: SendBirdState) => (\n  (channelUrl: string): Promise<void> => (\n    new Promise((resolve, reject) => {\n      getGetGroupChannel(state)?.(channelUrl)\n        .then((channel) => {\n          channel.leave()\n            .then(() => {\n              resolve();\n              // Add pubSub process\n            })\n            .catch(reject);\n        })\n        .catch(reject);\n    })\n  )\n);\n\n/**\n * const enterChannel = selectors.getEnterOpenChannel(state);\n * enterChannel('open-channel-url')\n *  .then((channel) => {})\n *  .catch((error) => {})\n */\nexport const getEnterOpenChannel = (state: SendBirdState) => (\n  (channelUrl: string): Promise<OpenChannel> => (\n    new Promise((resolve, reject) => {\n      getGetOpenChannel(state)?.(channelUrl)\n        .then((channel) => {\n          channel.enter()\n            .then(() => {\n              resolve(channel);\n              // Add pubSub process\n            })\n            .catch(reject);\n        })\n        .catch(reject);\n    })\n  )\n);\n\n/**\n * const exitChannel = selectors.getExitOpenChannel(state);\n * exitChannel('open-channel-url')\n *  .then((channel) => {})\n *  .catch((error) => {})\n */\nexport const getExitOpenChannel = (state: SendBirdState) => (\n  (channelUrl: string): Promise<OpenChannel> => (\n    new Promise((resolve, reject) => {\n      getGetOpenChannel(state)?.(channelUrl)\n        .then((channel) => {\n          channel.exit()\n            .then(() => {\n              resolve(channel);\n              // Add pubSub process\n            })\n            .catch(reject);\n        })\n        .catch(reject);\n    })\n  )\n);\n\n/**\n * const freezeChannel = selectors.getFreezeChannel(currentChannel);\n * freezeChannel()\n *  .then(() => {})\n *  .catch((error) => {})\n */\nexport const getFreezeChannel = () => (\n  (channel: GroupChannel | OpenChannel): Promise<void> => (\n    new Promise((resolve, reject) => {\n      if (!(channel.freeze && typeof channel?.freeze === 'function')) {\n        reject(new Error('Not found the function \"freeze\"'));\n      }\n      channel.freeze()\n        .then(() => {\n          resolve();\n          // Add pubSub process\n          /**\n           * consider divide the logic to\n           * _freezeGroupChannel and _freezeOpenChannel\n           */\n        })\n        .catch(reject);\n    })\n  )\n);\n\n/**\n * const unfreezeChannel = selectors.getUnfreezeChannel(currentChannel);\n * unfreezeChannel()\n *  .then((channel) => {})\n *  .catch((error) => {})\n */\nexport const getUnfreezeChannel = () => (\n  (channel: GroupChannel | OpenChannel): Promise<void> => (\n    new Promise((resolve, reject) => {\n      if (!(channel.unfreeze && typeof channel?.unfreeze === 'function')) {\n        reject(new Error('Not found the function \"unfreeze\"'));\n      }\n      channel.unfreeze()\n        .then(() => {\n          resolve();\n          // Add pubSub process\n          /**\n           * consider divide the logic to\n           * _unfreezeGroupChannel and _unfreezeOpenChannel\n           */\n        })\n        .catch(reject);\n    })\n  )\n);\n\n// 4. Message\nexport class UikitMessageHandler<T extends SendableMessage = SendableMessage> {\n  private _onPending: MessageHandler<T> = noop;\n\n  private _onFailed: FailedMessageHandler<T> = noop;\n\n  private _onSucceeded: MessageHandler<T> = noop;\n\n  public triggerPending(message: T): void {\n    this._onPending(message);\n  }\n\n  public triggerFailed(error: Error, message: T): void {\n    this._onFailed(error, message.isResendable ? message : null);\n  }\n\n  public triggerSucceeded(message: T): void {\n    this._onSucceeded(message);\n  }\n\n  public onPending(handler: MessageHandler<T>): UikitMessageHandler {\n    if (typeof handler === 'function') {\n      this._onPending = handler;\n    }\n    return this;\n  }\n\n  public onFailed(handler: FailedMessageHandler<T>): UikitMessageHandler {\n    if (typeof handler === 'function') {\n      this._onFailed = handler;\n    }\n    return this;\n  }\n\n  public onSucceeded(handler: MessageHandler<T>): UikitMessageHandler {\n    if (typeof handler === 'function') {\n      this._onSucceeded = handler;\n    }\n    return this;\n  }\n}\n\n/**\n * const sendUserMessage = selectors.getSendUserMessage(state);\n * sendUserMessage(\n *  channel: GroupChannel | OpenChannel,\n *  params: UserMessageCreateParams,\n * )\n *  .onPending((message) => {})\n *  .onFailed((error, message) => {})\n *  .onSucceeded((message) => {})\n */\n\nexport const getSendUserMessage = (state: SendBirdState) => (\n  (channel: GroupChannel | OpenChannel, params: UserMessageCreateParams): UikitMessageHandler => {\n    const handler = new UikitMessageHandler();\n    const pubSub = getPubSub(state);\n    channel.sendUserMessage(params)\n      .onFailed((error, message) => {\n        pubSub.publish(\n          topics.SEND_MESSAGE_FAILED,\n          { error, message, channel },\n        );\n        handler.triggerFailed(error, message);\n      })\n      .onPending((message) => {\n        pubSub.publish(\n          topics.SEND_MESSAGE_START,\n          { message, channel },\n        );\n        handler.triggerPending(message);\n      })\n      .onSucceeded((message) => {\n        pubSub.publish(\n          topics.SEND_USER_MESSAGE,\n          { message, channel },\n        );\n        handler.triggerSucceeded(message);\n      });\n    return handler;\n  }\n);\n\n/**\n * const sendFileMessage = selectors.getSendFileMessage(state);\n * sendFileMessage(\n *  channel: GroupChannel | OpenChannel,\n *  params: FileMessageCreateParams,\n * )\n *  .onPending((message) => {})\n *  .onFailed((error, message) => {})\n *  .onSucceeded((message) => {})\n */\nexport const getSendFileMessage = (state: SendBirdState) => (\n  (channel: GroupChannel | OpenChannel, params: FileMessageCreateParams): UikitMessageHandler => {\n    const handler = new UikitMessageHandler();\n    const pubSub = getPubSub(state);\n    channel.sendFileMessage(params)\n      .onFailed((error, message) => {\n        pubSub.publish(\n          topics.SEND_MESSAGE_FAILED,\n          { error, message, channel },\n        );\n        handler.triggerFailed(error, message);\n      })\n      .onPending((message) => {\n        pubSub.publish(\n          topics.SEND_MESSAGE_START,\n          { message, channel },\n        );\n        handler.triggerPending(message);\n      })\n      .onSucceeded((message) => {\n        pubSub.publish(\n          topics.SEND_FILE_MESSAGE,\n          { message, channel },\n        );\n        handler.triggerSucceeded(message);\n      });\n    return handler;\n  }\n);\n\n/**\n * const updateUserMessage = selectors.getUpdateUserMessage(state);\n * updateUserMessage(\n *  channel: GroupChannel | OpenChannel,\n *  messageId: number,\n *  messageParams: UserMessageUpdateParams,\n * )\n *  .then((message) => {})\n *  .catch((error) => {})\n */\nexport const getUpdateUserMessage = (state: SendBirdState) => (\n  (channel: GroupChannel | OpenChannel, messageId: number, params: UserMessageUpdateParams): Promise<UserMessage> => (\n    new Promise((resolve, reject) => {\n      const pubSub = getPubSub(state);\n      channel.updateUserMessage(messageId, params)\n        .then((message) => {\n          pubSub.publish(\n            topics.UPDATE_USER_MESSAGE,\n            { message, channel, fromSelector: true },\n          );\n          resolve(message);\n        })\n        .catch(reject);\n    })\n  )\n);\n\n// TODO: We will provie this function in the future\n/**\n * const updateFileMessage = selectors.getUpdateFileMessage(state);\n * updateFileMessage(\n *  channel: GroupChannel | OpenChannel,\n *  messageId: number,\n *  params: FileMessageUpdateParams,\n * )\n *  .then((message) => {})\n *  .catch((error) => {})\n */\n// const getUpdateFileMessage = (state: SendBirdState) => (\n//   (channel: GroupChannel | OpenChannel, messageId: number, params: FileMessageUpdateParams) => (\n//     new Promise((resolve, reject) => {\n//       const pubSub = getPubSub(state);\n//       channel.updateFileMessage(messageId, params)\n//         .then((message) => {\n//           pubSub.publish(\n//             topics.UPDATE_USER_MESSAGE,\n//             { message, channel, fromSelector: true },\n//           );\n//           resolve(message);\n//         })\n//         .catch(reject);\n//     })\n//   )\n// );\n\n/**\n * const deleteMessage = selectors.getDeleteMessage(state);\n * deleteMessage(\n *  channel: GroupChannel | OpenChannel,\n *  message: SendableMessage,\n * )\n *  .then((deletedMessage) => {})\n *  .catch((error) => {})\n */\nexport const getDeleteMessage = (state: SendBirdState) => (\n  (channel: GroupChannel | OpenChannel, message: SendableMessageType): Promise<SendableMessageType> => (\n    new Promise((resolve, reject) => {\n      const pubSub = getPubSub(state);\n      const { messageId } = message;\n      channel.deleteMessage(message)\n        .then(() => {\n          pubSub.publish(\n            topics.DELETE_MESSAGE,\n            { messageId, channel },\n          );\n          resolve(message);\n        })\n        .catch(reject);\n    })\n  )\n);\n\n/**\n * const resendUserMessage = selectors.getResendUserMessage(state);\n * resendUserMessage(\n *  channel: GroupChannel | OpenChannel,\n *  failedMessage: UserMessage,\n * )\n *  .then(() => {})\n *  .catch((error) => {})\n */\nexport const getResendUserMessage = (state: SendBirdState) => (\n  (channel: GroupChannel | OpenChannel, failedMessage: UserMessage): Promise<UserMessage> => (\n    new Promise((resolve, reject) => {\n      const pubSub = getPubSub(state);\n      channel.resendUserMessage(failedMessage)\n        .then((message) => {\n          pubSub.publish(\n            topics.SEND_USER_MESSAGE,\n            { message, channel },\n          );\n          resolve(message);\n        })\n        .catch(reject);\n    })\n  )\n);\n\n/**\n * const resendFileMessage = selectors.getResendFileMessage(state);\n * resendFileMessage(\n *  channel: GroupChannel | OpenChannel,\n *  failedMessage: FileMessage,\n *  blob: Blob,\n * )\n *  .then(() => {})\n *  .catch((error) => {})\n */\nexport const getResendFileMessage = (state: SendBirdState) => (\n  (channel: GroupChannel | OpenChannel, failedMessage: FileMessage, blob: Blob): Promise<FileMessage> => (\n    new Promise((resolve, reject) => {\n      const pubSub = getPubSub(state);\n      channel.resendFileMessage(failedMessage, blob)\n        .then((message) => {\n          pubSub.publish(\n            topics.SEND_FILE_MESSAGE,\n            { message, channel },\n          );\n          resolve(message);\n        })\n        .catch(reject);\n    })\n  )\n);\n\nconst sendbirdSelectors = {\n  getSdk,\n  getPubSub,\n  getConnect,\n  getDisconnect,\n  getUpdateUserInfo,\n  getCreateGroupChannel,\n  getCreateOpenChannel,\n  getGetGroupChannel,\n  getGetOpenChannel,\n  getLeaveGroupChannel,\n  getEnterOpenChannel,\n  getExitOpenChannel,\n  getFreezeChannel,\n  getUnfreezeChannel,\n  getSendUserMessage,\n  getSendFileMessage,\n  getUpdateUserMessage,\n  getDeleteMessage,\n  getResendUserMessage,\n  getResendFileMessage,\n};\n\nexport default sendbirdSelectors;\n"],"names":["getSdk","state","_a","stores","_b","sdkStore","sdk","getPubSub","config","pubSub","getConnect","userId","accessToken","Promise","resolve","reject","Error","connect","then","res","catch","err","getDisconnect","disconnect","getUpdateUserInfo","nickname","profileUrl","updateCurrentUserInfo","userParams","getCreateGroupChannel","params","groupChannel","createChannel","channel","publish","topics","CREATE_CHANNEL","getCreateOpenChannel","openChannel","getGetGroupChannel","channelUrl","getChannel","getGetOpenChannel","getLeaveGroupChannel","leave","getEnterOpenChannel","enter","getExitOpenChannel","exit","getFreezeChannel","freeze","getUnfreezeChannel","unfreeze","UikitMessageHandler","_onPending","noop","_onFailed","_onSucceeded","prototype","triggerPending","message","triggerFailed","error","isResendable","triggerSucceeded","onPending","handler","onFailed","onSucceeded","getSendUserMessage","sendUserMessage","SEND_MESSAGE_FAILED","SEND_MESSAGE_START","SEND_USER_MESSAGE","getSendFileMessage","sendFileMessage","SEND_FILE_MESSAGE","getUpdateUserMessage","messageId","updateUserMessage","UPDATE_USER_MESSAGE","fromSelector","getDeleteMessage","deleteMessage","DELETE_MESSAGE","getResendUserMessage","failedMessage","resendUserMessage","getResendFileMessage","blob","resendFileMessage","sendbirdSelectors"],"mappings":"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"}