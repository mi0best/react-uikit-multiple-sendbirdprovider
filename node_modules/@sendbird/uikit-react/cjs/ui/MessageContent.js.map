{"version":3,"file":"MessageContent.js","sources":["../../../src/ui/MessageContent/index.tsx"],"sourcesContent":["import React, {\n  ReactElement,\n  useContext,\n  useRef,\n  useState,\n} from 'react';\nimport format from 'date-fns/format';\nimport './index.scss';\n\nimport Avatar from '../Avatar';\nimport UserProfile from '../UserProfile';\nimport MessageStatus from '../MessageStatus';\nimport MessageItemMenu from '../MessageItemMenu';\nimport MessageItemReactionMenu from '../MessageItemReactionMenu';\nimport ContextMenu, { MenuItems } from '../ContextMenu';\nimport Label, { LabelTypography, LabelColors } from '../Label';\nimport EmojiReactions from '../EmojiReactions';\n\nimport ClientAdminMessage from '../AdminMessage';\nimport TextMessageItemBody from '../TextMessageItemBody';\nimport FileMessageItemBody from '../FileMessageItemBody';\nimport ThumbnailMessageItemBody from '../ThumbnailMessageItemBody';\nimport OGMessageItemBody from '../OGMessageItemBody';\nimport UnknownMessageItemBody from '../UnknownMessageItemBody';\nimport QuoteMessage from '../QuoteMessage';\n\nimport {\n  getClassName,\n  getUIKitMessageTypes,\n  getUIKitMessageType,\n  isTextMessage,\n  isOGMessage,\n  isThumbnailMessage,\n  getSenderName,\n  isVoiceMessage,\n  SendableMessageType,\n  CoreMessageType,\n  isMultipleFilesMessage,\n  isSendableMessage,\n} from '../../utils';\nimport { UserProfileContext } from '../../lib/UserProfileContext';\nimport { useLocalization } from '../../lib/LocalizationContext';\nimport useSendbirdStateContext from '../../hooks/useSendbirdStateContext';\nimport { GroupChannel } from '@sendbird/chat/groupChannel';\nimport { EmojiContainer } from '@sendbird/chat';\nimport { AdminMessage, FileMessage, MultipleFilesMessage, UserMessage } from '@sendbird/chat/message';\nimport useLongPress from '../../hooks/useLongPress';\nimport MobileMenu from '../MobileMenu';\nimport { useMediaQueryContext } from '../../lib/MediaQueryContext';\nimport ThreadReplies from '../ThreadReplies';\nimport { ThreadReplySelectType } from '../../modules/Channel/context/const';\nimport VoiceMessageItemBody from '../VoiceMessageItemBody';\nimport { Nullable, ReplyType } from '../../types';\nimport { noop } from '../../utils/utils';\nimport MultipleFilesMessageItemBody from '../MultipleFilesMessageItemBody';\nimport { useThreadMessageKindKeySelector } from '../../modules/Channel/context/hooks/useThreadMessageKindKeySelector';\nimport { useStatefulFileInfoList } from '../../modules/Channel/context/hooks/useStatefulFileInfoList';\n\ninterface Props {\n  className?: string | Array<string>;\n  userId: string;\n  channel: Nullable<GroupChannel>;\n  message: CoreMessageType;\n  disabled?: boolean;\n  chainTop?: boolean;\n  chainBottom?: boolean;\n  isReactionEnabled?: boolean;\n  disableQuoteMessage?: boolean;\n  replyType?: ReplyType;\n  threadReplySelectType?: ThreadReplySelectType;\n  nicknamesMap?: Map<string, string>;\n  emojiContainer?: EmojiContainer;\n  scrollToMessage?: (createdAt: number, messageId: number) => void;\n  showEdit?: (bool: boolean) => void;\n  showRemove?: (bool: boolean) => void;\n  showFileViewer?: (bool: boolean) => void;\n  resendMessage?: (message: SendableMessageType) => Promise<SendableMessageType>;\n  deleteMessage?: (message: CoreMessageType) => Promise<CoreMessageType>;\n  toggleReaction?: (message: SendableMessageType, reactionKey: string, isReacted: boolean) => void;\n  setQuoteMessage?: (message: SendableMessageType) => void;\n  onReplyInThread?: (props: { message: SendableMessageType }) => void;\n  onQuoteMessageClick?: (props: { message: SendableMessageType }) => void;\n  onMessageHeightChange?: () => void;\n}\nexport default function MessageContent({\n  className,\n  userId,\n  channel,\n  message,\n  disabled = false,\n  chainTop = false,\n  chainBottom = false,\n  isReactionEnabled = false,\n  disableQuoteMessage = false,\n  replyType,\n  threadReplySelectType,\n  nicknamesMap,\n  emojiContainer,\n  scrollToMessage,\n  showEdit,\n  showRemove,\n  showFileViewer,\n  resendMessage,\n  deleteMessage,\n  toggleReaction,\n  setQuoteMessage,\n  onReplyInThread,\n  onQuoteMessageClick,\n  onMessageHeightChange,\n}: Props): ReactElement {\n  const messageTypes = getUIKitMessageTypes();\n  const { dateLocale } = useLocalization();\n  const { config, eventHandlers } = useSendbirdStateContext?.() || {};\n  const onPressUserProfileHandler = eventHandlers?.reaction?.onPressUserProfile;\n  const { disableUserProfile, renderUserProfile } = useContext(UserProfileContext);\n  const avatarRef = useRef(null);\n  const contentRef = useRef(null);\n  const { isMobile } = useMediaQueryContext();\n  const [showMenu, setShowMenu] = useState(false);\n  const [mouseHover, setMouseHover] = useState(false);\n  const [supposedHover, setSupposedHover] = useState(false);\n\n  const isByMe = (userId === (message as SendableMessageType)?.sender?.userId)\n    || ((message as SendableMessageType)?.sendingStatus === 'pending')\n    || ((message as SendableMessageType)?.sendingStatus === 'failed');\n  const isByMeClassName = isByMe ? 'outgoing' : 'incoming';\n  const chainTopClassName = chainTop ? 'chain-top' : '';\n  const isReactionEnabledInChannel = isReactionEnabled && !channel?.isEphemeral;\n  const isReactionEnabledClassName = isReactionEnabledInChannel ? 'use-reactions' : '';\n  const supposedHoverClassName = supposedHover ? 'sendbird-mouse-hover' : '';\n  const useReplying = !!((replyType === 'QUOTE_REPLY' || replyType === 'THREAD')\n    && message?.parentMessageId && message?.parentMessage\n    && !disableQuoteMessage\n  );\n  const useReplyingClassName = useReplying ? 'use-quote' : '';\n\n  const isOgMessageEnabledInGroupChannel = channel?.isGroupChannel() && config.groupChannel.enableOgtag;\n\n  // Thread replies\n  const displayThreadReplies = message?.threadInfo?.replyCount > 0 && replyType === 'THREAD';\n\n  // onMouseDown: (e: React.MouseEvent<T>) => void;\n  // onTouchStart: (e: React.TouchEvent<T>) => void;\n  // onMouseUp: (e: React.MouseEvent<T>) => void;\n  // onMouseLeave: (e: React.MouseEvent<T>) => void;\n  // onTouchEnd: (e: React.TouchEvent<T>) => void;\n  const longPress = useLongPress({\n    onLongPress: () => {\n      if (isMobile) {\n        setShowMenu(true);\n      }\n    },\n    onClick: noop,\n  }, {\n    delay: 300,\n    shouldPreventDefault: false,\n  });\n\n  const threadMessageKindKey = useThreadMessageKindKeySelector({\n    isMobile,\n  });\n  // For MultipleFilesMessage only.\n  const statefulFileInfoList = useStatefulFileInfoList(message);\n\n  if (message?.isAdminMessage?.() || message?.messageType === 'admin') {\n    return (<ClientAdminMessage message={message as AdminMessage} />);\n  }\n\n  return (\n    <div\n      className={getClassName([className, 'sendbird-message-content', isByMeClassName])}\n      onMouseOver={() => setMouseHover(true)}\n      onMouseLeave={() => setMouseHover(false)}\n    >\n      {/* left */}\n      <div className={getClassName(['sendbird-message-content__left', isReactionEnabledClassName, isByMeClassName, useReplyingClassName])}>\n        {(!isByMe && !chainBottom && isSendableMessage(message)) && (\n          /** user profile */\n          <ContextMenu\n            menuTrigger={(toggleDropdown: () => void): ReactElement => (\n              <Avatar\n                className={`sendbird-message-content__left__avatar ${displayThreadReplies ? 'use-thread-replies' : ''}`}\n                // @ts-ignore\n                src={channel?.members?.find((member) => member?.userId === message.sender.userId)?.profileUrl || message.sender.profileUrl || ''}\n                // TODO: Divide getting profileUrl logic to utils\n                ref={avatarRef}\n                width=\"28px\"\n                height=\"28px\"\n                onClick={(): void => { if (!disableUserProfile) toggleDropdown(); }}\n              />\n            )}\n            menuItems={(closeDropdown: () => void): ReactElement => (\n              <MenuItems\n                /**\n                * parentRef: For catching location(x, y) of MenuItems\n                * parentContainRef: For toggling more options(menus & reactions)\n                */\n                parentRef={avatarRef}\n                parentContainRef={avatarRef}\n                closeDropdown={closeDropdown}\n                style={{ paddingTop: '0px', paddingBottom: '0px' }}\n              >\n                {renderUserProfile\n                  ? renderUserProfile({ user: message.sender, close: closeDropdown, currentUserId: userId })\n                  : (<UserProfile user={message.sender} onSuccess={closeDropdown} />)\n                }\n              </MenuItems>\n            )}\n          />\n        )}\n        {/* outgoing menu */}\n        {isByMe && !isMobile && (\n          <div className={getClassName(['sendbird-message-content-menu', isReactionEnabledClassName, supposedHoverClassName, isByMeClassName])}>\n            <MessageItemMenu\n              className=\"sendbird-message-content-menu__normal-menu\"\n              channel={channel}\n              message={message as SendableMessageType}\n              isByMe={isByMe}\n              replyType={replyType}\n              disabled={disabled}\n              showEdit={showEdit}\n              showRemove={showRemove}\n              resendMessage={resendMessage}\n              setQuoteMessage={setQuoteMessage}\n              setSupposedHover={setSupposedHover}\n              onReplyInThread={({ message }) => {\n                if (threadReplySelectType === ThreadReplySelectType.THREAD) {\n                  onReplyInThread({ message });\n                } else if (threadReplySelectType === ThreadReplySelectType.PARENT) {\n                  scrollToMessage(message.parentMessage?.createdAt, message.parentMessageId);\n                }\n              }}\n            />\n            {isReactionEnabledInChannel && (\n              <MessageItemReactionMenu\n                className=\"sendbird-message-content-menu__reaction-menu\"\n                message={message as SendableMessageType}\n                userId={userId}\n                emojiContainer={emojiContainer}\n                toggleReaction={toggleReaction}\n                setSupposedHover={setSupposedHover}\n              />\n            )}\n          </div>\n        )}\n      </div>\n      {/* middle */}\n      <div\n        className={'sendbird-message-content__middle'}\n        {...(isMobile ? { ...longPress } : {})}\n        ref={contentRef}\n      >\n        {(!isByMe && !chainTop && !useReplying) && (\n          <Label\n            className=\"sendbird-message-content__middle__sender-name\"\n            type={LabelTypography.CAPTION_2}\n            color={LabelColors.ONBACKGROUND_2}\n          >\n            {\n              // @ts-ignore\n              channel?.members?.find((member) => member?.userId === message?.sender?.userId)?.nickname\n              || getSenderName(message as SendableMessageType)\n              // TODO: Divide getting profileUrl logic to utils\n            }\n          </Label>\n        )}\n        {/* quote message */}\n        {(useReplying) ? (\n          <div className={getClassName(['sendbird-message-content__middle__quote-message', isByMe ? 'outgoing' : 'incoming', useReplyingClassName])}>\n            <QuoteMessage\n              className=\"sendbird-message-content__middle__quote-message__quote\"\n              message={message as SendableMessageType}\n              userId={userId}\n              isByMe={isByMe}\n              isUnavailable={(channel?.messageOffsetTimestamp ?? 0) > (message.parentMessage?.createdAt ?? 0)}\n              onClick={() => {\n                if (replyType === 'THREAD' && threadReplySelectType === ThreadReplySelectType.THREAD) {\n                  onQuoteMessageClick?.({ message: message as SendableMessageType });\n                }\n                if (\n                  (replyType === 'QUOTE_REPLY' || (replyType === 'THREAD' && threadReplySelectType === ThreadReplySelectType.PARENT))\n                  && message?.parentMessage?.createdAt && message?.parentMessageId\n                ) {\n                  scrollToMessage(message.parentMessage.createdAt, message.parentMessageId);\n                }\n              }}\n            />\n          </div>\n        ) : null}\n        {/* container: message item body + emoji reactions */}\n        <div className={getClassName(['sendbird-message-content__middle__body-container'])} >\n          {/* message status component */}\n          {(isByMe && !chainBottom) && (\n            <div className={getClassName(['sendbird-message-content__middle__body-container__created-at', 'left', supposedHoverClassName])}>\n              <div className=\"sendbird-message-content__middle__body-container__created-at__component-container\">\n                <MessageStatus\n                  message={message as SendableMessageType}\n                  channel={channel}\n                />\n              </div>\n            </div>\n          )}\n          {/* message item body components */}\n          {isOgMessageEnabledInGroupChannel && isOGMessage(message as UserMessage) ? (\n            <OGMessageItemBody\n              className=\"sendbird-message-content__middle__message-item-body\"\n              message={message as UserMessage}\n              isByMe={isByMe}\n              mouseHover={mouseHover}\n              isMentionEnabled={config?.isMentionEnabled || false}\n              isReactionEnabled={isReactionEnabledInChannel}\n              onMessageHeightChange={onMessageHeightChange}\n            />\n          ) : isTextMessage(message as UserMessage) && (\n            <TextMessageItemBody\n              className=\"sendbird-message-content__middle__message-item-body\"\n              message={message as UserMessage}\n              isByMe={isByMe}\n              mouseHover={mouseHover}\n              isMentionEnabled={config?.isMentionEnabled || false}\n              isReactionEnabled={isReactionEnabledInChannel}\n            />\n          )}\n          {(getUIKitMessageType((message as CoreMessageType)) === messageTypes.FILE) && (\n            <FileMessageItemBody\n              className=\"sendbird-message-content__middle__message-item-body\"\n              message={message as FileMessage}\n              isByMe={isByMe}\n              mouseHover={mouseHover}\n              isReactionEnabled={isReactionEnabledInChannel}\n            />\n          )}\n          {isMultipleFilesMessage(message as CoreMessageType) && (\n            <MultipleFilesMessageItemBody\n              className=\"sendbird-message-content__middle__message-item-body\"\n              message={message as MultipleFilesMessage}\n              isByMe={isByMe}\n              mouseHover={mouseHover}\n              isReactionEnabled={isReactionEnabledInChannel}\n              threadMessageKindKey={threadMessageKindKey}\n              statefulFileInfoList={statefulFileInfoList}\n            />\n          )}\n          {isVoiceMessage(message as FileMessage) && (\n            <VoiceMessageItemBody\n              className=\"sendbird-message-content__middle__message-item-body\"\n              message={message as FileMessage}\n              channelUrl={channel?.url ?? ''}\n              isByMe={isByMe}\n              isReactionEnabled={isReactionEnabledInChannel}\n            />\n          )}\n          {(isThumbnailMessage(message as FileMessage)) && (\n            <ThumbnailMessageItemBody\n              className=\"sendbird-message-content__middle__message-item-body\"\n              message={message as FileMessage}\n              isByMe={isByMe}\n              mouseHover={mouseHover}\n              isReactionEnabled={isReactionEnabledInChannel}\n              showFileViewer={showFileViewer}\n              style={isMobile ? { width: '100%' } : {}}\n            />\n          )}\n          {(getUIKitMessageType((message as CoreMessageType)) === messageTypes.UNKNOWN) && (\n            <UnknownMessageItemBody\n              className=\"sendbird-message-content__middle__message-item-body\"\n              message={message}\n              isByMe={isByMe}\n              mouseHover={mouseHover}\n              isReactionEnabled={isReactionEnabledInChannel}\n            />\n          )}\n          {/* reactions */}\n          {(isReactionEnabledInChannel && message?.reactions?.length > 0) && (\n            <div className={getClassName([\n              'sendbird-message-content-reactions',\n              isMultipleFilesMessage(message as CoreMessageType)\n                ? 'image-grid'\n                : (!isByMe || isThumbnailMessage(message as FileMessage) || isOGMessage(message as UserMessage))\n                  ? '' : 'primary',\n              mouseHover ? 'mouse-hover' : '',\n            ])}>\n              <EmojiReactions\n                userId={userId}\n                message={message as SendableMessageType}\n                channel={channel}\n                isByMe={isByMe}\n                emojiContainer={emojiContainer}\n                memberNicknamesMap={nicknamesMap}\n                toggleReaction={toggleReaction}\n                onPressUserProfile={onPressUserProfileHandler}\n              />\n            </div>\n          )}\n          {(!isByMe && !chainBottom) && (\n            <Label\n              className={getClassName(['sendbird-message-content__middle__body-container__created-at', 'right', supposedHoverClassName])}\n              type={LabelTypography.CAPTION_3}\n              color={LabelColors.ONBACKGROUND_2}\n            >\n              {format(message?.createdAt || 0, 'p', {\n                locale: dateLocale,\n              })}\n            </Label>\n          )}\n        </div>\n        {/* thread replies */}\n        {displayThreadReplies && (\n          <ThreadReplies\n            className=\"sendbird-message-content__middle__thread-replies\"\n            threadInfo={message?.threadInfo}\n            onClick={() => onReplyInThread?.({ message: message as SendableMessageType })}\n          />\n        )}\n      </div>\n      {/* right */}\n      <div className={getClassName(['sendbird-message-content__right', chainTopClassName, isReactionEnabledClassName, useReplyingClassName])}>\n        {/* incoming menu */}\n        {!isByMe && !isMobile && (\n          <div className={getClassName(['sendbird-message-content-menu', chainTopClassName, supposedHoverClassName, isByMeClassName])}>\n            {isReactionEnabledInChannel && (\n              <MessageItemReactionMenu\n                className=\"sendbird-message-content-menu__reaction-menu\"\n                message={message as SendableMessageType}\n                userId={userId}\n                emojiContainer={emojiContainer}\n                toggleReaction={toggleReaction}\n                setSupposedHover={setSupposedHover}\n              />\n            )}\n            <MessageItemMenu\n              className=\"sendbird-message-content-menu__normal-menu\"\n              channel={channel}\n              message={message as SendableMessageType}\n              isByMe={isByMe}\n              replyType={replyType}\n              disabled={disabled}\n              showRemove={showRemove}\n              resendMessage={resendMessage}\n              setQuoteMessage={setQuoteMessage}\n              setSupposedHover={setSupposedHover}\n              onReplyInThread={({ message }) => {\n                if (threadReplySelectType === ThreadReplySelectType.THREAD) {\n                  onReplyInThread({ message });\n                } else if (threadReplySelectType === ThreadReplySelectType.PARENT) {\n                  scrollToMessage(message.parentMessage?.createdAt, message.parentMessageId);\n                }\n              }}\n            />\n          </div>\n        )}\n      </div>\n      {\n        showMenu && (\n          message?.isUserMessage?.() || message?.isFileMessage?.() || message?.isMultipleFilesMessage?.()\n        ) && (\n          <MobileMenu\n            parentRef={contentRef}\n            channel={channel}\n            hideMenu={() => { setShowMenu(false); }}\n            message={message}\n            isReactionEnabled={isReactionEnabledInChannel}\n            isByMe={isByMe}\n            userId={userId}\n            replyType={replyType}\n            disabled={disabled}\n            showRemove={showRemove}\n            emojiContainer={emojiContainer}\n            resendMessage={resendMessage}\n            deleteMessage={deleteMessage}\n            setQuoteMessage={setQuoteMessage}\n            toggleReaction={toggleReaction}\n            showEdit={showEdit}\n            onReplyInThread={({ message }) => {\n              if (threadReplySelectType === ThreadReplySelectType.THREAD) {\n                onReplyInThread?.({ message });\n              } else if (threadReplySelectType === ThreadReplySelectType.PARENT) {\n                scrollToMessage?.(message?.parentMessage?.createdAt || 0, message?.parentMessageId || 0);\n              }\n            }}\n          />\n        )\n      }\n    </div>\n  );\n}\n"],"names":["MessageContent","_a","className","userId","channel","message","_r","disabled","_s","chainTop","_t","chainBottom","_u","isReactionEnabled","_v","disableQuoteMessage","replyType","threadReplySelectType","nicknamesMap","emojiContainer","scrollToMessage","showEdit","showRemove","showFileViewer","resendMessage","deleteMessage","toggleReaction","setQuoteMessage","onReplyInThread","onQuoteMessageClick","onMessageHeightChange","messageTypes","getUIKitMessageTypes","dateLocale","useLocalization","_w","useSendbirdStateContext","config","eventHandlers","onPressUserProfileHandler","_b","reaction","onPressUserProfile","_x","useContext","UserProfileContext","disableUserProfile","renderUserProfile","avatarRef","useRef","contentRef","isMobile","useMediaQueryContext","_y","useState","showMenu","setShowMenu","_z","mouseHover","setMouseHover","_0","supposedHover","setSupposedHover","isByMe","sender","_c","sendingStatus","isByMeClassName","chainTopClassName","isReactionEnabledInChannel","isEphemeral","isReactionEnabledClassName","supposedHoverClassName","useReplying","parentMessageId","parentMessage","useReplyingClassName","isOgMessageEnabledInGroupChannel","isGroupChannel","groupChannel","enableOgtag","displayThreadReplies","threadInfo","_d","replyCount","longPress","useLongPress","onLongPress","onClick","noop","delay","shouldPreventDefault","threadMessageKindKey","useThreadMessageKindKeySelector","statefulFileInfoList","useStatefulFileInfoList","isAdminMessage","_e","call","messageType","React","createElement","ClientAdminMessage","getClassName","onMouseOver","onMouseLeave","isSendableMessage","ContextMenu","menuTrigger","toggleDropdown","Avatar","concat","src","members","find","member","profileUrl","ref","width","height","menuItems","closeDropdown","MenuItems","parentRef","parentContainRef","style","paddingTop","paddingBottom","user","close","currentUserId","UserProfile","onSuccess","MessageItemMenu","ThreadReplySelectType","THREAD","PARENT","createdAt","MessageItemReactionMenu","_extends","__assign","Label","type","LabelTypography","CAPTION_2","color","LabelColors","ONBACKGROUND_2","_f","nickname","getSenderName","QuoteMessage","isUnavailable","_h","messageOffsetTimestamp","_k","_j","MessageStatus","isOGMessage","OGMessageItemBody","isMentionEnabled","isTextMessage","TextMessageItemBody","getUIKitMessageType","FILE","FileMessageItemBody","isMultipleFilesMessage","MultipleFilesMessageItemBody","isVoiceMessage","VoiceMessageItemBody","channelUrl","_l","url","isThumbnailMessage","ThumbnailMessageItemBody","UNKNOWN","UnknownMessageItemBody","_m","reactions","length","EmojiReactions","memberNicknamesMap","CAPTION_3","format","locale","ThreadReplies","isUserMessage","_o","isFileMessage","_p","_q","MobileMenu","hideMenu"],"mappings":"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"}