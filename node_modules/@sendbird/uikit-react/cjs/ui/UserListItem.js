'use strict';

var tslib_es6 = require('../tslib.es6-c74b513f.js');
var React = require('react');
var UserProfileContext = require('../UserProfileContext-c6d7abb7.js');
var LocalizationContext = require('../LocalizationContext-58b6ed7c.js');
var ui_Avatar = require('./Avatar.js');
var ui_MutedAvatarOverlay = require('./MutedAvatarOverlay.js');
var ui_Checkbox = require('./Checkbox.js');
var ui_UserProfile = require('./UserProfile.js');
var ui_ContextMenu = require('./ContextMenu.js');
var ui_Label = require('../index-b5a9b4b7.js');
require('../stringSet-1539ac47.js');
require('../index-e8928da6.js');
require('./ImageRenderer.js');
require('./Icon.js');
require('prop-types');
require('../uuid-9a117e16.js');
require('../sendbirdSelectors.js');
require('../pubSub/topics.js');
require('../utils-eb6d90e0.js');
require('./Button.js');
require('../types-d0d770c3.js');
require('../useSendbirdStateContext.js');
require('../withSendbird.js');
require('react-dom');
require('./SortByRow.js');
require('../index-dbe8dd84.js');
require('../utils/message/getOutgoingMessageState.js');
require('../index-54279ec2.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var React__default = /*#__PURE__*/_interopDefaultLegacy(React);

function UserListItem(_a) {
  var user = _a.user,
    className = _a.className,
    checked = _a.checked,
    checkBox = _a.checkBox,
    isOperator = _a.isOperator,
    disabled = _a.disabled,
    disableMessaging = _a.disableMessaging,
    currentUser = _a.currentUser,
    action = _a.action,
    onChange = _a.onChange,
    _b = _a.avatarSize,
    avatarSize = _b === void 0 ? '40px' : _b,
    onClick = _a.onClick;
  var uniqueKey = user.userId;
  var actionRef = React__default["default"].useRef(null);
  var parentRef = React__default["default"].useRef(null);
  var avatarRef = React__default["default"].useRef(null);
  var _c = React.useContext(UserProfileContext.UserProfileContext),
    disableUserProfile = _c.disableUserProfile,
    renderUserProfile = _c.renderUserProfile;
  var stringSet = React.useContext(LocalizationContext.LocalizationContext).stringSet;
  return /*#__PURE__*/React__default["default"].createElement("div", {
    className: tslib_es6.__spreadArray(tslib_es6.__spreadArray([], Array.isArray(className) ? className : [className], true), ['sendbird-user-list-item'], false).join(' '),
    ref: parentRef
  }, (user === null || user === void 0 ? void 0 : user.isMuted) && /*#__PURE__*/React__default["default"].createElement(ui_MutedAvatarOverlay, {
    height: 40,
    width: 40
  }), /*#__PURE__*/React__default["default"].createElement(ui_ContextMenu["default"], {
    menuTrigger: function (toggleDropdown) {
      return /*#__PURE__*/React__default["default"].createElement(ui_Avatar["default"], {
        className: "sendbird-user-list-item__avatar",
        ref: avatarRef,
        src: user.profileUrl,
        width: avatarSize,
        height: avatarSize,
        onClick: function () {
          if (!disableUserProfile) {
            toggleDropdown();
            onClick === null || onClick === void 0 ? void 0 : onClick();
          }
        }
      });
    },
    menuItems: function (closeDropdown) {
      return /*#__PURE__*/React__default["default"].createElement(ui_ContextMenu.MenuItems, {
        openLeft: true,
        parentRef: avatarRef
        // for catching location(x, y) of MenuItems
        ,
        parentContainRef: avatarRef
        // for toggling more options(menus & reactions)
        ,
        closeDropdown: closeDropdown,
        style: {
          paddingTop: '0px',
          paddingBottom: '0px'
        }
      }, renderUserProfile ? renderUserProfile({
        user: user,
        currentUserId: currentUser,
        close: closeDropdown
      }) : /*#__PURE__*/React__default["default"].createElement(ui_UserProfile, {
        disableMessaging: disableMessaging,
        user: user,
        currentUserId: currentUser,
        onSuccess: closeDropdown
      }));
    }
  }), /*#__PURE__*/React__default["default"].createElement(ui_Label.Label, {
    className: "sendbird-user-list-item__title",
    type: ui_Label.LabelTypography.SUBTITLE_1,
    color: ui_Label.LabelColors.ONBACKGROUND_1
  }, user.nickname || stringSet.NO_NAME, currentUser === user.userId && ' (You)'),
  // if there is now nickname, display userId
  !user.nickname && /*#__PURE__*/React__default["default"].createElement(ui_Label.Label, {
    className: "sendbird-user-list-item__subtitle",
    type: ui_Label.LabelTypography.CAPTION_3,
    color: ui_Label.LabelColors.ONBACKGROUND_2
  }, user.userId), checkBox && /*#__PURE__*/React__default["default"].createElement("label", {
    className: "sendbird-user-list-item__checkbox",
    htmlFor: uniqueKey
  }, /*#__PURE__*/React__default["default"].createElement(ui_Checkbox, {
    id: uniqueKey,
    checked: checked,
    disabled: disabled,
    onChange: function (event) {
      return onChange(event);
    }
  })), isOperator && /*#__PURE__*/React__default["default"].createElement(ui_Label.Label, {
    className: ['sendbird-user-list-item__operator', checkBox ? 'checkbox' : ''].join(' '),
    type: ui_Label.LabelTypography.SUBTITLE_2,
    color: ui_Label.LabelColors.ONBACKGROUND_2
  }, "Operator"), action && /*#__PURE__*/React__default["default"].createElement("div", {
    className: "sendbird-user-list-item__action",
    ref: actionRef
  }, action({
    actionRef: actionRef,
    parentRef: parentRef
  })));
}

module.exports = UserListItem;
//# sourceMappingURL=UserListItem.js.map
