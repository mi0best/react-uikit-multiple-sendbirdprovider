{"version":3,"file":"OpenchannelUserMessage.js","sources":["../../../src/ui/OpenchannelUserMessage/index.tsx"],"sourcesContent":["import React, {\n  useContext,\n  useRef,\n  useState,\n  ReactElement,\n  useEffect,\n} from 'react';\nimport { UserMessage } from '@sendbird/chat/message';\nimport format from 'date-fns/format';\nimport './index.scss';\n\nimport Avatar from '../Avatar';\nimport ContextMenu, { MenuItems, MenuItem } from '../ContextMenu';\nimport Icon, { IconTypes, IconColors } from '../Icon';\nimport IconButton from '../IconButton';\nimport Label, { LabelTypography, LabelColors } from '../Label';\nimport Loader from '../Loader';\nimport UserProfile from '../UserProfile';\nimport { UserProfileContext } from '../../lib/UserProfileContext';\n\nimport { useLocalization } from '../../lib/LocalizationContext';\nimport { copyToClipboard } from './utils';\nimport uuidv4 from '../../utils/uuid';\nimport {\n  checkIsPending,\n  checkIsFailed,\n  isFineCopy,\n  isFineEdit,\n  isFineResend,\n  isFineDelete,\n  showMenuTrigger,\n  getSenderFromMessage,\n} from '../../utils/openChannelUtils';\nimport { useMediaQueryContext } from '../../lib/MediaQueryContext';\nimport OpenChannelMobileMenu from '../OpenChannelMobileMenu';\nimport useLongPress from '../../hooks/useLongPress';\nimport { isEditedMessage } from '../../utils';\n\ninterface OpenChannelUserMessageProps {\n  className?: string | Array<string>;\n  message: UserMessage;\n  isOperator?: boolean;\n  isEphemeral?: boolean;\n  userId: string;\n  disabled?: boolean;\n  showEdit(bool: boolean): void;\n  showRemove(bool: boolean): void;\n  resendMessage(message: UserMessage): void;\n  chainTop?: boolean;\n  chainBottom?: boolean;\n}\n\nexport default function OpenchannelUserMessage({\n  className,\n  message,\n  isOperator,\n  isEphemeral = false,\n  userId,\n  resendMessage,\n  disabled,\n  showEdit,\n  showRemove,\n  chainTop,\n}: OpenChannelUserMessageProps): ReactElement {\n  // hooks\n  const { stringSet, dateLocale } = useLocalization();\n  const { disableUserProfile, renderUserProfile } = useContext(UserProfileContext);\n  const messageRef = useRef(null);\n  const avatarRef = useRef(null);\n  const contextMenuRef = useRef(null);\n  const mobileMenuRef = useRef(null);\n  const [contextStyle, setContextStyle] = useState({});\n  const [contextMenu, setContextMenu] = useState(false);\n\n  // consts\n  const status = message?.sendingStatus;\n  const isPending = checkIsPending(status);\n  const isFailed = checkIsFailed(status);\n  const sender = getSenderFromMessage(message);\n\n  // place context menu top depending clientHeight of message component\n  useEffect(() => {\n    if (messageRef?.current?.clientHeight > 36) {\n      setContextStyle({ top: '8px ' });\n    } else {\n      setContextStyle({ top: '2px' });\n    }\n  }, [window.innerWidth]);\n\n  const onLongPress = useLongPress({\n    onLongPress: () => {\n      setContextMenu(true);\n    },\n  });\n\n  const { isMobile } = useMediaQueryContext();\n  if (!message || message.messageType !== 'user') {\n    return <></>;\n  }\n\n  return (\n    <>\n      <div\n        className={[\n          ...(Array.isArray(className) ? className : [className]),\n          'sendbird-openchannel-user-message',\n        ].join(' ')}\n        ref={messageRef}\n      >\n        <div className=\"sendbird-openchannel-user-message__left\">\n          {\n            !chainTop && (\n              <ContextMenu\n                menuTrigger={(toggleDropdown) => (\n                  <Avatar\n                    className=\"sendbird-openchannel-user-message__left__avatar\"\n                    src={sender.profileUrl || ''}\n                    ref={avatarRef}\n                    width=\"28px\"\n                    height=\"28px\"\n                    onClick={() => {\n                      if (!disableUserProfile) {\n                        toggleDropdown();\n                      }\n                    }}\n                  />\n                )}\n                menuItems={(closeDropdown) => (\n                  <MenuItems\n                    parentRef={avatarRef}\n                    parentContainRef={avatarRef}\n                    closeDropdown={closeDropdown}\n                    style={{ paddingTop: '0px', paddingBottom: '0px' }}\n                  >\n                    {\n                      renderUserProfile\n                        ? (\n                          renderUserProfile({\n                            user: sender,\n                            close: closeDropdown,\n                            currentUserId: userId,\n                          })\n                        )\n                        : (\n                          <UserProfile\n                            user={sender}\n                            onSuccess={closeDropdown}\n                            disableMessaging\n                          />\n                        )\n                    }\n                  </MenuItems>\n                )}\n              />\n            )\n          }\n        </div>\n        <div className=\"sendbird-openchannel-user-message__right\">\n          {\n            !chainTop && (\n              <div className=\"sendbird-openchannel-user-message__right__top\">\n                <Label\n                  className=\"sendbird-openchannel-user-message__right__top__sender-name\"\n                  type={LabelTypography.CAPTION_2}\n                  color={isOperator ? LabelColors.SECONDARY_3 : LabelColors.ONBACKGROUND_2}\n                >\n                  {\n                    sender && (\n                      sender.friendName\n                      || sender.nickname\n                      || sender.userId\n                    )\n                  }\n                </Label>\n                <Label\n                  className=\"sendbird-openchannel-user-message__right__top__sent-at\"\n                  type={LabelTypography.CAPTION_3}\n                  color={LabelColors.ONBACKGROUND_3}\n                >\n                  {\n                    message?.createdAt && (\n                      format(message?.createdAt, 'p', {\n                        locale: dateLocale,\n                      })\n                    )\n                  }\n                </Label>\n              </div>\n            )\n          }\n          <div\n            {...(isMobile ? { ...onLongPress } : {})}\n            className=\"sendbird-openchannel-user-message__right__bottom\" ref={mobileMenuRef}>\n            <Label\n              className=\"sendbird-openchannel-user-message__right__bottom__message\"\n              type={LabelTypography.BODY_1}\n              color={LabelColors.ONBACKGROUND_1}\n            >\n              {message?.message}\n              {isEditedMessage(message) && (\n                <Label\n                  key={uuidv4()}\n                  type={LabelTypography.BODY_1}\n                  color={LabelColors.ONBACKGROUND_2}\n                  calssName=\"sendbird-openchannel-user-message-word\"\n                >\n                  {` ${stringSet.MESSAGE_EDITED} `}\n                </Label>\n              )}\n            </Label>\n          </div>\n          {\n            (isPending || isFailed) && (\n              <div className=\"sendbird-openchannel-user-message__right__tail\">\n                {\n                  isPending && (\n                    <Loader\n                      width=\"16px\"\n                      height=\"16px\"\n                    >\n                      <Icon\n                        className=\"sendbird-openchannel-user-message__right__tail__pending\"\n                        type={IconTypes.SPINNER}\n                        fillColor={IconColors.PRIMARY}\n                        width=\"16px\"\n                        height=\"16px\"\n                      />\n                    </Loader>\n                  )\n                }\n                {\n                  isFailed && (\n                    <Icon\n                      className=\"sendbird-openchannel-user-message__right__tail__failed\"\n                      type={IconTypes.ERROR}\n                      fillColor={IconColors.ERROR}\n                      width=\"16px\"\n                      height=\"16px\"\n                    />\n                  )\n                }\n              </div>\n            )\n          }\n        </div>\n        {\n          !isMobile && (\n            <div\n              className=\"sendbird-openchannel-user-message__context-menu\"\n              ref={contextMenuRef}\n              style={contextStyle}\n            >\n              <ContextMenu\n                menuTrigger={(toggleDropdown) => (\n                  showMenuTrigger({ message: message, userId: userId, status: status }) && (\n                    <IconButton\n                      className=\"sendbird-openchannel-user-message__context-menu--icon\"\n                      width=\"32px\"\n                      height=\"32px\"\n                      onClick={() => {\n                        toggleDropdown();\n                      }}\n                    >\n                      <Icon\n                        type={IconTypes.MORE}\n                        fillColor={IconColors.CONTENT_INVERSE}\n                        width=\"24px\"\n                        height=\"24px\"\n                      />\n                    </IconButton>\n                  )\n                )}\n                menuItems={(closeDropdown) => (\n                  <MenuItems\n                    parentRef={contextMenuRef}\n                    parentContainRef={contextMenuRef}\n                    closeDropdown={closeDropdown}\n                    openLeft\n                  >\n                    {\n                      isFineCopy({ message: message, userId: userId, status: status }) && (\n                        <MenuItem\n                          className=\"sendbird-openchannel-user-message__context-menu__copy\"\n                          onClick={() => {\n                            copyToClipboard(message.message);\n                            closeDropdown();\n                          }}\n                          dataSbId=\"open_channel_user_message_menu_copy\"\n                        >\n                          {stringSet.CONTEXT_MENU_DROPDOWN__COPY}\n                        </MenuItem>\n                      )\n                    }\n                    {\n                      (!isEphemeral && isFineEdit({ message: message, userId: userId, status: status })) && (\n                        <MenuItem\n                          className=\"sendbird-openchannel-user-message__context-menu__edit\"\n                          onClick={() => {\n                            if (disabled) {\n                              return;\n                            }\n                            showEdit(true);\n                            closeDropdown();\n                          }}\n                          dataSbId=\"open_channel_user_message_menu_edit\"\n                        >\n                          {stringSet.CONTEXT_MENU_DROPDOWN__EDIT}\n                        </MenuItem>\n                      )\n                    }\n                    {\n                      isFineResend({ message: message, userId: userId, status: status }) && (\n                        <MenuItem\n                          className=\"sendbird-openchannel-user-message__context-menu__resend\"\n                          onClick={() => {\n                            resendMessage(message);\n                            closeDropdown();\n                          }}\n                          dataSbId=\"open_channel_user_message_menu_resend\"\n                        >\n                          {stringSet.CONTEXT_MENU_DROPDOWN__RESEND}\n                        </MenuItem>\n                      )\n                    }\n                    {\n                      (!isEphemeral && isFineDelete({ message: message, userId: userId, status: status })) && (\n                        <MenuItem\n                          className=\"sendbird-openchannel-user-message__context-menu__delete\"\n                          onClick={() => {\n                            if (disabled) {\n                              return;\n                            }\n                            showRemove(true);\n                            closeDropdown();\n                          }}\n                          dataSbId=\"open_channel_user_message_menu_delete\"\n                        >\n                          {stringSet.CONTEXT_MENU_DROPDOWN__DELETE}\n                        </MenuItem>\n                      )\n                    }\n                  </MenuItems>\n                )}\n              />\n            </div>\n\n          )\n        }\n      </div>\n      {\n        contextMenu && (\n          <OpenChannelMobileMenu\n            message={message}\n            parentRef={mobileMenuRef}\n            hideMenu={() => {\n              setContextMenu(false);\n            }}\n            showRemove={() => {\n              setContextMenu(false);\n              showRemove(true);\n            }}\n            showEdit={() => {\n              setContextMenu(false);\n              showEdit(true);\n            }}\n            copyToClipboard={() => {\n              setContextMenu(false);\n              copyToClipboard(message?.message);\n            }}\n            resendMessage={() => {\n              setContextMenu(false);\n              resendMessage(message);\n            }}\n          />\n        )\n      }\n    </>\n  );\n}\n"],"names":["OpenchannelUserMessage","_a","className","message","isOperator","_b","isEphemeral","userId","resendMessage","disabled","showEdit","showRemove","chainTop","_c","useLocalization","stringSet","dateLocale","_d","useContext","UserProfileContext","disableUserProfile","renderUserProfile","messageRef","useRef","avatarRef","contextMenuRef","mobileMenuRef","_e","useState","contextStyle","setContextStyle","_f","contextMenu","setContextMenu","status","sendingStatus","isPending","checkIsPending","isFailed","checkIsFailed","sender","getSenderFromMessage","useEffect","current","clientHeight","top","window","innerWidth","onLongPress","useLongPress","isMobile","useMediaQueryContext","messageType","React","createElement","Fragment","__spreadArray","Array","isArray","join","ref","ContextMenu","menuTrigger","toggleDropdown","Avatar","src","profileUrl","width","height","onClick","menuItems","closeDropdown","MenuItems","parentRef","parentContainRef","style","paddingTop","paddingBottom","user","close","currentUserId","UserProfile","onSuccess","disableMessaging","Label","type","LabelTypography","CAPTION_2","color","LabelColors","SECONDARY_3","ONBACKGROUND_2","friendName","nickname","CAPTION_3","ONBACKGROUND_3","createdAt","format","locale","_extends","__assign","BODY_1","ONBACKGROUND_1","isEditedMessage","key","uuidv4","calssName","concat","MESSAGE_EDITED","Loader","Icon","IconTypes","SPINNER","fillColor","IconColors","PRIMARY","ERROR","showMenuTrigger","IconButton","MORE","CONTENT_INVERSE","openLeft","isFineCopy","MenuItem","copyToClipboard","dataSbId","CONTEXT_MENU_DROPDOWN__COPY","isFineEdit","CONTEXT_MENU_DROPDOWN__EDIT","isFineResend","CONTEXT_MENU_DROPDOWN__RESEND","isFineDelete","CONTEXT_MENU_DROPDOWN__DELETE","OpenChannelMobileMenu","hideMenu"],"mappings":"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"}