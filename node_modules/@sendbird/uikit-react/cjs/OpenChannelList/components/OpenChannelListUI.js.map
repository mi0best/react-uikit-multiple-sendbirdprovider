{"version":3,"file":"OpenChannelListUI.js","sources":["../../../../src/modules/OpenChannelList/components/OpenChannelListUI/index.tsx"],"sourcesContent":["import React, { useContext, useMemo, useRef, useState } from 'react';\nimport { OpenChannel } from '@sendbird/chat/openChannel';\n\nimport './index.scss';\n\nimport OpenChannelPreview from '../OpenChannelPreview';\nimport PlaceHolder, { PlaceHolderTypes } from '../../../../ui/PlaceHolder';\nimport IconButton from '../../../../ui/IconButton';\nimport Icon, { IconTypes, IconColors } from '../../../../ui/Icon';\nimport Label, { LabelTypography, LabelColors } from '../../../../ui/Label';\nimport { OnOpenChannelSelected, OpenChannelListFetchingStatus } from '../../context/OpenChannelListInterfaces';\nimport { useOpenChannelListContext } from '../../context/OpenChannelListProvider';\nimport OpenChannelListActionTypes from '../../context/dux/actionTypes';\nimport CreateOpenChannel from '../../../CreateOpenChannel';\nimport { LocalizationContext } from '../../../../lib/LocalizationContext';\nimport { SCROLL_BUFFER } from '../../../../utils/consts';\n\ninterface RenderOpenChannelPreviewProps {\n  channel: OpenChannel;\n  isSelected: boolean;\n  onChannelSelected: OnOpenChannelSelected;\n}\n\nexport interface OpenChannelListUIProps {\n  renderHeader?: () => React.ReactElement;\n  renderChannelPreview?: (props: RenderOpenChannelPreviewProps) => React.ReactElement;\n  renderPlaceHolderEmpty?: () => React.ReactElement;\n  renderPlaceHolderError?: () => React.ReactElement;\n  renderPlaceHolderLoading?: () => React.ReactElement;\n}\n\nfunction OpenChannelListUI({\n  renderHeader,\n  renderChannelPreview,\n  renderPlaceHolderEmpty,\n  renderPlaceHolderError,\n  renderPlaceHolderLoading,\n}: OpenChannelListUIProps): React.ReactElement {\n  const [showCreateChannelModal, setShowCreateChannel] = useState(false);\n  const scrollRef = useRef(null);\n  const {\n    logger,\n    currentChannel,\n    allChannels,\n    fetchingStatus,\n    onChannelSelected,\n    fetchNextChannels,\n    refreshOpenChannelList,\n    openChannelListDispatcher,\n  } = useOpenChannelListContext();\n  const { stringSet } = useContext(LocalizationContext);\n\n  const handleScroll = (e) => {\n    const element = e.target;\n    const {\n      scrollTop,\n      clientHeight,\n      scrollHeight,\n    } = element;\n    const isAboutSame = (a, b, px) => (Math.abs(a - b) <= px);\n    if (isAboutSame(clientHeight + scrollTop, scrollHeight, SCROLL_BUFFER)) {\n      fetchNextChannels((messages) => {\n        if (messages) {\n          try {\n            element.scrollTop = scrollHeight - clientHeight;\n          } catch (error) {\n            //\n          }\n        }\n      });\n    }\n  };\n  const handleOnClickCreateChannel = () => {\n    setShowCreateChannel(true);\n  };\n\n  const MemoizedHeader: React.ReactElement = useMemo(() => {\n    return renderHeader?.() || null;\n  }, [renderHeader]);\n  const MemoizedPlaceHolder: React.ReactElement = useMemo(() => {\n    if (fetchingStatus === OpenChannelListFetchingStatus.EMPTY) {\n      return renderPlaceHolderEmpty?.() || (\n        <PlaceHolder\n          className=\"sendbird-open-channel-list-ui__channel-list--place-holder--empty\"\n          type={PlaceHolderTypes.NO_CHANNELS}\n        />\n      );\n    }\n    if (fetchingStatus === OpenChannelListFetchingStatus.FETCHING) {\n      return renderPlaceHolderLoading?.() || (\n        <div className=\"sendbird-open-channel-list-ui__channel-list--place-holder--loading\">\n          <PlaceHolder\n            iconSize=\"24px\"\n            type={PlaceHolderTypes.LOADING}\n          />\n        </div>\n      );\n    }\n    if (fetchingStatus === OpenChannelListFetchingStatus.ERROR) {\n      return renderPlaceHolderError?.() || (\n        <PlaceHolder\n          className=\"sendbird-open-channel-list-ui__channel-list--place-holder--error\"\n          type={PlaceHolderTypes.WRONG}\n        />\n      );\n    }\n    return null;\n  }, [fetchingStatus, renderPlaceHolderEmpty, renderPlaceHolderLoading, renderPlaceHolderError]);\n  const MemoizedAllChannels = useMemo(() => {\n    if (fetchingStatus === OpenChannelListFetchingStatus.DONE) {\n      return allChannels.map((channel) => {\n        const isSelected = channel?.url === currentChannel?.url;\n        const handleClick = (e) => {\n          onChannelSelected?.(channel, e);\n          logger.info('OpenChannelList|ChannelPreview: A channel is selected', channel);\n          openChannelListDispatcher({\n            type: OpenChannelListActionTypes.SET_CURRENT_OPEN_CHANNEL,\n            payload: channel,\n          });\n        };\n        return renderChannelPreview\n          ? (\n            <div\n              className=\"sendbird-open-channel-list-ui__channel-list__item\"\n              onClick={handleClick}\n            >\n              {renderChannelPreview({ channel, isSelected, onChannelSelected })}\n            </div>\n          )\n          : (\n            <OpenChannelPreview\n              className=\"sendbird-open-channel-list-ui__channel-list__item\"\n              channel={channel}\n              isSelected={isSelected}\n              onClick={handleClick}\n              key={channel?.url}\n            />\n          );\n      });\n    }\n    return null;\n  }, [allChannels, allChannels.length, currentChannel]);\n\n  return (\n    <div className=\"sendbird-open-channel-list-ui\">\n      {\n        showCreateChannelModal && (\n          <CreateOpenChannel\n            closeModal={() => setShowCreateChannel(false)}\n            onCreateChannel={(openChannel) => {\n              onChannelSelected?.(openChannel);\n              openChannelListDispatcher({\n                type: OpenChannelListActionTypes.CREATE_OPEN_CHANNEL,\n                payload: openChannel,\n              });\n            }}\n          />\n        )\n      }\n      {\n        MemoizedHeader || (\n          <div className=\"sendbird-open-channel-list-ui__header\">\n            <Label\n              className=\"sendbird-open-channel-list-ui__header__title\"\n              type={LabelTypography.H_2}\n              color={LabelColors.ONBACKGROUND_1}\n            >\n              {stringSet.OPEN_CHANNEL_LIST__TITLE}\n            </Label>\n            <IconButton\n              className=\"sendbird-open-channel-list-ui__header__button-refresh\"\n              width=\"32px\"\n              height=\"32px\"\n              type=\"button\"\n              onClick={() => refreshOpenChannelList()}\n            >\n              <Icon\n                type={IconTypes.REFRESH}\n                fillColor={IconColors.PRIMARY}\n                width=\"22px\"\n                height=\"22px\"\n              />\n            </IconButton>\n            <IconButton\n              className=\"sendbird-open-channel-list-ui__header__button-create-channel\"\n              width=\"32px\"\n              height=\"32px\"\n              type=\"button\"\n              onClick={handleOnClickCreateChannel}\n            >\n              <Icon\n                type={IconTypes.CREATE}\n                fillColor={IconColors.PRIMARY}\n                width=\"22px\"\n                height=\"22px\"\n              />\n            </IconButton>\n          </div>\n        )\n      }\n      <div\n        className=\"sendbird-open-channel-list-ui__channel-list\"\n        ref={scrollRef}\n        onScroll={handleScroll}\n        >\n        {MemoizedPlaceHolder}\n        {MemoizedAllChannels}\n      </div>\n    </div>\n  );\n}\n\nexport default OpenChannelListUI;\n"],"names":["OpenChannelListUI","_a","renderHeader","renderChannelPreview","renderPlaceHolderEmpty","renderPlaceHolderError","renderPlaceHolderLoading","_b","useState","showCreateChannelModal","setShowCreateChannel","scrollRef","useRef","_c","useOpenChannelListContext","logger","currentChannel","allChannels","fetchingStatus","onChannelSelected","fetchNextChannels","refreshOpenChannelList","openChannelListDispatcher","stringSet","useContext","LocalizationContext","handleScroll","e","element","target","scrollTop","clientHeight","scrollHeight","isAboutSame","a","b","px","Math","abs","SCROLL_BUFFER","messages","error","handleOnClickCreateChannel","MemoizedHeader","useMemo","MemoizedPlaceHolder","OpenChannelListFetchingStatus","EMPTY","React","createElement","PlaceHolder","className","type","PlaceHolderTypes","NO_CHANNELS","FETCHING","iconSize","LOADING","ERROR","WRONG","MemoizedAllChannels","DONE","map","channel","isSelected","url","handleClick","info","OpenChannelListActionTypes","SET_CURRENT_OPEN_CHANNEL","payload","onClick","OpenChannelPreview","key","length","CreateOpenChannel","closeModal","onCreateChannel","openChannel","CREATE_OPEN_CHANNEL","Label","LabelTypography","H_2","color","LabelColors","ONBACKGROUND_1","OPEN_CHANNEL_LIST__TITLE","IconButton","width","height","Icon","IconTypes","REFRESH","fillColor","IconColors","PRIMARY","CREATE","ref","onScroll"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+BA,SAASA,iBAAiBA,CAACC,EAMF,EAAA;AALvB,EAAA,IAAAC,YAAY,GAAAD,EAAA,CAAAC,YAAA;IACZC,oBAAoB,GAAAF,EAAA,CAAAE,oBAAA;IACpBC,sBAAsB,GAAAH,EAAA,CAAAG,sBAAA;IACtBC,sBAAsB,GAAAJ,EAAA,CAAAI,sBAAA;IACtBC,wBAAwB,GAAAL,EAAA,CAAAK,wBAAA,CAAA;AAElB,EAAA,IAAAC,EAAA,GAAiDC,cAAQ,CAAC,KAAK,CAAC;AAA/DC,IAAAA,sBAAsB,GAAAF,EAAA,CAAA,CAAA,CAAA;AAAEG,IAAAA,oBAAoB,GAAAH,EAAA,CAAA,CAAA,CAAmB,CAAA;AACtE,EAAA,IAAMI,SAAS,GAAGC,YAAM,CAAC,IAAI,CAAC,CAAA;AACxB,EAAA,IAAAC,EAAA,GASFC,iDAAyB,EAAE;IAR7BC,MAAM,GAAAF,EAAA,CAAAE,MAAA;IACNC,cAAc,GAAAH,EAAA,CAAAG,cAAA;IACdC,WAAW,GAAAJ,EAAA,CAAAI,WAAA;IACXC,cAAc,GAAAL,EAAA,CAAAK,cAAA;IACdC,iBAAiB,GAAAN,EAAA,CAAAM,iBAAA;IACjBC,iBAAiB,GAAAP,EAAA,CAAAO,iBAAA;IACjBC,sBAAsB,GAAAR,EAAA,CAAAQ,sBAAA;IACtBC,yBAAyB,GAAAT,EAAA,CAAAS,yBACI,CAAA;AACvB,EAAA,IAAAC,SAAS,GAAKC,gBAAU,CAACC,uCAAmB,CAAC,UAApC,CAAA;AAEjB,EAAA,IAAMC,YAAY,GAAG,UAACC,CAAC,EAAA;AACrB,IAAA,IAAMC,OAAO,GAAGD,CAAC,CAACE,MAAM,CAAA;AAEtB,IAAA,IAAAC,SAAS,GAGPF,OAAO,CAAAE,SAHA;MACTC,YAAY,GAEVH,OAAO,CAAAG,YAFG;MACZC,YAAY,GACVJ,OAAO,aADG,CAAA;IAEd,IAAMK,WAAW,GAAG,UAACC,CAAC,EAAEC,CAAC,EAAEC,EAAE,EAAK;MAAA,OAACC,IAAI,CAACC,GAAG,CAACJ,CAAC,GAAGC,CAAC,CAAC,IAAIC,EAAE,CAAA;KAAC,CAAA;IACzD,IAAIH,WAAW,CAACF,YAAY,GAAGD,SAAS,EAAEE,YAAY,EAAEO,oBAAa,CAAC,EAAE;MACtEnB,iBAAiB,CAAC,UAACoB,QAAQ,EAAA;AACzB,QAAA,IAAIA,QAAQ,EAAE;UACZ,IAAI;AACFZ,YAAAA,OAAO,CAACE,SAAS,GAAGE,YAAY,GAAGD,YAAY,CAAA;WAChD,CAAC,OAAOU,KAAK,EAAE;AACd;AAAA,WAAA;AAEH,SAAA;AACH,OAAC,CAAC,CAAA;AACH,KAAA;GACF,CAAA;AACD,EAAA,IAAMC,0BAA0B,GAAG,YAAA;IACjChC,oBAAoB,CAAC,IAAI,CAAC,CAAA;GAC3B,CAAA;AAED,EAAA,IAAMiC,cAAc,GAAuBC,aAAO,CAAC,YAAA;AACjD,IAAA,OAAO,CAAA1C,YAAY,KAAZ,IAAA,IAAAA,YAAY,uBAAZA,YAAY,EAAI,KAAI,IAAI,CAAA;AACjC,GAAC,EAAE,CAACA,YAAY,CAAC,CAAC,CAAA;AAClB,EAAA,IAAM2C,mBAAmB,GAAuBD,aAAO,CAAC,YAAA;AACtD,IAAA,IAAI1B,cAAc,KAAK4B,qDAA6B,CAACC,KAAK,EAAE;MAC1D,OAAO,CAAA3C,sBAAsB,KAAA,IAAA,IAAtBA,sBAAsB,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAtBA,sBAAsB,EAAI,kBAC/B4C,yBAAA,CAAAC,aAAA,CAACC,yBAAW,EAAA;AACVC,QAAAA,SAAS,EAAC,kEAAkE;QAC5EC,IAAI,EAAEC,+BAAgB,CAACC,WAAAA;AAAY,OACnC,CACH,CAAA;AACF,KAAA;AACD,IAAA,IAAIpC,cAAc,KAAK4B,qDAA6B,CAACS,QAAQ,EAAE;AAC7D,MAAA,OAAO,CAAAjD,wBAAwB,KAAxB,IAAA,IAAAA,wBAAwB,uBAAxBA,wBAAwB,EAAI,kBACjC0C,yBAAA,CAAAC,aAAA,CAAA,KAAA,EAAA;AAAKE,QAAAA,SAAS,EAAC,oEAAA;AAAoE,OAAA,eACjFH,yBAAA,CAAAC,aAAA,CAACC,yBAAW,EAAA;AACVM,QAAAA,QAAQ,EAAC,MAAM;QACfJ,IAAI,EAAEC,+BAAgB,CAACI,OAAAA;AAAQ,OAEnC,CAAK,CACN,CAAA;AACF,KAAA;AACD,IAAA,IAAIvC,cAAc,KAAK4B,qDAA6B,CAACY,KAAK,EAAE;MAC1D,OAAO,CAAArD,sBAAsB,KAAA,IAAA,IAAtBA,sBAAsB,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAtBA,sBAAsB,EAAI,kBAC/B2C,yBAAA,CAAAC,aAAA,CAACC,yBAAW,EAAA;AACVC,QAAAA,SAAS,EAAC,kEAAkE;QAC5EC,IAAI,EAAEC,+BAAgB,CAACM,KAAAA;AAAM,OAC7B,CACH,CAAA;AACF,KAAA;AACD,IAAA,OAAO,IAAI,CAAA;GACZ,EAAE,CAACzC,cAAc,EAAEd,sBAAsB,EAAEE,wBAAwB,EAAED,sBAAsB,CAAC,CAAC,CAAA;AAC9F,EAAA,IAAMuD,mBAAmB,GAAGhB,aAAO,CAAC,YAAA;AAClC,IAAA,IAAI1B,cAAc,KAAK4B,qDAA6B,CAACe,IAAI,EAAE;AACzD,MAAA,OAAO5C,WAAW,CAAC6C,GAAG,CAAC,UAACC,OAAO,EAAA;AAC7B,QAAA,IAAMC,UAAU,GAAG,CAAAD,OAAO,KAAP,IAAA,IAAAA,OAAO,uBAAPA,OAAO,CAAEE,GAAG,OAAKjD,cAAc,aAAdA,cAAc,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAdA,cAAc,CAAEiD,GAAG,CAAA,CAAA;AACvD,QAAA,IAAMC,WAAW,GAAG,UAACvC,CAAC,EAAA;AACpBR,UAAAA,iBAAiB,KAAA,IAAA,IAAjBA,iBAAiB,KAAjB,KAAA,CAAA,GAAA,KAAA,CAAA,GAAAA,iBAAiB,CAAG4C,OAAO,EAAEpC,CAAC,CAAC,CAAA;AAC/BZ,UAAAA,MAAM,CAACoD,IAAI,CAAC,uDAAuD,EAAEJ,OAAO,CAAC,CAAA;AAC7EzC,UAAAA,yBAAyB,CAAC;YACxB8B,IAAI,EAAEgB,kDAA0B,CAACC,wBAAwB;AACzDC,YAAAA,OAAO,EAAEP,OAAAA;AACV,WAAA,CAAC,CAAA;SACH,CAAA;AACD,QAAA,OAAO5D,oBAAoB,gBAEvB6C,yBAAA,CAAAC,aAAA,CAAA,KAAA,EAAA;AACEE,UAAAA,SAAS,EAAC,mDAAmD;AAC7DoB,UAAAA,OAAO,EAAEL,WAAAA;AAAY,SAAA,EAEpB/D,oBAAoB,CAAC;AAAE4D,UAAAA,OAAO,EAAAA,OAAA;AAAEC,UAAAA,UAAU,EAAAA,UAAA;AAAE7C,UAAAA,iBAAiB,EAAAA,iBAAAA;AAAA,SAAE,CAC7D,CAAC,gBAGN6B,yBAAA,CAAAC,aAAA,CAACuB,6CAAkB,EAAA;AACjBrB,UAAAA,SAAS,EAAC,mDAAmD;AAC7DY,UAAAA,OAAO,EAAEA,OAAQ;AACjBC,UAAAA,UAAU,EAAEA,UAAW;AACvBO,UAAAA,OAAO,EAAEL,WAAY;AACrBO,UAAAA,GAAG,EAAEV,OAAO,KAAP,IAAA,IAAAA,OAAO,uBAAPA,OAAO,CAAEE,GAAAA;AAAI,SAAA,CAErB,CAAA;AACL,OAAC,CAAC,CAAA;AACH,KAAA;AACD,IAAA,OAAO,IAAI,CAAA;GACZ,EAAE,CAAChD,WAAW,EAAEA,WAAW,CAACyD,MAAM,EAAE1D,cAAc,CAAC,CAAC,CAAA;EAErD,oBACEgC,yBAAA,CAAAC,aAAA,CAAA,KAAA,EAAA;AAAKE,IAAAA,SAAS,EAAC,+BAAA;AAA+B,GAAA,EAE1C1C,sBAAsB,iBACpBuC,yBAAA,CAAAC,aAAA,CAAC0B,iBAAiB,EAAA;IAChBC,UAAU,EAAE,YAAM;MAAA,OAAAlE,oBAAoB,CAAC,KAAK,CAAC,CAAA;KAAC;AAC9CmE,IAAAA,eAAe,EAAE,UAACC,WAAW,EAAA;AAC3B3D,MAAAA,iBAAiB,aAAjBA,iBAAiB,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAjBA,iBAAiB,CAAG2D,WAAW,CAAC,CAAA;AAChCxD,MAAAA,yBAAyB,CAAC;QACxB8B,IAAI,EAAEgB,kDAA0B,CAACW,mBAAmB;AACpDT,QAAAA,OAAO,EAAEQ,WAAAA;AACV,OAAA,CAAC,CAAA;AACJ,KAAA;AAAE,GACF,CACH,EAGDnC,cAAc,iBACZK,yBAAA,CAAAC,aAAA,CAAA,KAAA,EAAA;AAAKE,IAAAA,SAAS,EAAC,uCAAA;AAAuC,GAAA,eACpDH,yBAAA,CAAAC,aAAA,CAAC+B,cAAK,EAAA;AACJ7B,IAAAA,SAAS,EAAC,8CAA8C;IACxDC,IAAI,EAAE6B,wBAAe,CAACC,GAAI;IAC1BC,KAAK,EAAEC,oBAAW,CAACC,cAAAA;GAElB9D,EAAAA,SAAS,CAAC+D,wBACN,CACP,eAAAtC,yBAAA,CAAAC,aAAA,CAACsC,aAAU,EAAA;AACTpC,IAAAA,SAAS,EAAC,uDAAuD;AACjEqC,IAAAA,KAAK,EAAC,MAAM;AACZC,IAAAA,MAAM,EAAC,MAAM;AACbrC,IAAAA,IAAI,EAAC,QAAQ;IACbmB,OAAO,EAAE,YAAA;MAAM,OAAAlD,sBAAsB,EAAE,CAAA;AAAxB,KAAA;AAAyB,GAAA,eAExC2B,yBAAA,CAAAC,aAAA,CAACyC,kBAAI,EAAA;IACHtC,IAAI,EAAEuC,iBAAS,CAACC,OAAQ;IACxBC,SAAS,EAAEC,kBAAU,CAACC,OAAQ;AAC9BP,IAAAA,KAAK,EAAC,MAAM;AACZC,IAAAA,MAAM,EAAC,MAAA;AAAM,GAEjB,CAAY,CACZ,eAAAzC,yBAAA,CAAAC,aAAA,CAACsC,aAAU,EAAA;AACTpC,IAAAA,SAAS,EAAC,8DAA8D;AACxEqC,IAAAA,KAAK,EAAC,MAAM;AACZC,IAAAA,MAAM,EAAC,MAAM;AACbrC,IAAAA,IAAI,EAAC,QAAQ;AACbmB,IAAAA,OAAO,EAAE7B,0BAAAA;AAA2B,GAAA,eAEpCM,yBAAA,CAAAC,aAAA,CAACyC,kBAAI,EAAA;IACHtC,IAAI,EAAEuC,iBAAS,CAACK,MAAO;IACvBH,SAAS,EAAEC,kBAAU,CAACC,OAAQ;AAC9BP,IAAAA,KAAK,EAAC,MAAM;AACZC,IAAAA,MAAM,EAAC,MAAA;AAAM,GAEjB,CAAY,CACT,CACN,eAEHzC,yBAAA,CAAAC,aAAA,CAAA,KAAA,EAAA;AACEE,IAAAA,SAAS,EAAC,6CAA6C;AACvD8C,IAAAA,GAAG,EAAEtF,SAAU;AACfuF,IAAAA,QAAQ,EAAExE,YAAAA;AAAa,GAAA,EAEtBmB,mBAAmB,EACnBe,mBACE,CACF,CAAC,CAAA;AAEV;;;;"}