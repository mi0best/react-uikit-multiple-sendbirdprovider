'use strict';

var React = require('react');
var ui_ContextMenu = require('./ui/ContextMenu.js');
var index = require('./index-dbe8dd84.js');
var LocalizationContext = require('./LocalizationContext-58b6ed7c.js');
var ui_Icon = require('./ui/Icon.js');
var ui_Label = require('./index-b5a9b4b7.js');
var ui_BottomSheet = require('./ui/BottomSheet.js');
var ui_ImageRenderer = require('./ui/ImageRenderer.js');
var ui_ReactionButton = require('./ui/ReactionButton.js');
var useSendbirdStateContext = require('./useSendbirdStateContext.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var React__default = /*#__PURE__*/_interopDefaultLegacy(React);

var MobileContextMenu = function (props) {
  var _a, _b, _c;
  var hideMenu = props.hideMenu,
    channel = props.channel,
    message = props.message,
    replyType = props.replyType,
    userId = props.userId,
    resendMessage = props.resendMessage,
    showEdit = props.showEdit,
    showRemove = props.showRemove,
    deleteMenuState = props.deleteMenuState,
    deleteMessage = props.deleteMessage,
    setQuoteMessage = props.setQuoteMessage,
    parentRef = props.parentRef,
    onReplyInThread = props.onReplyInThread,
    _d = props.isOpenedFromThread,
    isOpenedFromThread = _d === void 0 ? false : _d;
  var isByMe = ((_a = message === null || message === void 0 ? void 0 : message.sender) === null || _a === void 0 ? void 0 : _a.userId) === userId;
  var stringSet = LocalizationContext.useLocalization().stringSet;
  var showMenuItemCopy = index.isUserMessage(message);
  var showMenuItemEdit = index.isUserMessage(message) && index.isSentMessage(message) && isByMe;
  var showMenuItemResend = index.isFailedMessage(message) && (message === null || message === void 0 ? void 0 : message.isResendable) && isByMe;
  var showMenuItemDelete = !index.isPendingMessage(message) && isByMe;
  var showMenuItemDeleteByState = isByMe && (deleteMenuState === undefined || deleteMenuState !== 'HIDE');
  var showMenuItemDeleteFinal = showMenuItemDeleteByState && showMenuItemDelete;
  var disableDelete = deleteMenuState !== undefined && deleteMenuState === 'DISABLE' || ((_c = (_b = message === null || message === void 0 ? void 0 : message.threadInfo) === null || _b === void 0 ? void 0 : _b.replyCount) !== null && _c !== void 0 ? _c : 0) > 0;
  var showMenuItemDownload = !index.isPendingMessage(message) && index.isFileMessage(message) && !(index.isVoiceMessage(message) && ((channel === null || channel === void 0 ? void 0 : channel.isSuper) || (channel === null || channel === void 0 ? void 0 : channel.isBroadcast)));
  var showMenuItemReply = replyType === 'QUOTE_REPLY' && !index.isFailedMessage(message) && !index.isPendingMessage(message) && (channel === null || channel === void 0 ? void 0 : channel.isGroupChannel());
  var showMenuItemThread = replyType === 'THREAD' && !isOpenedFromThread && !index.isFailedMessage(message) && !index.isPendingMessage(message) && !index.isThreadMessage(message) && (channel === null || channel === void 0 ? void 0 : channel.isGroupChannel());
  var fileMessage = message;
  return /*#__PURE__*/React__default["default"].createElement(ui_ContextMenu["default"], {
    isOpen: true,
    menuItems: function () {
      var _a, _b, _c;
      return /*#__PURE__*/React__default["default"].createElement(ui_ContextMenu.MenuItems, {
        className: "sendbird-message__mobile-context-menu",
        parentRef: parentRef,
        parentContainRef: parentRef,
        closeDropdown: hideMenu
      }, showMenuItemCopy && /*#__PURE__*/React__default["default"].createElement(ui_ContextMenu.MenuItem, {
        className: "sendbird-message__mobile-context-menu-item menu-item-copy",
        onClick: function () {
          hideMenu();
          index.copyToClipboard(message === null || message === void 0 ? void 0 : message.message);
        },
        dataSbId: "ui_mobile_message_item_menu_copy"
      }, /*#__PURE__*/React__default["default"].createElement(ui_Label.Label, {
        type: ui_Label.LabelTypography.SUBTITLE_1,
        color: ui_Label.LabelColors.ONBACKGROUND_1
      }, stringSet === null || stringSet === void 0 ? void 0 : stringSet.MESSAGE_MENU__COPY), /*#__PURE__*/React__default["default"].createElement(ui_Icon["default"], {
        type: ui_Icon.IconTypes.COPY,
        fillColor: ui_Icon.IconColors.PRIMARY,
        width: "24px",
        height: "24px"
      })), showMenuItemReply && /*#__PURE__*/React__default["default"].createElement(ui_ContextMenu.MenuItem, {
        className: "sendbird-message__mobile-context-menu-item menu-item-reply",
        onClick: function () {
          hideMenu();
          setQuoteMessage(message);
        },
        disable: ((_a = message === null || message === void 0 ? void 0 : message.parentMessageId) !== null && _a !== void 0 ? _a : 0) > 0,
        dataSbId: "ui_mobile_message_item_menu_reply"
      }, /*#__PURE__*/React__default["default"].createElement(ui_Label.Label, {
        type: ui_Label.LabelTypography.SUBTITLE_1,
        color: ((_b = message === null || message === void 0 ? void 0 : message.parentMessageId) !== null && _b !== void 0 ? _b : 0) > 0 ? ui_Label.LabelColors.ONBACKGROUND_4 : ui_Label.LabelColors.ONBACKGROUND_1
      }, stringSet.MESSAGE_MENU__REPLY), /*#__PURE__*/React__default["default"].createElement(ui_Icon["default"], {
        type: ui_Icon.IconTypes.REPLY,
        fillColor: ((_c = message === null || message === void 0 ? void 0 : message.parentMessageId) !== null && _c !== void 0 ? _c : 0) > 0 ? ui_Icon.IconColors.ON_BACKGROUND_4 : ui_Icon.IconColors.PRIMARY,
        width: "24px",
        height: "24px"
      })), showMenuItemThread && /*#__PURE__*/React__default["default"].createElement(ui_ContextMenu.MenuItem, {
        className: "sendbird-message__mobile-context-menu-item menu-item-reply",
        onClick: function () {
          hideMenu();
          onReplyInThread === null || onReplyInThread === void 0 ? void 0 : onReplyInThread({
            message: message
          });
        },
        dataSbId: "ui_mobile_message_item_menu_thread"
      }, /*#__PURE__*/React__default["default"].createElement(ui_Label.Label, {
        type: ui_Label.LabelTypography.SUBTITLE_1,
        color: ui_Label.LabelColors.ONBACKGROUND_1
      }, stringSet.MESSAGE_MENU__THREAD), /*#__PURE__*/React__default["default"].createElement(ui_Icon["default"], {
        type: ui_Icon.IconTypes.THREAD,
        fillColor: ui_Icon.IconColors.PRIMARY,
        width: "24px",
        height: "24px"
      })), showMenuItemEdit && /*#__PURE__*/React__default["default"].createElement(ui_ContextMenu.MenuItem, {
        className: "sendbird-message__mobile-context-menu-item menu-item-edit",
        onClick: function () {
          hideMenu();
          showEdit(true);
        },
        dataSbId: "ui_mobile_message_item_menu_edit"
      }, /*#__PURE__*/React__default["default"].createElement(ui_Label.Label, {
        type: ui_Label.LabelTypography.SUBTITLE_1,
        color: ui_Label.LabelColors.ONBACKGROUND_1
      }, stringSet.MESSAGE_MENU__EDIT), /*#__PURE__*/React__default["default"].createElement(ui_Icon["default"], {
        type: ui_Icon.IconTypes.EDIT,
        fillColor: ui_Icon.IconColors.PRIMARY,
        width: "24px",
        height: "24px"
      })), showMenuItemResend && /*#__PURE__*/React__default["default"].createElement(ui_ContextMenu.MenuItem, {
        className: "sendbird-message__mobile-context-menu-item menu-item-resend",
        onClick: function () {
          hideMenu();
          resendMessage(message);
        },
        dataSbId: "ui_mobile_message_item_menu_resend"
      }, /*#__PURE__*/React__default["default"].createElement(ui_Label.Label, {
        type: ui_Label.LabelTypography.SUBTITLE_1,
        color: ui_Label.LabelColors.ONBACKGROUND_1
      }, stringSet.MESSAGE_MENU__RESEND), /*#__PURE__*/React__default["default"].createElement(ui_Icon["default"], {
        type: ui_Icon.IconTypes.REFRESH,
        fillColor: ui_Icon.IconColors.PRIMARY,
        width: "24px",
        height: "24px"
      })), showMenuItemDeleteFinal && /*#__PURE__*/React__default["default"].createElement(ui_ContextMenu.MenuItem, {
        className: "sendbird-message__mobile-context-menu-item menu-item-delete",
        onClick: function () {
          if (index.isFailedMessage(message)) {
            hideMenu();
            deleteMessage === null || deleteMessage === void 0 ? void 0 : deleteMessage(message);
          } else if (!disableDelete) {
            hideMenu();
            showRemove === null || showRemove === void 0 ? void 0 : showRemove(true);
          }
        },
        disable: disableDelete,
        dataSbId: "ui_mobile_message_item_menu_delete"
      }, /*#__PURE__*/React__default["default"].createElement(ui_Label.Label, {
        type: ui_Label.LabelTypography.SUBTITLE_1,
        color: disableDelete ? ui_Label.LabelColors.ONBACKGROUND_4 : ui_Label.LabelColors.ONBACKGROUND_1
      }, stringSet.MESSAGE_MENU__DELETE), /*#__PURE__*/React__default["default"].createElement(ui_Icon["default"], {
        type: ui_Icon.IconTypes.DELETE,
        fillColor: disableDelete ? ui_Icon.IconColors.ON_BACKGROUND_4 : ui_Icon.IconColors.PRIMARY,
        width: "24px",
        height: "24px"
      })), showMenuItemDownload && /*#__PURE__*/React__default["default"].createElement(ui_ContextMenu.MenuItem, {
        className: "sendbird-message__mobile-context-menu-item menu-item-save",
        onClick: function () {
          hideMenu();
        },
        dataSbId: "ui_mobile_message_item_menu_download_file"
      }, /*#__PURE__*/React__default["default"].createElement("a", {
        className: "sendbird-message__contextmenu--hyperlink",
        rel: "noopener noreferrer",
        href: fileMessage === null || fileMessage === void 0 ? void 0 : fileMessage.url,
        target: "_blank"
      }, /*#__PURE__*/React__default["default"].createElement(ui_Label.Label, {
        type: ui_Label.LabelTypography.SUBTITLE_1,
        color: ui_Label.LabelColors.ONBACKGROUND_1
      }, stringSet.MESSAGE_MENU__SAVE), /*#__PURE__*/React__default["default"].createElement(ui_Icon["default"], {
        type: ui_Icon.IconTypes.DOWNLOAD,
        fillColor: ui_Icon.IconColors.PRIMARY,
        width: "24px",
        height: "24px"
      }))));
    }
  });
};

var EMOJI_SIZE = 38;
var MobileBottomSheet = function (props) {
  var _a, _b, _c;
  var hideMenu = props.hideMenu,
    channel = props.channel,
    emojiContainer = props.emojiContainer,
    message = props.message,
    replyType = props.replyType,
    userId = props.userId,
    resendMessage = props.resendMessage,
    deleteMessage = props.deleteMessage,
    toggleReaction = props.toggleReaction,
    isReactionEnabled = props.isReactionEnabled,
    showEdit = props.showEdit,
    showRemove = props.showRemove,
    deleteMenuState = props.deleteMenuState,
    setQuoteMessage = props.setQuoteMessage,
    onReplyInThread = props.onReplyInThread,
    _d = props.isOpenedFromThread,
    isOpenedFromThread = _d === void 0 ? false : _d;
  var isByMe = ((_a = message === null || message === void 0 ? void 0 : message.sender) === null || _a === void 0 ? void 0 : _a.userId) === userId;
  var stringSet = LocalizationContext.useLocalization().stringSet;
  var globalStore = useSendbirdStateContext.useSendbirdStateContext();
  var isOnline = globalStore.config.isOnline;
  var showMenuItemCopy = index.isUserMessage(message);
  var showMenuItemEdit = index.isUserMessage(message) && index.isSentMessage(message) && isByMe;
  var showMenuItemResend = isOnline && index.isFailedMessage(message) && (message === null || message === void 0 ? void 0 : message.isResendable) && isByMe;
  var showMenuItemDelete = !index.isPendingMessage(message) && isByMe;
  var showMenuItemDeleteByState = isByMe && (deleteMenuState === undefined || deleteMenuState !== 'HIDE');
  var showMenuItemDeleteFinal = showMenuItemDeleteByState && showMenuItemDelete;
  var disableDelete = deleteMenuState !== undefined && deleteMenuState === 'DISABLE' || ((_c = (_b = message === null || message === void 0 ? void 0 : message.threadInfo) === null || _b === void 0 ? void 0 : _b.replyCount) !== null && _c !== void 0 ? _c : 0) > 0;
  var showMenuItemDownload = index.isSentMessage(message) && index.isFileMessage(message) && !index.isVoiceMessage(message);
  var showReaction = !index.isFailedMessage(message) && !index.isPendingMessage(message) && isReactionEnabled;
  var showMenuItemReply = replyType === 'QUOTE_REPLY' && !index.isFailedMessage(message) && !index.isPendingMessage(message) && (channel === null || channel === void 0 ? void 0 : channel.isGroupChannel()) && !(channel === null || channel === void 0 ? void 0 : channel.isBroadcast);
  var showMenuItemThread = replyType === 'THREAD' && !isOpenedFromThread && !index.isFailedMessage(message) && !index.isPendingMessage(message) && !index.isThreadMessage(message) && (channel === null || channel === void 0 ? void 0 : channel.isGroupChannel()) && !(channel === null || channel === void 0 ? void 0 : channel.isBroadcast);
  var disableReaction = (message === null || message === void 0 ? void 0 : message.parentMessageId) > 0;
  var fileMessage = message;
  var maxEmojisPerRow = Math.floor(window.innerWidth / EMOJI_SIZE) - 1;
  var _e = React.useState(false),
    showEmojisOnly = _e[0],
    setShowEmojisOnly = _e[1];
  var emojis = index.getEmojiListAll(emojiContainer);
  // calculate max emojis that can be shown in screen
  var visibleEmojis = showEmojisOnly ? emojis : emojis === null || emojis === void 0 ? void 0 : emojis.slice(0, maxEmojisPerRow);
  var canShowMoreEmojis = emojis.length > maxEmojisPerRow;
  return /*#__PURE__*/React__default["default"].createElement(ui_BottomSheet, {
    onBackdropClick: hideMenu
  }, /*#__PURE__*/React__default["default"].createElement("div", {
    className: "sendbird-message__bottomsheet"
  }, showReaction && /*#__PURE__*/React__default["default"].createElement("div", {
    className: "sendbird-message__bottomsheet-reactions"
  }, /*#__PURE__*/React__default["default"].createElement("ul", {
    className: "sendbird-message__bottomsheet-reaction-bar"
  }, /*#__PURE__*/React__default["default"].createElement("div", {
    className: "\n                    sendbird-message__bottomsheet-reaction-bar__row\n                    ".concat(showEmojisOnly ? 'sendbird-message__bottomsheet-reaction-bar__all' : '', "\n                  ")
  }, visibleEmojis.map(function (emoji) {
    var _a, _b, _c;
    var isReacted = (_c = (_b = (_a = message === null || message === void 0 ? void 0 : message.reactions) === null || _a === void 0 ? void 0 : _a.filter(function (reaction) {
      return reaction.key === emoji.key;
    })[0]) === null || _b === void 0 ? void 0 : _b.userIds) === null || _c === void 0 ? void 0 : _c.some(function (reactorId) {
      return reactorId === userId;
    });
    return /*#__PURE__*/React__default["default"].createElement(ui_ReactionButton, {
      key: emoji.key,
      width: "".concat(EMOJI_SIZE, "px"),
      height: "".concat(EMOJI_SIZE, "px"),
      selected: isReacted,
      onClick: function () {
        hideMenu();
        toggleReaction(message, emoji.key, isReacted);
      },
      dataSbId: "ui_mobile_emoji_reactions_menu_".concat(emoji.key)
    }, /*#__PURE__*/React__default["default"].createElement(ui_ImageRenderer["default"], {
      url: (emoji === null || emoji === void 0 ? void 0 : emoji.url) || '',
      width: "28px",
      height: "28px",
      placeHolder: function (style) {
        return /*#__PURE__*/React__default["default"].createElement("div", {
          style: style
        }, /*#__PURE__*/React__default["default"].createElement(ui_Icon["default"], {
          type: ui_Icon.IconTypes.QUESTION,
          fillColor: ui_Icon.IconColors.ON_BACKGROUND_3,
          width: "28px",
          height: "28px"
        }));
      }
    }));
  }), canShowMoreEmojis && !showEmojisOnly && /*#__PURE__*/React__default["default"].createElement(ui_ReactionButton, {
    key: "emoji_more",
    width: "38px",
    height: "38px",
    onClick: function () {
      setShowEmojisOnly(true);
    },
    dataSbId: "ui_mobile_emoji_reactions_menu_emojiadd"
  }, /*#__PURE__*/React__default["default"].createElement(ui_ImageRenderer["default"], {
    url: '',
    width: "28px",
    height: "28px",
    placeHolder: function (style) {
      return /*#__PURE__*/React__default["default"].createElement("div", {
        style: style
      }, /*#__PURE__*/React__default["default"].createElement(ui_Icon["default"], {
        type: ui_Icon.IconTypes.EMOJI_MORE,
        fillColor: ui_Icon.IconColors.ON_BACKGROUND_3,
        width: "28px",
        height: "28px"
      }));
    }
  }))))), !showEmojisOnly && /*#__PURE__*/React__default["default"].createElement("div", {
    className: "sendbird-message__bottomsheet--actions"
  }, showMenuItemCopy && /*#__PURE__*/React__default["default"].createElement("div", {
    className: "sendbird-message__bottomsheet--action",
    onClick: function () {
      hideMenu();
      index.copyToClipboard(message === null || message === void 0 ? void 0 : message.message);
    }
  }, /*#__PURE__*/React__default["default"].createElement(ui_Icon["default"], {
    type: ui_Icon.IconTypes.COPY,
    fillColor: ui_Icon.IconColors.PRIMARY,
    width: "24px",
    height: "24px"
  }), /*#__PURE__*/React__default["default"].createElement(ui_Label.Label, {
    type: ui_Label.LabelTypography.SUBTITLE_1,
    color: ui_Label.LabelColors.ONBACKGROUND_1
  }, stringSet === null || stringSet === void 0 ? void 0 : stringSet.MESSAGE_MENU__COPY)), showMenuItemEdit && /*#__PURE__*/React__default["default"].createElement("div", {
    className: "sendbird-message__bottomsheet--action",
    onClick: function () {
      hideMenu();
      showEdit(true);
    }
  }, /*#__PURE__*/React__default["default"].createElement(ui_Icon["default"], {
    type: ui_Icon.IconTypes.EDIT,
    fillColor: ui_Icon.IconColors.PRIMARY,
    width: "24px",
    height: "24px"
  }), /*#__PURE__*/React__default["default"].createElement(ui_Label.Label, {
    type: ui_Label.LabelTypography.SUBTITLE_1,
    color: ui_Label.LabelColors.ONBACKGROUND_1
  }, stringSet === null || stringSet === void 0 ? void 0 : stringSet.MESSAGE_MENU__EDIT)), showMenuItemResend && /*#__PURE__*/React__default["default"].createElement("div", {
    className: "sendbird-message__bottomsheet--action",
    onClick: function () {
      hideMenu();
      resendMessage(message);
    }
  }, /*#__PURE__*/React__default["default"].createElement(ui_Icon["default"], {
    type: ui_Icon.IconTypes.REFRESH,
    fillColor: ui_Icon.IconColors.PRIMARY,
    width: "24px",
    height: "24px"
  }), /*#__PURE__*/React__default["default"].createElement(ui_Label.Label, {
    type: ui_Label.LabelTypography.SUBTITLE_1,
    color: ui_Label.LabelColors.ONBACKGROUND_1
  }, stringSet === null || stringSet === void 0 ? void 0 : stringSet.MESSAGE_MENU__RESEND)), showMenuItemReply && /*#__PURE__*/React__default["default"].createElement("div", {
    className: "sendbird-message__bottomsheet--action\n                      ".concat(disableReaction ? 'sendbird-message__bottomsheet--action-disabled' : '', "\n                    "),
    role: "menuitem",
    "aria-disabled": disableReaction ? true : false,
    onClick: function () {
      if (!disableReaction) {
        hideMenu();
        setQuoteMessage(message);
      }
    }
  }, /*#__PURE__*/React__default["default"].createElement(ui_Icon["default"], {
    type: ui_Icon.IconTypes.REPLY,
    fillColor: disableReaction ? ui_Icon.IconColors.ON_BACKGROUND_3 : ui_Icon.IconColors.PRIMARY,
    width: "24px",
    height: "24px"
  }), /*#__PURE__*/React__default["default"].createElement(ui_Label.Label, {
    type: ui_Label.LabelTypography.SUBTITLE_1,
    color: disableReaction ? ui_Label.LabelColors.ONBACKGROUND_4 : ui_Label.LabelColors.ONBACKGROUND_1
  }, stringSet === null || stringSet === void 0 ? void 0 : stringSet.MESSAGE_MENU__REPLY)), showMenuItemThread && /*#__PURE__*/React__default["default"].createElement("div", {
    className: "sendbird-message__bottomsheet--action",
    onClick: function () {
      hideMenu();
      onReplyInThread === null || onReplyInThread === void 0 ? void 0 : onReplyInThread({
        message: message
      });
    }
  }, /*#__PURE__*/React__default["default"].createElement(ui_Icon["default"], {
    type: ui_Icon.IconTypes.THREAD,
    fillColor: ui_Icon.IconColors.PRIMARY,
    width: "24px",
    height: "24px"
  }), /*#__PURE__*/React__default["default"].createElement(ui_Label.Label, {
    type: ui_Label.LabelTypography.SUBTITLE_1,
    color: ui_Label.LabelColors.ONBACKGROUND_1
  }, stringSet.MESSAGE_MENU__THREAD)), showMenuItemDeleteFinal && /*#__PURE__*/React__default["default"].createElement("div", {
    className: "sendbird-message__bottomsheet--action",
    onClick: function () {
      if (index.isFailedMessage(message)) {
        hideMenu();
        deleteMessage === null || deleteMessage === void 0 ? void 0 : deleteMessage(message);
      } else if (!disableDelete) {
        hideMenu();
        showRemove === null || showRemove === void 0 ? void 0 : showRemove(true);
      }
    }
  }, /*#__PURE__*/React__default["default"].createElement(ui_Icon["default"], {
    type: ui_Icon.IconTypes.DELETE,
    fillColor: disableDelete ? ui_Icon.IconColors.ON_BACKGROUND_4 : ui_Icon.IconColors.PRIMARY,
    width: "24px",
    height: "24px"
  }), /*#__PURE__*/React__default["default"].createElement(ui_Label.Label, {
    type: ui_Label.LabelTypography.SUBTITLE_1,
    color: disableDelete ? ui_Label.LabelColors.ONBACKGROUND_4 : ui_Label.LabelColors.ONBACKGROUND_1
  }, stringSet === null || stringSet === void 0 ? void 0 : stringSet.MESSAGE_MENU__DELETE)), showMenuItemDownload && /*#__PURE__*/React__default["default"].createElement("div", {
    className: "sendbird-message__bottomsheet--action",
    onClick: function () {
      hideMenu();
    }
  }, /*#__PURE__*/React__default["default"].createElement("a", {
    className: "sendbird-message__bottomsheet--hyperlink",
    rel: "noopener noreferrer",
    href: fileMessage === null || fileMessage === void 0 ? void 0 : fileMessage.url,
    target: "_blank"
  }, /*#__PURE__*/React__default["default"].createElement(ui_Icon["default"], {
    type: ui_Icon.IconTypes.DOWNLOAD,
    fillColor: ui_Icon.IconColors.PRIMARY,
    width: "24px",
    height: "24px"
  }), /*#__PURE__*/React__default["default"].createElement(ui_Label.Label, {
    type: ui_Label.LabelTypography.SUBTITLE_1,
    color: ui_Label.LabelColors.ONBACKGROUND_1
  }, stringSet === null || stringSet === void 0 ? void 0 : stringSet.MESSAGE_MENU__SAVE))))));
};

var MobileMenu = function (props) {
  var message = props.message,
    hideMenu = props.hideMenu,
    userId = props.userId,
    channel = props.channel,
    _a = props.isReactionEnabled,
    isReactionEnabled = _a === void 0 ? false : _a,
    isByMe = props.isByMe,
    replyType = props.replyType,
    disabled = props.disabled,
    deleteMenuState = props.deleteMenuState,
    showRemove = props.showRemove,
    showEdit = props.showEdit,
    resendMessage = props.resendMessage,
    deleteMessage = props.deleteMessage,
    setQuoteMessage = props.setQuoteMessage,
    emojiContainer = props.emojiContainer,
    toggleReaction = props.toggleReaction,
    parentRef = props.parentRef,
    onReplyInThread = props.onReplyInThread,
    isOpenedFromThread = props.isOpenedFromThread;
  return /*#__PURE__*/React__default["default"].createElement(React__default["default"].Fragment, null, isReactionEnabled ? /*#__PURE__*/React__default["default"].createElement(MobileBottomSheet, {
    channel: channel,
    message: message,
    hideMenu: hideMenu,
    isByMe: isByMe,
    userId: userId,
    replyType: replyType,
    disabled: disabled,
    showRemove: showRemove,
    showEdit: showEdit,
    deleteMenuState: deleteMenuState,
    resendMessage: resendMessage,
    deleteMessage: deleteMessage,
    setQuoteMessage: setQuoteMessage,
    emojiContainer: emojiContainer,
    toggleReaction: toggleReaction,
    isReactionEnabled: isReactionEnabled,
    onReplyInThread: onReplyInThread,
    isOpenedFromThread: isOpenedFromThread
  }) : /*#__PURE__*/React__default["default"].createElement(MobileContextMenu, {
    channel: channel,
    userId: userId,
    message: message,
    hideMenu: hideMenu,
    isByMe: isByMe,
    showEdit: showEdit,
    replyType: replyType,
    disabled: disabled,
    deleteMenuState: deleteMenuState,
    showRemove: showRemove,
    resendMessage: resendMessage,
    deleteMessage: deleteMessage,
    setQuoteMessage: setQuoteMessage,
    parentRef: parentRef,
    onReplyInThread: onReplyInThread,
    isOpenedFromThread: isOpenedFromThread
  }));
};

exports.MobileMenu = MobileMenu;
//# sourceMappingURL=index-e5e6d9b0.js.map
