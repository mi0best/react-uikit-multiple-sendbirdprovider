'use strict';

var React = require('react');
var Thread_components_ThreadListItem = require('./ThreadListItem.js');
var Thread_context = require('../context.js');
var useSendMultipleFilesMessage = require('../../useSendMultipleFilesMessage-d6a3d5cf.js');
var useSendbirdStateContext = require('../../useSendbirdStateContext.js');
var dateFns = require('date-fns');
var Message_context = require('../../Message/context.js');
require('../../tslib.es6-c74b513f.js');
require('../../index-3448df64.js');
require('../../index-e8928da6.js');
require('../../LocalizationContext-58b6ed7c.js');
require('../../stringSet-1539ac47.js');
require('../../ui/DateSeparator.js');
require('../../color-5bf5a8f5.js');
require('../../index-b5a9b4b7.js');
require('prop-types');
require('../../RemoveMessageModal-afc3e268.js');
require('../../ui/Modal.js');
require('react-dom');
require('../../utils-eb6d90e0.js');
require('../../index-54279ec2.js');
require('../../index-b8ba4548.js');
require('../../MediaQueryContext-6141d955.js');
require('../../ui/IconButton.js');
require('../../ui/Button.js');
require('../../types-d0d770c3.js');
require('../../ui/Icon.js');
require('../../stringFormatterUtils-92dbef3c.js');
require('../../index-dbe8dd84.js');
require('../../utils/message/getOutgoingMessageState.js');
require('../../index-bc6623d7.js');
require('../../_rollupPluginBabelHelpers-f5b0dfb9.js');
require('../../ui/Avatar.js');
require('../../ui/ImageRenderer.js');
require('../../uuid-9a117e16.js');
require('../../consts-f54b15c2.js');
require('../../Channel/components/SuggestedMentionList.js');
require('../../ChannelProvider-fc111e5f.js');
require('../../UserProfileContext-c6d7abb7.js');
require('../../const-c9e7a340.js');
require('../../utils-9193a195.js');
require('@sendbird/chat/message');
require('../../compareIds-28c6af62.js');
require('@sendbird/chat/groupChannel');
require('../../pubSub/topics.js');
require('../../resolvedReplyType-c4564ebe.js');
require('../../const-876980e8.js');
require('../../withSendbird.js');
require('../context/types.js');
require('@sendbird/chat');
require('../../ui/MessageInput.js');
require('../../index-cc2e05a4.js');
require('dompurify');
require('../../consts-b3c4f548.js');
require('../../consts-61d83828.js');
require('../../consts-b711321c.js');
require('../../tokenize-d5286fa8.js');
require('../../ui/ContextMenu.js');
require('../../ui/SortByRow.js');
require('../../ui/UserProfile.js');
require('../../sendbirdSelectors.js');
require('../../ui/MessageItemMenu.js');
require('../../types-feda9656.js');
require('../../ui/MessageItemReactionMenu.js');
require('../../ui/ReactionButton.js');
require('../../useLongPress-18b7af79.js');
require('../../index-520e12b8.js');
require('../../ui/Loader.js');
require('../../index-7627b546.js');
require('../../index-134e9852.js');
require('../../ui/EmojiReactions.js');
require('../../ui/ReactionBadge.js');
require('../../ui/BottomSheet.js');
require('../../ui/UserListItem.js');
require('../../ui/MutedAvatarOverlay.js');
require('../../ui/Checkbox.js');
require('../../ui/Tooltip.js');
require('../../ui/TooltipWrapper.js');
require('../../ui/TextMessageItemBody.js');
require('../../index-ce07a2a3.js');
require('../../ui/MentionLabel.js');
require('../../ui/LinkLabel.js');
require('../../ui/OGMessageItemBody.js');
require('../../ui/FileMessageItemBody.js');
require('../../ui/TextButton.js');
require('../../ui/ThumbnailMessageItemBody.js');
require('../../utils-93ca9d57.js');
require('../../ui/UnknownMessageItemBody.js');
require('../../ui/VoiceMessageItemBody.js');
require('../../ui/ProgressBar.js');
require('../../VoicePlayer/useVoicePlayer.js');
require('../../index-a95c4ab4.js');
require('../../VoiceRecorder/context.js');
require('../../ui/PlaybackTime.js');
require('../../index-e5e6d9b0.js');
require('../../useStatefulFileInfoList-c510792f.js');
require('../../Message/hooks/useDirtyGetMentions.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var React__default = /*#__PURE__*/_interopDefaultLegacy(React);

function ThreadList(_a) {
  var className = _a.className,
    renderMessage = _a.renderMessage,
    renderCustomSeparator = _a.renderCustomSeparator,
    scrollRef = _a.scrollRef,
    scrollBottom = _a.scrollBottom;
  var config = useSendbirdStateContext.useSendbirdStateContext().config;
  var replyType = config.replyType,
    userId = config.userId;
  var _b = Thread_context.useThreadContext(),
    currentChannel = _b.currentChannel,
    allThreadMessages = _b.allThreadMessages,
    localThreadMessages = _b.localThreadMessages;
  var MemorizedMessage = React.useMemo(function () {
    return function (_a) {
      var message = _a.message,
        chainTop = _a.chainTop,
        chainBottom = _a.chainBottom,
        hasSeparator = _a.hasSeparator;
      if (typeof renderMessage === 'function') {
        return renderMessage({
          message: message,
          chainTop: chainTop,
          chainBottom: chainBottom,
          hasSeparator: hasSeparator
        });
      }
      return null;
    };
  }, [renderMessage]);
  return /*#__PURE__*/React__default["default"].createElement("div", {
    className: "sendbird-thread-list ".concat(className)
  }, allThreadMessages.map(function (message, idx) {
    var _a;
    var isByMe = ((_a = message === null || message === void 0 ? void 0 : message.sender) === null || _a === void 0 ? void 0 : _a.userId) === userId;
    var prevMessage = allThreadMessages[idx - 1];
    var nextMessage = allThreadMessages[idx + 1];
    // eslint-disable-next-line no-constant-condition
    var _b = useSendMultipleFilesMessage.compareMessagesForGrouping(prevMessage, message, nextMessage, currentChannel, replyType) ,
      chainTop = _b[0],
      chainBottom = _b[1];
    var hasSeparator = !((prevMessage === null || prevMessage === void 0 ? void 0 : prevMessage.createdAt) > 0 && dateFns.isSameDay(message === null || message === void 0 ? void 0 : message.createdAt, prevMessage === null || prevMessage === void 0 ? void 0 : prevMessage.createdAt));
    var handleScroll = function () {
      var current = scrollRef === null || scrollRef === void 0 ? void 0 : scrollRef.current;
      if (current) {
        var bottom = current.scrollHeight - current.scrollTop - current.offsetHeight;
        if (scrollBottom < bottom) {
          current.scrollTop += bottom - scrollBottom;
        }
      }
    };
    return /*#__PURE__*/React__default["default"].createElement(Message_context.MessageProvider, {
      message: message,
      isByMe: isByMe,
      key: message === null || message === void 0 ? void 0 : message.messageId
    }, MemorizedMessage({
      message: message,
      chainTop: chainTop,
      chainBottom: chainBottom,
      hasSeparator: hasSeparator
    }) || /*#__PURE__*/React__default["default"].createElement(Thread_components_ThreadListItem, {
      message: message,
      chainTop: chainTop,
      chainBottom: chainBottom,
      hasSeparator: hasSeparator,
      renderCustomSeparator: renderCustomSeparator,
      handleScroll: handleScroll
    }));
  }), localThreadMessages.map(function (message, idx) {
    var _a;
    var isByMe = ((_a = message === null || message === void 0 ? void 0 : message.sender) === null || _a === void 0 ? void 0 : _a.userId) === userId;
    var prevMessage = localThreadMessages[idx - 1];
    var nextMessage = localThreadMessages[idx + 1];
    // eslint-disable-next-line no-constant-condition
    var _b = useSendMultipleFilesMessage.compareMessagesForGrouping(prevMessage, message, nextMessage, currentChannel, replyType) ,
      chainTop = _b[0],
      chainBottom = _b[1];
    var hasSeparator = !((prevMessage === null || prevMessage === void 0 ? void 0 : prevMessage.createdAt) > 0 && dateFns.isSameDay(message === null || message === void 0 ? void 0 : message.createdAt, prevMessage === null || prevMessage === void 0 ? void 0 : prevMessage.createdAt));
    var handleScroll = function () {
      var current = scrollRef === null || scrollRef === void 0 ? void 0 : scrollRef.current;
      if (current) {
        var bottom = current.scrollHeight - current.scrollTop - current.offsetHeight;
        if (scrollBottom < bottom) {
          current.scrollTop += bottom - scrollBottom;
        }
      }
    };
    return /*#__PURE__*/React__default["default"].createElement(Message_context.MessageProvider, {
      message: message,
      isByMe: isByMe,
      key: message === null || message === void 0 ? void 0 : message.messageId
    }, MemorizedMessage({
      message: message,
      chainTop: chainTop,
      chainBottom: chainBottom,
      hasSeparator: hasSeparator
    }) || /*#__PURE__*/React__default["default"].createElement(Thread_components_ThreadListItem, {
      message: message,
      hasSeparator: false,
      renderCustomSeparator: renderCustomSeparator,
      handleScroll: handleScroll
    }));
  }));
}

module.exports = ThreadList;
//# sourceMappingURL=ThreadList.js.map
