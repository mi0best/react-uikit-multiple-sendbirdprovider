{"version":3,"file":"ThreadListItem.js","sources":["../../../../src/modules/Thread/components/ThreadList/ThreadListItemContent.tsx","../../../../src/modules/Thread/components/ThreadList/ThreadListItem.tsx"],"sourcesContent":["import React, { useContext, useRef, useState } from 'react';\nimport { EmojiContainer } from '@sendbird/chat';\nimport { FileMessage, MultipleFilesMessage, UserMessage } from '@sendbird/chat/message';\nimport { GroupChannel } from '@sendbird/chat/groupChannel';\n\nimport './ThreadListItemContent.scss';\n\nimport { ReplyType } from '../../../../types';\nimport ContextMenu, { MenuItems } from '../../../../ui/ContextMenu';\nimport Avatar from '../../../../ui/Avatar';\nimport { UserProfileContext } from '../../../../lib/UserProfileContext';\nimport UserProfile from '../../../../ui/UserProfile';\nimport MessageItemMenu from '../../../../ui/MessageItemMenu';\nimport MessageItemReactionMenu from '../../../../ui/MessageItemReactionMenu';\nimport Label, { LabelTypography, LabelColors } from '../../../../ui/Label';\nimport {\n  getClassName,\n  getSenderName,\n  getUIKitMessageType,\n  getUIKitMessageTypes,\n  isMultipleFilesMessage,\n  isOGMessage,\n  isTextMessage,\n  isThumbnailMessage,\n  isVoiceMessage,\n  SendableMessageType,\n} from '../../../../utils';\nimport MessageStatus from '../../../../ui/MessageStatus';\nimport EmojiReactions from '../../../../ui/EmojiReactions';\nimport format from 'date-fns/format';\nimport { useLocalization } from '../../../../lib/LocalizationContext';\nimport TextMessageItemBody from '../../../../ui/TextMessageItemBody';\nimport OGMessageItemBody from '../../../../ui/OGMessageItemBody';\nimport FileMessageItemBody from '../../../../ui/FileMessageItemBody';\nimport ThumbnailMessageItemBody from '../../../../ui/ThumbnailMessageItemBody';\nimport UnknownMessageItemBody from '../../../../ui/UnknownMessageItemBody';\nimport VoiceMessageItemBody from '../../../../ui/VoiceMessageItemBody';\nimport { useMediaQueryContext } from '../../../../lib/MediaQueryContext';\nimport useLongPress from '../../../../hooks/useLongPress';\nimport MobileMenu from '../../../../ui/MobileMenu';\nimport useSendbirdStateContext from '../../../../hooks/useSendbirdStateContext';\nimport MultipleFilesMessageItemBody, { ThreadMessageKind } from '../../../../ui/MultipleFilesMessageItemBody';\nimport { useThreadMessageKindKeySelector } from '../../../Channel/context/hooks/useThreadMessageKindKeySelector';\nimport { useStatefulFileInfoList } from '../../../Channel/context/hooks/useStatefulFileInfoList';\nimport { useThreadContext } from '../../context/ThreadProvider';\n\nexport interface ThreadListItemContentProps {\n  className?: string;\n  userId: string;\n  channel: GroupChannel;\n  message: SendableMessageType;\n  disabled?: boolean;\n  chainTop?: boolean;\n  chainBottom?: boolean;\n  isMentionEnabled?: boolean;\n  isReactionEnabled?: boolean;\n  disableQuoteMessage?: boolean;\n  replyType?: ReplyType;\n  nicknamesMap?: Map<string, string>;\n  emojiContainer?: EmojiContainer;\n  showEdit?: (bool: boolean) => void;\n  showRemove?: (bool: boolean) => void;\n  showFileViewer?: (bool: boolean) => void;\n  resendMessage?: (message: SendableMessageType) => void;\n  toggleReaction?: (message: SendableMessageType, reactionKey: string, isReacted: boolean) => void;\n  onReplyInThread?: (props: { message: SendableMessageType }) => void;\n}\n\nexport default function ThreadListItemContent({\n  className,\n  userId,\n  channel,\n  message,\n  disabled = false,\n  chainTop = false,\n  chainBottom = false,\n  isMentionEnabled = false,\n  isReactionEnabled = false,\n  disableQuoteMessage = false,\n  replyType,\n  nicknamesMap,\n  emojiContainer,\n  showEdit,\n  showRemove,\n  showFileViewer,\n  resendMessage,\n  toggleReaction,\n  onReplyInThread,\n}: ThreadListItemContentProps): React.ReactElement {\n  const messageTypes = getUIKitMessageTypes();\n  const { isMobile } = useMediaQueryContext();\n  const { dateLocale } = useLocalization();\n  const { config, eventHandlers } = useSendbirdStateContext?.() || {};\n  const onPressUserProfileHandler = eventHandlers?.reaction?.onPressUserProfile;\n  const [supposedHover, setSupposedHover] = useState(false);\n  const { disableUserProfile, renderUserProfile } = useContext(UserProfileContext);\n  const { deleteMessage } = useThreadContext();\n  const avatarRef = useRef(null);\n\n  const isByMe = (userId === (message as SendableMessageType)?.sender?.userId)\n    || ((message as SendableMessageType)?.sendingStatus === 'pending')\n    || ((message as SendableMessageType)?.sendingStatus === 'failed');\n  const useReplying = !!((replyType === 'QUOTE_REPLY' || replyType === 'THREAD')\n    && message?.parentMessageId && message?.parentMessage\n    && !disableQuoteMessage\n  );\n  const supposedHoverClassName = supposedHover ? 'sendbird-mouse-hover' : '';\n  const isReactionEnabledInChannel = isReactionEnabled && !channel?.isEphemeral;\n  const isOgMessageEnabledInGroupChannel = channel.isGroupChannel() && config.groupChannel.enableOgtag;\n\n  // Mobile\n  const mobileMenuRef = useRef(null);\n  const [showMobileMenu, setShowMobileMenu] = useState(false);\n  const longPress = useLongPress({\n    onLongPress: () => {\n      if (isMobile) {\n        setShowMobileMenu(true);\n      }\n    },\n  }, {\n    shouldPreventDefault: false,\n  });\n\n  const threadMessageKindKey = useThreadMessageKindKeySelector({\n    threadMessageKind: ThreadMessageKind.CHILD,\n    isMobile,\n  });\n  // For MultipleFilesMessage only.\n  const statefulFileInfoList = useStatefulFileInfoList(message);\n\n  return (\n    <div\n      className={`sendbird-thread-list-item-content ${className} ${isByMe ? 'outgoing' : 'incoming'}`}\n      ref={mobileMenuRef}\n    >\n      <div className={`sendbird-thread-list-item-content__left ${isReactionEnabledInChannel ? 'use-reaction' : ''} ${isByMe ? 'outgoing' : 'incoming'}`}>\n        {(!isByMe && !chainBottom) && (\n          <ContextMenu\n            menuTrigger={(toggleDropdown) => (\n              <Avatar\n                className=\"sendbird-thread-list-item-content__left__avatar\"\n                src={channel?.members?.find((member) => member?.userId === message?.sender?.userId)?.profileUrl || message?.sender?.profileUrl || ''}\n                ref={avatarRef}\n                width=\"28px\"\n                height=\"28px\"\n                onClick={() => {\n                  if (!disableUserProfile) {\n                    toggleDropdown?.();\n                  }\n                }}\n              />\n            )}\n            menuItems={(closeDropdown) => (\n              <MenuItems\n                parentRef={avatarRef}\n                parentContainRef={avatarRef}\n                closeDropdown={closeDropdown}\n                style={{ paddingTop: '0px', paddingBottom: '0px' }}\n              >\n                {renderUserProfile\n                  ? renderUserProfile({ user: message?.sender, close: closeDropdown, currentUserId: userId })\n                  : <UserProfile user={message?.sender} onSuccess={closeDropdown} />\n                }\n              </MenuItems>\n            )}\n          />\n        )}\n        {(isByMe && !isMobile) && (\n          <div\n            className={`sendbird-thread-list-item-content-menu ${isReactionEnabledInChannel ? 'use-reaction' : ''\n            } ${isByMe ? 'outgoing' : 'incoming'\n            } ${supposedHoverClassName}`}\n          >\n            <MessageItemMenu\n              className=\"sendbird-thread-list-item-content-menu__normal-menu\"\n              channel={channel}\n              message={message as SendableMessageType}\n              isByMe={isByMe}\n              replyType={replyType}\n              disabled={disabled}\n              showEdit={showEdit}\n              showRemove={showRemove}\n              resendMessage={resendMessage}\n              setSupposedHover={setSupposedHover}\n              onReplyInThread={onReplyInThread}\n            />\n            {isReactionEnabledInChannel && (\n              <MessageItemReactionMenu\n                className=\"sendbird-thread-list-item-content-menu__reaction-menu\"\n                message={message as SendableMessageType}\n                userId={userId}\n                emojiContainer={emojiContainer}\n                toggleReaction={toggleReaction}\n                setSupposedHover={setSupposedHover}\n              />\n            )}\n          </div>\n        )}\n      </div>\n      <div\n        className=\"sendbird-thread-list-item-content__middle\"\n        {...(isMobile) ? { ...longPress } : {}}\n      >\n        {(!isByMe && !chainTop && !useReplying) && (\n          <Label\n            className=\"sendbird-thread-list-item-content__middle__sender-name\"\n            type={LabelTypography.CAPTION_2}\n            color={LabelColors.ONBACKGROUND_2}\n          >\n            {\n              channel?.members?.find((member) => member?.userId === message?.sender?.userId)?.nickname\n              || getSenderName(message as SendableMessageType)\n              // TODO: Divide getting profileUrl logic to utils\n            }\n          </Label>\n        )}\n        <div className={getClassName(['sendbird-thread-list-item-content__middle__body-container'])} >\n          {/* message status component */}\n          {(isByMe && !chainBottom) && (\n            <div className={getClassName(['sendbird-thread-list-item-content__middle__body-container__created-at', 'left', supposedHoverClassName])}>\n              <div className=\"sendbird-thread-list-item-content__middle__body-container__created-at__component-container\">\n                <MessageStatus\n                  message={message as SendableMessageType}\n                  channel={channel}\n                />\n              </div>\n            </div>\n          )}\n          {/* message item body components */}\n          {isOgMessageEnabledInGroupChannel && isOGMessage(message as UserMessage)\n            ? (<OGMessageItemBody\n              className=\"sendbird-thread-list-item-content__middle__message-item-body\"\n              message={message as UserMessage}\n              isByMe={isByMe}\n              isMentionEnabled={isMentionEnabled}\n              isReactionEnabled={isReactionEnabledInChannel}\n            />\n            ) : isTextMessage(message as UserMessage) && (\n            <TextMessageItemBody\n              className=\"sendbird-thread-list-item-content__middle__message-item-body\"\n              message={message as UserMessage}\n              isByMe={isByMe}\n              isMentionEnabled={isMentionEnabled}\n              isReactionEnabled={isReactionEnabledInChannel}\n            />\n            )}\n          {isVoiceMessage(message as FileMessage) && (\n            <VoiceMessageItemBody\n              className=\"sendbird-thread-list-item-content__middle__message-item-body\"\n              message={message as FileMessage}\n              channelUrl={channel?.url}\n              isByMe={isByMe}\n              isReactionEnabled={isReactionEnabledInChannel}\n            />\n          )}\n          {(getUIKitMessageType((message as FileMessage)) === messageTypes.FILE) && (\n            <FileMessageItemBody\n              className=\"sendbird-thread-list-item-content__middle__message-item-body\"\n              message={message as FileMessage}\n              isByMe={isByMe}\n              isReactionEnabled={isReactionEnabledInChannel}\n              truncateLimit={isByMe ? 18 : 14}\n            />\n          )}\n          {\n            isMultipleFilesMessage(message) && (\n              <MultipleFilesMessageItemBody\n                className=\"sendbird-thread-list-item-content__middle__message-item-body\"\n                message={message as MultipleFilesMessage}\n                isByMe={isByMe}\n                isReactionEnabled={isReactionEnabled}\n                threadMessageKindKey={threadMessageKindKey}\n                statefulFileInfoList={statefulFileInfoList}\n              />\n            )\n          }\n          {(isThumbnailMessage(message as FileMessage)) && (\n            <ThumbnailMessageItemBody\n              className=\"sendbird-thread-list-item-content__middle__message-item-body\"\n              message={message as FileMessage}\n              isByMe={isByMe}\n              isReactionEnabled={isReactionEnabledInChannel}\n              showFileViewer={showFileViewer}\n              style={{\n                width: isMobile ? '100%' : '200px',\n                height: '148px',\n              }}\n            />\n          )}\n          {(getUIKitMessageType((message as FileMessage)) === messageTypes.UNKNOWN) && (\n            <UnknownMessageItemBody\n              className=\"sendbird-thread-list-item-content__middle__message-item-body\"\n              message={message}\n              isByMe={isByMe}\n              isReactionEnabled={isReactionEnabledInChannel}\n            />\n          )}\n          {/* reactions */}\n          {(isReactionEnabledInChannel && message?.reactions?.length > 0) && (\n            <div className={getClassName([\n              'sendbird-thread-list-item-content-reactions',\n              (\n                !isByMe\n                || isThumbnailMessage(message as FileMessage)\n                || (isOgMessageEnabledInGroupChannel && isOGMessage(message as UserMessage))\n                || isMultipleFilesMessage(message)\n              ) ? '' : 'primary',\n            ])}>\n              <EmojiReactions\n                userId={userId}\n                message={message as SendableMessageType}\n                channel={channel}\n                isByMe={isByMe}\n                emojiContainer={emojiContainer}\n                memberNicknamesMap={nicknamesMap}\n                toggleReaction={toggleReaction}\n                onPressUserProfile={onPressUserProfileHandler}\n              />\n            </div>\n          )}\n          {(!isByMe && !chainBottom) && (\n            <Label\n              className={getClassName(['sendbird-thread-list-item-content__middle__body-container__created-at', 'right', supposedHoverClassName])}\n              type={LabelTypography.CAPTION_3}\n              color={LabelColors.ONBACKGROUND_2}\n            >\n              {format(message?.createdAt || 0, 'p', {\n                locale: dateLocale,\n              })}\n            </Label>\n          )}\n        </div>\n      </div>\n      <div\n        className={`sendbird-thread-list-item-content__right ${chainTop ? 'chain-top' : ''\n        } ${isByMe ? 'outgoing' : 'incoming'}`}\n      >\n        {(!isByMe && !isMobile) && (\n          <div className={`sendbird-thread-list-item-content-menu ${supposedHoverClassName}`}>\n            {isReactionEnabledInChannel && (\n              <MessageItemReactionMenu\n                className=\"sendbird-thread-list-item-content-menu__reaction-menu\"\n                message={message as SendableMessageType}\n                userId={userId}\n                emojiContainer={emojiContainer}\n                toggleReaction={toggleReaction}\n                setSupposedHover={setSupposedHover}\n              />\n            )}\n            <MessageItemMenu\n              className=\"sendbird-thread-list-item-content-menu__normal-menu\"\n              channel={channel}\n              message={message as SendableMessageType}\n              isByMe={isByMe}\n              replyType={replyType}\n              disabled={disabled}\n              showRemove={showRemove}\n              resendMessage={resendMessage}\n              setSupposedHover={setSupposedHover}\n              onReplyInThread={onReplyInThread}\n            />\n          </div>\n        )}\n      </div>\n      {showMobileMenu && (\n        <MobileMenu\n          parentRef={mobileMenuRef}\n          channel={channel}\n          message={message}\n          userId={userId}\n          replyType={replyType}\n          hideMenu={() => {\n            setShowMobileMenu(false);\n          }}\n          isReactionEnabled={isReactionEnabled}\n          isByMe={isByMe}\n          emojiContainer={emojiContainer}\n          showEdit={showEdit}\n          showRemove={showRemove}\n          toggleReaction={toggleReaction}\n          isOpenedFromThread\n          deleteMessage={deleteMessage}\n        />\n      )}\n    </div>\n  );\n}\n","import React, { useMemo, useState, useRef, useEffect, useLayoutEffect } from 'react';\nimport format from 'date-fns/format';\nimport { FileMessage } from '@sendbird/chat/message';\n\nimport { useLocalization } from '../../../../lib/LocalizationContext';\nimport DateSeparator from '../../../../ui/DateSeparator';\nimport Label, { LabelTypography, LabelColors } from '../../../../ui/Label';\nimport RemoveMessage from '../RemoveMessageModal';\nimport FileViewer from '../../../../ui/FileViewer';\nimport { useThreadContext } from '../../context/ThreadProvider';\nimport useSendbirdStateContext from '../../../../hooks/useSendbirdStateContext';\nimport SuggestedMentionList from '../../../Channel/components/SuggestedMentionList';\nimport MessageInput from '../../../../ui/MessageInput';\nimport { ThreadListStateTypes } from '../../types';\nimport { MessageInputKeys } from '../../../../ui/MessageInput/const';\nimport ThreadListItemContent from './ThreadListItemContent';\nimport { Role } from '../../../../lib/types';\nimport { useDirtyGetMentions } from '../../../Message/hooks/useDirtyGetMentions';\nimport { getIsReactionEnabled } from '../../../../utils/getIsReactionEnabled';\nimport { SendableMessageType } from '../../../../utils';\n\nexport interface ThreadListItemProps {\n  className?: string;\n  message: SendableMessageType;\n  chainTop?: boolean;\n  chainBottom?: boolean;\n  hasSeparator?: boolean;\n  renderCustomSeparator?: (props: { message: SendableMessageType }) => React.ReactElement;\n  handleScroll?: () => void;\n}\n\nexport default function ThreadListItem({\n  className,\n  message,\n  chainTop,\n  chainBottom,\n  hasSeparator,\n  renderCustomSeparator,\n  handleScroll,\n}: ThreadListItemProps): React.ReactElement {\n  const { stores, config } = useSendbirdStateContext();\n  const {\n    isReactionEnabled,\n    isMentionEnabled,\n    isOnline,\n    replyType,\n    userMention,\n    logger,\n  } = config;\n  const userId = stores?.userStore?.user?.userId;\n  const { dateLocale } = useLocalization();\n  const threadContext = useThreadContext?.();\n  const {\n    currentChannel,\n    nicknamesMap,\n    emojiContainer,\n    toggleReaction,\n    threadListState,\n    updateMessage,\n    resendMessage,\n    deleteMessage,\n    isMuted,\n    isChannelFrozen,\n  } = threadContext;\n  const openingMessage = threadContext?.message;\n\n  const [showEdit, setShowEdit] = useState(false);\n  const [showRemove, setShowRemove] = useState(false);\n  const [showFileViewer, setShowFileViewer] = useState(false);\n  const usingReaction = getIsReactionEnabled({\n    globalLevel: isReactionEnabled,\n    isSuper: currentChannel.isSuper,\n    isBroadcast: currentChannel.isBroadcast,\n  });\n\n  // Move to message\n  const messageScrollRef = useRef(null);\n  useLayoutEffect(() => {\n    if (openingMessage?.messageId === message?.messageId && messageScrollRef?.current) {\n      messageScrollRef.current?.scrollIntoView({ block: 'center', inline: 'center' });\n    }\n  }, [openingMessage, messageScrollRef?.current]);\n\n  // reactions\n  useLayoutEffect(() => {\n    handleScroll?.();\n  }, [showEdit, message?.reactions?.length]);\n\n  // mention\n  const editMessageInputRef = useRef(null);\n  const [mentionNickname, setMentionNickname] = useState('');\n  const [mentionedUsers, setMentionedUsers] = useState([]);\n  const [mentionedUserIds, setMentionedUserIds] = useState([]);\n  const [messageInputEvent, setMessageInputEvent] = useState(null);\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [mentionSuggestedUsers, setMentionSuggestedUsers] = useState([]);\n  const displaySuggestedMentionList = isOnline\n    && isMentionEnabled\n    && mentionNickname.length > 0\n    && !isMuted\n    && !(isChannelFrozen && !(currentChannel.myRole === Role.OPERATOR));\n\n  const mentionNodes = useDirtyGetMentions({ ref: editMessageInputRef }, { logger });\n  const ableMention = mentionNodes?.length < userMention?.maxMentionCount;\n\n  useEffect(() => {\n    setMentionedUsers(mentionedUsers.filter(({ userId }) => {\n      const i = mentionedUserIds.indexOf(userId);\n      if (i < 0) {\n        return false;\n      } else {\n        mentionedUserIds.splice(i, 1);\n        return true;\n      }\n    }));\n  }, [mentionedUserIds]);\n\n  // edit input\n  const disabled = !(threadListState === ThreadListStateTypes.INITIALIZED)\n    || !isOnline\n    || isMuted\n    || isChannelFrozen;\n\n  // memorize\n  const MemorizedSeparator = useMemo(() => {\n    if (typeof renderCustomSeparator === 'function') {\n      return renderCustomSeparator?.({ message });\n    }\n  }, [message, renderCustomSeparator]);\n\n  // Edit message\n  if (showEdit && message.isUserMessage()) {\n    return (\n      <>\n        {\n          displaySuggestedMentionList && (\n            <SuggestedMentionList\n              targetNickname={mentionNickname}\n              inputEvent={messageInputEvent}\n              // renderUserMentionItem={renderUserMentionItem}\n              onUserItemClick={(user) => {\n                if (user) {\n                  setMentionedUsers([...mentionedUsers, user]);\n                }\n                setMentionNickname('');\n                setSelectedUser(user);\n                setMessageInputEvent(null);\n              }}\n              onFocusItemChange={() => {\n                setMessageInputEvent(null);\n              }}\n              onFetchUsers={(users) => {\n                setMentionSuggestedUsers(users);\n              }}\n              ableAddMention={ableMention}\n              maxMentionCount={userMention?.maxMentionCount}\n              maxSuggestionCount={userMention?.maxSuggestionCount}\n            />\n          )\n        }\n        <MessageInput\n          isEdit\n          channel={currentChannel}\n          disabled={disabled}\n          ref={editMessageInputRef}\n          mentionSelectedUser={selectedUser}\n          isMentionEnabled={isMentionEnabled}\n          message={message}\n          onStartTyping={() => {\n            currentChannel?.startTyping?.();\n          }}\n          onUpdateMessage={({ messageId, message, mentionTemplate }) => {\n            updateMessage({\n              messageId,\n              message,\n              mentionedUsers,\n              mentionTemplate,\n            });\n            setShowEdit(false);\n            currentChannel?.endTyping?.();\n          }}\n          onCancelEdit={() => {\n            setMentionNickname('');\n            setMentionedUsers([]);\n            setMentionedUserIds([]);\n            setMentionSuggestedUsers([]);\n            setShowEdit(false);\n            currentChannel?.endTyping?.();\n          }}\n          onUserMentioned={(user) => {\n            if (selectedUser?.userId === user?.userId) {\n              setSelectedUser(null);\n              setMentionNickname('');\n            }\n          }}\n          onMentionStringChange={(mentionText) => {\n            setMentionNickname(mentionText);\n          }}\n          onMentionedUserIdsUpdated={(userIds) => {\n            setMentionedUserIds(userIds);\n          }}\n          onKeyDown={(e) => {\n            if (displaySuggestedMentionList && mentionSuggestedUsers?.length > 0\n              && ((e.key === MessageInputKeys.Enter && ableMention) || e.key === MessageInputKeys.ArrowUp || e.key === MessageInputKeys.ArrowDown)\n            ) {\n              setMessageInputEvent(e);\n              return true;\n            }\n            return false;\n          }}\n        />\n      </>\n    );\n  }\n\n  return (\n    <div\n      ref={messageScrollRef}\n      className={`sendbird-thread-list-item ${className}`}\n    >\n      {/* date separator */}\n      {\n        hasSeparator && message?.createdAt && (MemorizedSeparator || (\n          <DateSeparator>\n            <Label\n              type={LabelTypography.CAPTION_2}\n              color={LabelColors.ONBACKGROUND_2}\n            >\n              {format(message?.createdAt, 'MMM dd, yyyy', { locale: dateLocale })}\n            </Label>\n          </DateSeparator>\n        ))\n      }\n      <ThreadListItemContent\n        userId={userId}\n        channel={currentChannel}\n        message={message}\n        chainTop={chainTop}\n        chainBottom={chainBottom}\n        isReactionEnabled={usingReaction}\n        isMentionEnabled={isMentionEnabled}\n        disableQuoteMessage\n        replyType={replyType}\n        nicknamesMap={nicknamesMap}\n        emojiContainer={emojiContainer}\n        resendMessage={resendMessage}\n        showRemove={setShowRemove}\n        showFileViewer={setShowFileViewer}\n        toggleReaction={toggleReaction}\n        showEdit={setShowEdit}\n      />\n      {/* modal */}\n      {showRemove && (\n        <RemoveMessage\n          message={message}\n          onCancel={() => setShowRemove(false)}\n        />\n      )}\n      {showFileViewer && (\n        <FileViewer\n          message={message as FileMessage}\n          isByMe={message?.sender?.userId === userId}\n          onClose={() => setShowFileViewer(false)}\n          onDelete={() => {\n            deleteMessage(message);\n            setShowFileViewer(false);\n          }}\n        />\n      )}\n    </div>\n  );\n}\n"],"names":["ThreadListItemContent","_a","className","userId","channel","message","_g","disabled","_h","chainTop","_j","chainBottom","_k","isMentionEnabled","_l","isReactionEnabled","_m","disableQuoteMessage","replyType","nicknamesMap","emojiContainer","showEdit","showRemove","showFileViewer","resendMessage","toggleReaction","onReplyInThread","messageTypes","getUIKitMessageTypes","isMobile","useMediaQueryContext","dateLocale","useLocalization","_o","useSendbirdStateContext","config","eventHandlers","onPressUserProfileHandler","_b","reaction","onPressUserProfile","_p","useState","supposedHover","setSupposedHover","_q","useContext","UserProfileContext","disableUserProfile","renderUserProfile","deleteMessage","useThreadContext","avatarRef","useRef","isByMe","sender","_c","sendingStatus","useReplying","parentMessageId","parentMessage","supposedHoverClassName","isReactionEnabledInChannel","isEphemeral","isOgMessageEnabledInGroupChannel","isGroupChannel","groupChannel","enableOgtag","mobileMenuRef","_r","showMobileMenu","setShowMobileMenu","longPress","useLongPress","onLongPress","shouldPreventDefault","threadMessageKindKey","useThreadMessageKindKeySelector","threadMessageKind","ThreadMessageKind","CHILD","statefulFileInfoList","useStatefulFileInfoList","React","createElement","concat","ref","ContextMenu","menuTrigger","toggleDropdown","Avatar","src","members","find","member","profileUrl","width","height","onClick","menuItems","closeDropdown","MenuItems","parentRef","parentContainRef","style","paddingTop","paddingBottom","user","close","currentUserId","UserProfile","onSuccess","MessageItemMenu","MessageItemReactionMenu","_extends","Label","type","LabelTypography","CAPTION_2","color","LabelColors","ONBACKGROUND_2","_e","_d","nickname","getSenderName","getClassName","MessageStatus","isOGMessage","OGMessageItemBody","isTextMessage","TextMessageItemBody","isVoiceMessage","VoiceMessageItemBody","channelUrl","url","getUIKitMessageType","FILE","FileMessageItemBody","truncateLimit","isMultipleFilesMessage","MultipleFilesMessageItemBody","isThumbnailMessage","ThumbnailMessageItemBody","UNKNOWN","UnknownMessageItemBody","_f","reactions","length","EmojiReactions","memberNicknamesMap","CAPTION_3","format","createdAt","locale","MobileMenu","hideMenu","isOpenedFromThread","ThreadListItem","hasSeparator","renderCustomSeparator","handleScroll","stores","isOnline","userMention","logger","userStore","threadContext","currentChannel","threadListState","updateMessage","isMuted","isChannelFrozen","openingMessage","setShowEdit","setShowRemove","setShowFileViewer","usingReaction","getIsReactionEnabled","globalLevel","isSuper","isBroadcast","messageScrollRef","useLayoutEffect","messageId","current","scrollIntoView","block","inline","editMessageInputRef","mentionNickname","setMentionNickname","mentionedUsers","setMentionedUsers","mentionedUserIds","setMentionedUserIds","messageInputEvent","setMessageInputEvent","selectedUser","setSelectedUser","mentionSuggestedUsers","setMentionSuggestedUsers","displaySuggestedMentionList","myRole","Role","OPERATOR","mentionNodes","useDirtyGetMentions","ableMention","maxMentionCount","useEffect","filter","i","indexOf","splice","ThreadListStateTypes","INITIALIZED","MemorizedSeparator","useMemo","isUserMessage","Fragment","SuggestedMentionList","targetNickname","inputEvent","onUserItemClick","__spreadArray","onFocusItemChange","onFetchUsers","users","ableAddMention","maxSuggestionCount","MessageInput","isEdit","mentionSelectedUser","onStartTyping","startTyping","onUpdateMessage","mentionTemplate","endTyping","onCancelEdit","onUserMentioned","onMentionStringChange","mentionText","onMentionedUserIdsUpdated","userIds","onKeyDown","e","key","MessageInputKeys","Enter","ArrowUp","ArrowDown","DateSeparator","RemoveMessage","onCancel","FileViewer","onClose","onDelete"],"mappings":"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"}