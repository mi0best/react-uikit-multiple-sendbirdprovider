{"version":3,"file":"WebAudioUtils-36803ab2.js","sources":["../../src/hooks/VoiceRecorder/WebAudioUtils.ts"],"sourcesContent":["// Thanks to https://codesandbox.io/s/media-recorder-api-downsampling-16k-mp3-encode-using-lame-js-forked-n1pblw\nimport { VOICE_RECORDER_AUDIO_SAMPLE_RATE } from '../../utils/consts';\nimport { WavHeader, Mp3Encoder } from '../../_externals/lamejs/lame.all';\n\nfunction encodeMp3(arrayBuffer: ArrayBuffer): WavHeader {\n  const wav = WavHeader.readHeader(new DataView(arrayBuffer));\n  const dataView = new Int16Array(arrayBuffer, wav.dataOffset, wav.dataLen / 2);\n  const mp3Encoder = new Mp3Encoder(wav.channels, wav.sampleRate, 128);\n  const maxSamples = 1152;\n\n  const samplesLeft = (wav.channels === 1) ? dataView : new Int16Array(wav.dataLen / (2 * wav.channels));\n  const samplesRight = (wav.channels === 2) ? new Int16Array(wav.dataLen / (2 * wav.channels)) : undefined;\n\n  if (wav.channels > 1) {\n    for (let j = 0; j < samplesLeft.length; j++) {\n      samplesLeft[j] = dataView[j * 2];\n      samplesRight[j] = dataView[j * 2 + 1];\n    }\n  }\n\n  const dataBuffer = [];\n  let remaining = samplesLeft.length;\n  for (let i = 0; remaining >= maxSamples; i += maxSamples) {\n    const left = samplesLeft.subarray(i, i + maxSamples);\n    let right;\n    if (samplesRight) {\n      right = samplesRight.subarray(i, i + maxSamples);\n    }\n    const mp3buf = mp3Encoder.encodeBuffer(left, right);\n    dataBuffer.push(new Int8Array(mp3buf));\n    remaining -= maxSamples;\n  }\n\n  const mp3Lastbuf = mp3Encoder.flush();\n  dataBuffer.push(new Int8Array(mp3Lastbuf));\n  return dataBuffer;\n}\n\n// Convert audioFile to arrayBuffer, because Mp3Encoder requires a parameter of ArrayBuffer type\nfunction downsampleToWav(file: File, callback: (buffer: ArrayBuffer) => void): void {\n  // Browser compatibility\n  // https://caniuse.com/?search=AudioContext\n  const audioCtx = new AudioContext({ sampleRate: VOICE_RECORDER_AUDIO_SAMPLE_RATE });\n  const fileReader = new FileReader();\n  fileReader.onload = function (ev) {\n    // Decode audio\n    audioCtx.decodeAudioData(ev.target.result as ArrayBuffer, (buffer) => {\n      // this is where you down sample the audio, usually is 44100 samples per second\n      const usingWebkit = !window.OfflineAudioContext;\n      const offlineAudioCtx = new OfflineAudioContext(1, 16000 * buffer.duration, 16000);\n\n      const soundSource = offlineAudioCtx.createBufferSource();\n      soundSource.buffer = buffer;\n      soundSource.connect(offlineAudioCtx.destination);\n\n      const reader = new FileReader();\n      reader.onload = function () {\n        const renderCompleteHandler = (evt): void => {\n          const renderedBuffer = usingWebkit ? evt.renderedBuffer : evt;\n          const buffer = bufferToWav(renderedBuffer, renderedBuffer.length);\n          if (callback) {\n            callback(buffer);\n          }\n        };\n        if (usingWebkit) {\n          offlineAudioCtx.oncomplete = renderCompleteHandler;\n          offlineAudioCtx.startRendering();\n        } else {\n          offlineAudioCtx\n            .startRendering()\n            .then(renderCompleteHandler)\n            // eslint-disable-next-line no-console\n            .catch((err) => console.warn(err));\n        }\n      };\n      reader.readAsArrayBuffer(file);\n      soundSource.start(0);\n    });\n  };\n  fileReader.readAsArrayBuffer(file);\n}\n\nfunction bufferToWav(abuffer, len) {\n  const numOfChan = abuffer.numberOfChannels;\n  const length = len * numOfChan * 2 + 44;\n  const buffer = new ArrayBuffer(length);\n  const view = new DataView(buffer);\n  const channels = [];\n  let i = 0;\n  let sample;\n  let offset = 0;\n  let pos = 0;\n\n  // write WAVE header\n  setUint32(0x46464952); // \"RIFF\"\n  setUint32(length - 8); // file length - 8\n  setUint32(0x45564157); // \"WAVE\"\n  setUint32(0x20746d66); // \"fmt \" chunk\n  setUint32(16); // length = 16\n  setUint16(1); // PCM (uncompressed)\n  setUint16(numOfChan);\n  setUint32(abuffer.sampleRate);\n  setUint32(abuffer.sampleRate * 2 * numOfChan); // avg. bytes/sec\n  setUint16(numOfChan * 2); // block-align\n  setUint16(16); // 16-bit (hardcoded in this demo)\n  setUint32(0x61746164); // \"data\" - chunk\n  setUint32(length - pos - 4); // chunk length\n  // write interleaved data\n  for (i = 0; i < abuffer.numberOfChannels; i++)\n    channels.push(abuffer.getChannelData(i));\n\n  while (pos < length) {\n    for (i = 0; i < numOfChan; i++) {\n      // interleave channels\n      sample = Math.max(-1, Math.min(1, channels[i][offset])); // clamp\n      sample = (0.5 + sample < 0 ? sample * 32768 : sample * 32767) | 0; // scale to 16-bit signed int\n      view.setInt16(pos, sample, true); // write 16-bit sample\n      pos += 2;\n    }\n    offset++; // next source sample\n  }\n\n  return buffer;\n\n  function setUint16(data) {\n    view.setUint16(pos, data, true);\n    pos += 2;\n  }\n\n  function setUint32(data) {\n    view.setUint32(pos, data, true);\n    pos += 4;\n  }\n}\n\nexport { downsampleToWav, encodeMp3 };\n"],"names":["encodeMp3","arrayBuffer","wav","WavHeader","readHeader","DataView","dataView","Int16Array","dataOffset","dataLen","mp3Encoder","Mp3Encoder","channels","sampleRate","maxSamples","samplesLeft","samplesRight","undefined","j","length","dataBuffer","remaining","i","left","subarray","right","mp3buf","encodeBuffer","push","Int8Array","mp3Lastbuf","flush","downsampleToWav","file","callback","audioCtx","AudioContext","VOICE_RECORDER_AUDIO_SAMPLE_RATE","fileReader","FileReader","onload","ev","decodeAudioData","target","result","buffer","usingWebkit","window","OfflineAudioContext","offlineAudioCtx","duration","soundSource","createBufferSource","connect","destination","reader","renderCompleteHandler","evt","renderedBuffer","bufferToWav","oncomplete","startRendering","then","catch","err","console","warn","readAsArrayBuffer","start","abuffer","len","numOfChan","numberOfChannels","ArrayBuffer","view","sample","offset","pos","setUint32","setUint16","getChannelData","Math","max","min","setInt16","data"],"mappings":"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"}