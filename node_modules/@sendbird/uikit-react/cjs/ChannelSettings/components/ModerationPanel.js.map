{"version":3,"file":"ModerationPanel.js","sources":["../../../../src/modules/ChannelSettings/components/ModerationPanel/OperatorsModal.tsx","../../../../src/modules/ChannelSettings/components/ModerationPanel/AddOperatorsModal.tsx","../../../../src/modules/ChannelSettings/components/ModerationPanel/OperatorList.tsx","../../../../src/modules/ChannelSettings/components/ModerationPanel/BannedUsersModal.tsx","../../../../src/modules/ChannelSettings/components/ModerationPanel/BannedUserList.tsx","../../../../src/modules/ChannelSettings/components/ModerationPanel/MutedMembersModal.tsx","../../../../src/modules/ChannelSettings/components/ModerationPanel/MutedMemberList.tsx","../../../../src/modules/ChannelSettings/components/ModerationPanel/index.tsx"],"sourcesContent":["import React, {\n  ReactElement,\n  useContext,\n  useEffect,\n  useState,\n} from 'react';\n\nimport Modal from '../../../../ui/Modal';\nimport UserListItem from '../../../../ui/UserListItem';\nimport IconButton from '../../../../ui/IconButton';\nimport Icon, { IconTypes, IconColors } from '../../../../ui/Icon';\nimport ContextMenu, { MenuItem, MenuItems } from '../../../../ui/ContextMenu';\n\nimport { useChannelSettingsContext } from '../../context/ChannelSettingsProvider';\nimport useSendbirdStateContext from '../../../../hooks/useSendbirdStateContext';\nimport { LocalizationContext } from '../../../../lib/LocalizationContext';\n\ninterface Props { onCancel?(): void }\n\nexport default function OperatorsModal({ onCancel }: Props): ReactElement {\n  const [operators, setOperators] = useState([]);\n  const [operatorQuery, setOperatorQuery] = useState(null);\n\n  const { channel } = useChannelSettingsContext();\n  const state = useSendbirdStateContext();\n  const currentUserId = state?.config?.userId;\n  const { stringSet } = useContext(LocalizationContext);\n\n  useEffect(() => {\n    const operatorListQuery = channel?.createOperatorListQuery({\n      limit: 20,\n    });\n    operatorListQuery.next().then((operators) => {\n      setOperators(operators);\n    });\n    setOperatorQuery(operatorListQuery);\n  }, []);\n  return (\n    <div>\n      <Modal\n        isFullScreenOnMobile\n        hideFooter\n        titleText={stringSet.CHANNEL_SETTING__OPERATORS__TITLE_ALL}\n        onCancel={onCancel}\n      >\n        <div\n          className=\"sendbird-more-members__popup-scroll\"\n          onScroll={(e) => {\n            const { hasNext } = operatorQuery;\n            const target = e.target as HTMLTextAreaElement;\n            const fetchMore = (\n              target.clientHeight + target.scrollTop === target.scrollHeight\n            );\n\n            if (hasNext && fetchMore) {\n              operatorQuery.next().then((o) => {\n                setOperators([\n                  ...operators,\n                  ...o,\n                ]);\n              });\n            }\n          }}\n        >\n          {operators.map((member) => (\n            <UserListItem\n              currentUser={currentUserId}\n              user={member}\n              key={member.userId}\n              action={({ parentRef, actionRef }) => (\n                member?.userId !== currentUserId && (\n                  <ContextMenu\n                    menuTrigger={(toggleDropdown) => (\n                      <IconButton\n                        className=\"sendbird-user-message__more__menu\"\n                        width=\"32px\"\n                        height=\"32px\"\n                        onClick={toggleDropdown}\n                      >\n                        <Icon\n                          width=\"24px\"\n                          height=\"24px\"\n                          type={IconTypes.MORE}\n                          fillColor={IconColors.CONTENT_INVERSE}\n                        />\n                      </IconButton>\n                    )}\n                    menuItems={(closeDropdown) => (\n                      <MenuItems\n                        parentContainRef={parentRef}\n                        parentRef={actionRef} // for catching location(x, y) of MenuItems\n                        closeDropdown={closeDropdown}\n                        openLeft\n                      >\n                        <MenuItem\n                          onClick={() => {\n                            channel?.removeOperators([member.userId]).then(() => {\n                              setOperators(operators.filter(({ userId }) => {\n                                return userId !== member.userId;\n                              }));\n                            });\n                            closeDropdown();\n                          }}\n                          dataSbId=\"channel_setting_operator_context_menu_unregister_unregister_operator\"\n                        >\n                          {stringSet.CHANNEL_SETTING__MODERATION__UNREGISTER_OPERATOR}\n                        </MenuItem>\n                      </MenuItems>\n                    )}\n                  />\n                )\n              )}\n            />\n          ))}\n        </div>\n      </Modal>\n    </div>\n  );\n}\n","import React, {\n  ReactElement,\n  useEffect,\n  useState,\n  useContext,\n} from 'react';\n\nimport { LocalizationContext } from '../../../../lib/LocalizationContext';\nimport Modal from '../../../../ui/Modal';\nimport Label, {\n  LabelTypography,\n  LabelColors,\n} from '../../../../ui/Label';\nimport { ButtonTypes } from '../../../../ui/Button';\nimport UserListItem from '../../../../ui/UserListItem';\nimport { useChannelSettingsContext } from '../../context/ChannelSettingsProvider';\nimport { OperatorFilter } from '@sendbird/chat/groupChannel';\n\ninterface Props {\n  onCancel(): void;\n  onSubmit(members: Array<string>): void;\n}\n\nexport default function AddOperatorsModal({\n  onCancel,\n  onSubmit,\n}: Props): ReactElement {\n  const [members, setMembers] = useState([]);\n  const [selectedMembers, setSelectedMembers] = useState({});\n  const [memberQuery, setMemberQuery] = useState(null);\n  const { stringSet } = useContext(LocalizationContext);\n\n  const { channel } = useChannelSettingsContext();\n\n  useEffect(() => {\n    const memberListQuery = channel?.createMemberListQuery({\n      operatorFilter: OperatorFilter.NONOPERATOR,\n      limit: 20,\n    });\n    memberListQuery.next().then((members) => {\n      setMembers(members);\n    });\n    setMemberQuery(memberListQuery);\n  }, []);\n\n  const selectedCount = Object.keys(selectedMembers).filter((m) => selectedMembers[m]).length;\n  return (\n    <div>\n      <Modal\n        isFullScreenOnMobile\n        type={ButtonTypes.PRIMARY}\n        submitText={stringSet.CHANNEL_SETTING__OPERATORS__ADD_BUTTON}\n        onCancel={onCancel}\n        onSubmit={() => {\n          const members = Object.keys(selectedMembers).filter((m) => selectedMembers[m]);\n          channel?.addOperators(members).then(() => {\n            onSubmit(members);\n          });\n        }}\n        titleText={stringSet.CHANNEL_SETTING__MEMBERS__SELECT_TITLE}\n      >\n        <Label\n          color={(selectedCount > 0) ? LabelColors.PRIMARY : LabelColors.ONBACKGROUND_3}\n          type={LabelTypography.CAPTION_1}\n        >\n          {`${selectedCount} ${stringSet.MODAL__INVITE_MEMBER__SELECTED}`}\n        </Label>\n        <div\n          className=\"sendbird-more-members__popup-scroll\"\n          onScroll={(e) => {\n            const { hasNext } = memberQuery;\n            const target = e.target as HTMLTextAreaElement;\n            const fetchMore = (\n              target.clientHeight + target.scrollTop === target.scrollHeight\n            );\n            if (hasNext && fetchMore) {\n              memberQuery.next().then((o) => {\n                setMembers([\n                  ...members,\n                  ...o,\n                ]);\n              });\n            }\n          }}\n        >\n          {\n            members.map((member) => (\n              <UserListItem\n                checkBox\n                checked={selectedMembers[member.userId]}\n                isOperator={member?.role === 'operator'}\n                disabled={member?.role === 'operator'}\n                onChange={\n                  (event) => {\n                    const modifiedSelectedMembers = {\n                      ...selectedMembers,\n                      [event.target.id]: event.target.checked,\n                    };\n                    if (!event.target.checked) {\n                      delete modifiedSelectedMembers[event.target.id];\n                    }\n                    setSelectedMembers(modifiedSelectedMembers);\n                  }\n                }\n                user={member}\n                key={member.userId}\n              />\n            ))\n          }\n        </div>\n      </Modal>\n    </div>\n  );\n}\n","import React, {\n  ReactElement,\n  useEffect,\n  useState,\n  useCallback,\n  useContext,\n} from 'react';\n\nimport { LocalizationContext } from '../../../../lib/LocalizationContext';\nimport Button, { ButtonTypes, ButtonSizes } from '../../../../ui/Button';\nimport IconButton from '../../../../ui/IconButton';\nimport Icon, { IconTypes, IconColors } from '../../../../ui/Icon';\nimport ContextMenu, { MenuItem, MenuItems } from '../../../../ui/ContextMenu';\n\nimport UserListItem from '../UserListItem';\nimport OperatorsModal from './OperatorsModal';\nimport AddOperatorsModal from './AddOperatorsModal';\nimport useSendbirdStateContext from '../../../../hooks/useSendbirdStateContext';\nimport { useChannelSettingsContext } from '../../context/ChannelSettingsProvider';\n\nexport const OperatorList = (): ReactElement => {\n  const [operators, setOperators] = useState([]);\n  const [showMore, setShowMore] = useState(false);\n  const [showAdd, setShowAdd] = useState(false);\n  const [hasNext, setHasNext] = useState(false);\n  const { stringSet } = useContext(LocalizationContext);\n\n  const state = useSendbirdStateContext();\n  const { channel } = useChannelSettingsContext();\n\n  const userId = state?.config?.userId;\n\n  useEffect(() => {\n    if (!channel) {\n      setOperators([]);\n      return;\n    }\n\n    const operatorListQuery = channel?.createOperatorListQuery({\n      limit: 10,\n    });\n    operatorListQuery.next().then((operators) => {\n      setOperators(operators);\n      setHasNext(operatorListQuery.hasNext);\n    });\n  }, [channel]);\n\n  const refreshList = useCallback(\n    () => {\n      if (!channel) {\n        setOperators([]);\n        return;\n      }\n      const operatorListQuery = channel?.createOperatorListQuery({\n        limit: 10,\n      });\n      operatorListQuery.next().then((operators) => {\n        setOperators(operators);\n        setHasNext(operatorListQuery.hasNext);\n      });\n    },\n    [channel],\n  );\n\n  return (\n    <>\n      {\n        operators.map((operator) => (\n          <UserListItem\n            key={operator.userId}\n            user={operator}\n            currentUser={userId}\n            action={({ actionRef }) => {\n              if (operator?.userId === userId) {\n                return null;\n              }\n              return (\n                <ContextMenu\n                  menuTrigger={(toggleDropdown) => (\n                    <IconButton\n                      className=\"sendbird-user-message__more__menu\"\n                      width=\"32px\"\n                      height=\"32px\"\n                      onClick={toggleDropdown}\n                    >\n                      <Icon\n                        width=\"24px\"\n                        height=\"24px\"\n                        type={IconTypes.MORE}\n                        fillColor={IconColors.CONTENT_INVERSE}\n                      />\n                    </IconButton>\n                  )}\n                  menuItems={(closeDropdown) => (\n                    <MenuItems\n                      parentRef={actionRef}\n                      closeDropdown={closeDropdown}\n                      openLeft\n                    >\n                      <MenuItem\n                        onClick={() => {\n                          channel?.removeOperators([operator.userId]).then(() => {\n                            setOperators(operators.filter(({ userId }) => (\n                              userId !== operator.userId\n                            )));\n                          });\n                          closeDropdown();\n                        }}\n                        dataSbId=\"channel_setting_operator_context_menu_unregister_operator\"\n                      >\n                        {stringSet.CHANNEL_SETTING__MODERATION__UNREGISTER_OPERATOR}\n                      </MenuItem>\n                    </MenuItems>\n                  )}\n                />\n              );\n            }}\n          />\n        ))\n      }\n      <div\n        className=\"sendbird-channel-settings-accordion__footer\"\n      >\n        <Button\n          type={ButtonTypes.SECONDARY}\n          size={ButtonSizes.SMALL}\n          onClick={() => {\n            setShowAdd(true);\n          }}\n        >\n          {stringSet.CHANNEL_SETTING__OPERATORS__TITLE_ADD}\n        </Button>\n        {\n          hasNext && (\n            <Button\n              type={ButtonTypes.SECONDARY}\n              size={ButtonSizes.SMALL}\n              onClick={() => {\n                setShowMore(true);\n              }}\n            >\n              {stringSet.CHANNEL_SETTING__OPERATORS__TITLE_ALL}\n            </Button>\n          )\n        }\n      </div>\n      {\n        showMore && (\n          <OperatorsModal onCancel={() => {\n            setShowMore(false);\n            refreshList();\n          }} />\n        )\n      }\n      {\n        showAdd && (\n          <AddOperatorsModal\n            onCancel={() => setShowAdd(false)}\n            onSubmit={() => {\n              refreshList();\n              setShowAdd(false);\n            }}\n          />\n        )\n      }\n    </>\n  );\n};\n\nexport default OperatorList;\n","import React, {\n  ReactElement,\n  useEffect,\n  useState,\n} from 'react';\n\nimport Modal from '../../../../ui/Modal';\nimport UserListItem from '../../../../ui/UserListItem';\nimport IconButton from '../../../../ui/IconButton';\nimport Icon, { IconTypes, IconColors } from '../../../../ui/Icon';\nimport ContextMenu, { MenuItem, MenuItems } from '../../../../ui/ContextMenu';\n\nimport { noop } from '../../../../utils/utils';\nimport { useChannelSettingsContext } from '../../context/ChannelSettingsProvider';\nimport { useLocalization } from '../../../../lib/LocalizationContext';\n\ninterface Props {\n  onCancel(): void;\n}\n\nexport default function BannedUsersModal({\n  onCancel,\n}: Props): ReactElement {\n  const [members, setMembers] = useState([]);\n  const [memberQuery, setMemberQuery] = useState(null);\n  const { channel } = useChannelSettingsContext();\n  const { stringSet } = useLocalization();\n\n  useEffect(() => {\n    const bannedUserListQuery = channel?.createBannedUserListQuery();\n    bannedUserListQuery.next().then((users) => {\n      setMembers(users);\n    });\n    setMemberQuery(bannedUserListQuery);\n  }, []);\n  return (\n    <div>\n      <Modal\n        isFullScreenOnMobile\n        hideFooter\n        onCancel={() => onCancel()}\n        onSubmit={noop}\n        titleText={stringSet.CHANNEL_SETTING__MUTED_MEMBERS__TITLE}\n      >\n        <div\n          className=\"sendbird-more-members__popup-scroll\"\n          onScroll={(e) => {\n            const { hasNext } = memberQuery;\n            const target = e.target as HTMLTextAreaElement;\n            const fetchMore = (\n              target.clientHeight + target.scrollTop === target.scrollHeight\n            );\n\n            if (hasNext && fetchMore) {\n              memberQuery.next().then((o) => {\n                setMembers([\n                  ...members,\n                  ...o,\n                ]);\n              });\n            }\n          }}\n        >\n          { members.map((member) => (\n            <UserListItem\n              user={member}\n              key={member.userId}\n              action={({ parentRef, actionRef }) => (\n                <ContextMenu\n                  menuTrigger={(toggleDropdown) => (\n                    <IconButton\n                      className=\"sendbird-user-message__more__menu\"\n                      width=\"32px\"\n                      height=\"32px\"\n                      onClick={toggleDropdown}\n                    >\n                      <Icon\n                        width=\"24px\"\n                        height=\"24px\"\n                        type={IconTypes.MORE}\n                        fillColor={IconColors.CONTENT_INVERSE}\n                      />\n                    </IconButton>\n                  )}\n                  menuItems={(closeDropdown) => (\n                    <MenuItems\n                      parentContainRef={parentRef}\n                      parentRef={actionRef} // for catching location(x, y) of MenuItems\n                      closeDropdown={closeDropdown}\n                      openLeft\n                    >\n                      <MenuItem\n                        onClick={() => {\n                          channel?.unbanUser(member).then(() => {\n                            closeDropdown();\n                            setMembers(members.filter(m => {\n                              return (m.userId !== member.userId);\n                            }));\n                          });\n                        }}\n                        dataSbId=\"channel_setting_banned_user_context_menu_ban\"\n                      >\n                        {stringSet.CHANNEL_SETTING__MODERATION__BAN}\n                      </MenuItem>\n                    </MenuItems>\n                  )}\n                />\n              )\n              }\n            />\n          ))}\n        </div>\n      </Modal>\n    </div>\n  );\n}\n","import React, {\n  ReactElement,\n  useEffect,\n  useState,\n  useCallback,\n  useContext,\n} from 'react';\nimport { BannedUserListQueryParams } from '@sendbird/chat';\n\nimport Button, { ButtonTypes, ButtonSizes } from '../../../../ui/Button';\nimport\nLabel, {\n  LabelTypography,\n  LabelColors,\n} from '../../../../ui/Label';\nimport IconButton from '../../../../ui/IconButton';\nimport Icon, { IconTypes, IconColors } from '../../../../ui/Icon';\nimport ContextMenu, { MenuItem, MenuItems } from '../../../../ui/ContextMenu';\n\nimport UserListItem from '../UserListItem';\nimport BannedUsersModal from './BannedUsersModal';\nimport { useChannelSettingsContext } from '../../context/ChannelSettingsProvider';\nimport { LocalizationContext } from '../../../../lib/LocalizationContext';\n\nexport const BannedMemberList = (): ReactElement => {\n  const [members, setMembers] = useState([]);\n  const [hasNext, setHasNext] = useState(false);\n  const [showModal, setShowModal] = useState(false);\n\n  const { stringSet } = useContext(LocalizationContext);\n  const { channel } = useChannelSettingsContext();\n\n  const bannedUserListQueryParams: BannedUserListQueryParams = { limit: 10 };\n  useEffect(() => {\n    if (!channel) {\n      setMembers([]);\n      return;\n    }\n    const bannedUserListQuery = channel?.createBannedUserListQuery(bannedUserListQueryParams);\n    bannedUserListQuery.next().then((users) => {\n      setMembers(users);\n      setHasNext(bannedUserListQuery.hasNext);\n    });\n  }, [channel]);\n\n  const refreshList = useCallback(() => {\n    if (!channel) {\n      setMembers([]);\n      return;\n    }\n    const bannedUserListQuery = channel?.createBannedUserListQuery(bannedUserListQueryParams);\n    bannedUserListQuery.next().then((users) => {\n      setMembers(users);\n      setHasNext(bannedUserListQuery.hasNext);\n    });\n  }, [channel]);\n  return (\n    <>\n      {\n        members.map((member) => (\n          <UserListItem\n            key={member.userId}\n            user={member}\n            action={({ actionRef, parentRef }) => {\n              return (\n                <ContextMenu\n                  menuTrigger={(toggleDropdown) => (\n                    <IconButton\n                      className=\"sendbird-user-message__more__menu\"\n                      width=\"32px\"\n                      height=\"32px\"\n                      onClick={toggleDropdown}\n                    >\n                      <Icon\n                        width=\"24px\"\n                        height=\"24px\"\n                        type={IconTypes.MORE}\n                        fillColor={IconColors.CONTENT_INVERSE}\n                      />\n                    </IconButton>\n                  )}\n                  menuItems={(closeDropdown) => (\n                    <MenuItems\n                      parentContainRef={parentRef}\n                      parentRef={actionRef} // for catching location(x, y) of MenuItems\n                      closeDropdown={closeDropdown}\n                      openLeft\n                    >\n                      <MenuItem\n                        onClick={() => {\n                          channel?.unbanUser(member).then(() => {\n                            closeDropdown();\n                            refreshList();\n                          });\n                        }}\n                        dataSbId=\"channel_setting_banned_user_context_menu_unban\"\n                      >\n                        {stringSet.CHANNEL_SETTING__MODERATION__UNBAN}\n                      </MenuItem>\n                    </MenuItems>\n                  )}\n                />\n              );\n            }}\n          />\n        ))\n      }\n      {\n        members && members.length === 0 && (\n          <Label\n            className=\"sendbird-channel-settings__empty-list\"\n            type={LabelTypography.SUBTITLE_2}\n            color={LabelColors.ONBACKGROUND_3}\n          >\n            {stringSet.CHANNEL_SETTING__MODERATION__EMPTY_BAN}\n          </Label>\n        )\n      }\n      {\n        hasNext && (\n          <div\n            className=\"sendbird-channel-settings-accordion__footer\"\n          >\n            <Button\n              type={ButtonTypes.SECONDARY}\n              size={ButtonSizes.SMALL}\n              onClick={() => {\n                setShowModal(true);\n              }}\n            >\n              {stringSet.CHANNEL_SETTING__MODERATION__ALL_BAN}\n            </Button>\n          </div>\n        )\n      }\n      {\n        showModal && (\n          <BannedUsersModal\n            onCancel={() => {\n              setShowModal(false);\n              refreshList();\n            }}\n          />\n        )\n      }\n    </>\n  );\n};\n\nexport default BannedMemberList;\n","import React, {\n  ReactElement,\n  useEffect,\n  useState,\n} from 'react';\n\nimport Modal from '../../../../ui/Modal';\nimport UserListItem from '../../../../ui/UserListItem';\nimport IconButton from '../../../../ui/IconButton';\nimport Icon, { IconTypes, IconColors } from '../../../../ui/Icon';\nimport ContextMenu, { MenuItem, MenuItems } from '../../../../ui/ContextMenu';\nimport { noop } from '../../../../utils/utils';\nimport { useChannelSettingsContext } from '../../context/ChannelSettingsProvider';\nimport useSendbirdStateContext from '../../../../hooks/useSendbirdStateContext';\nimport { useLocalization } from '../../../../lib/LocalizationContext';\n\ninterface Props {\n  onCancel(): void;\n}\n\nexport default function MutedMembersModal({\n  onCancel,\n}: Props): ReactElement {\n  const [members, setMembers] = useState([]);\n  const [memberQuery, setMemberQuery] = useState(null);\n\n  const { channel } = useChannelSettingsContext();\n  const state = useSendbirdStateContext();\n  const currentUser = state?.config?.userId;\n  const { stringSet } = useLocalization();\n\n  useEffect(() => {\n    const memberUserListQuery = channel?.createMemberListQuery({\n      limit: 10,\n      // @ts-ignore\n      mutedMemberFilter: 'muted',\n    });\n    memberUserListQuery.next().then((members) => {\n      setMembers(members);\n    });\n    setMemberQuery(memberUserListQuery);\n  }, []);\n  return (\n    <div>\n      <Modal\n        isFullScreenOnMobile\n        hideFooter\n        onCancel={() => onCancel()}\n        onSubmit={noop}\n        titleText={stringSet.CHANNEL_SETTING__MUTED_MEMBERS__TITLE}\n      >\n        <div\n          className=\"sendbird-more-members__popup-scroll\"\n          onScroll={(e) => {\n            const { hasNext } = memberQuery;\n            const target = e.target as HTMLTextAreaElement;\n            const fetchMore = (\n              target.clientHeight + target.scrollTop === target.scrollHeight\n            );\n\n            if (hasNext && fetchMore) {\n              memberQuery.next().then((o) => {\n                setMembers([\n                  ...members,\n                  ...o,\n                ]);\n              });\n            }\n          }}\n        >\n          { members.map((member) => (\n            <UserListItem\n              currentUser={currentUser}\n              user={member}\n              key={member.userId}\n              action={({ actionRef, parentRef }) => (\n                <ContextMenu\n                  menuTrigger={(toggleDropdown) => (\n                    <IconButton\n                      className=\"sendbird-user-message__more__menu\"\n                      width=\"32px\"\n                      height=\"32px\"\n                      onClick={toggleDropdown}\n                    >\n                      <Icon\n                        width=\"24px\"\n                        height=\"24px\"\n                        type={IconTypes.MORE}\n                        fillColor={IconColors.CONTENT_INVERSE}\n                      />\n                    </IconButton>\n                  )}\n                  menuItems={(closeDropdown) => (\n                    <MenuItems\n                      parentContainRef={parentRef}\n                      parentRef={actionRef} // for catching location(x, y) of MenuItems\n                      closeDropdown={closeDropdown}\n                      openLeft\n                    >\n                      <MenuItem\n                        onClick={() => {\n                          channel?.unmuteUser(member).then(() => {\n                            closeDropdown();\n                            setMembers(members.filter(m => {\n                              return (m.userId !== member.userId);\n                            }));\n                          });\n                        }}\n                        dataSbId=\"channel_setting_muted_member_context_menu_unmute\"\n                      >\n                        {stringSet.CHANNEL_SETTING__MODERATION__UNMUTE}\n                      </MenuItem>\n                    </MenuItems>\n                  )}\n                />\n              )}\n            />\n          ))}\n        </div>\n      </Modal>\n    </div>\n  );\n}\n","import React, {\n  ReactElement,\n  useEffect,\n  useState,\n  useCallback,\n} from 'react';\n\nimport Button, { ButtonTypes, ButtonSizes } from '../../../../ui/Button';\nimport IconButton from '../../../../ui/IconButton';\nimport Icon, { IconTypes, IconColors } from '../../../../ui/Icon';\nimport ContextMenu, { MenuItem, MenuItems } from '../../../../ui/ContextMenu';\nimport\nLabel, {\n  LabelTypography,\n  LabelColors,\n} from '../../../../ui/Label';\nimport UserListItem from '../UserListItem';\nimport MutedMembersModal from './MutedMembersModal';\nimport { useChannelSettingsContext } from '../../context/ChannelSettingsProvider';\nimport useSendbirdStateContext from '../../../../hooks/useSendbirdStateContext';\nimport { useLocalization } from '../../../../lib/LocalizationContext';\n\nexport const MutedMemberList = (): ReactElement => {\n  const [members, setMembers] = useState([]);\n  const [hasNext, setHasNext] = useState(false);\n  const [showModal, setShowModal] = useState(false);\n  const { stringSet } = useLocalization();\n\n  const { channel } = useChannelSettingsContext();\n  const state = useSendbirdStateContext();\n  const currentUser = state?.config?.userId;\n\n  useEffect(() => {\n    if (!channel) {\n      setMembers([]);\n      return;\n    }\n\n    const memberUserListQuery = channel?.createMemberListQuery({\n      limit: 10,\n      // @ts-ignore\n      mutedMemberFilter: 'muted',\n    });\n    memberUserListQuery.next().then((members) => {\n      setMembers(members);\n      setHasNext(memberUserListQuery.hasNext);\n    });\n  }, [channel]);\n\n  const refreshList = useCallback(() => {\n    if (!channel) {\n      setMembers([]);\n      return;\n    }\n\n    const memberUserListQuery = channel?.createMemberListQuery({\n      limit: 10,\n      // @ts-ignore\n      mutedMemberFilter: 'muted',\n    });\n    memberUserListQuery.next().then((members) => {\n      setMembers(members);\n      setHasNext(memberUserListQuery.hasNext);\n    });\n  }, [channel]);\n  return (\n    <>\n      {\n        members.map((member) => (\n          <UserListItem\n            key={member.userId}\n            user={member}\n            currentUser={currentUser}\n            action={({ actionRef, parentRef }) => {\n              return (\n                <ContextMenu\n                  menuTrigger={(toggleDropdown) => (\n                    <IconButton\n                      className=\"sendbird-user-message__more__menu\"\n                      width=\"32px\"\n                      height=\"32px\"\n                      onClick={toggleDropdown}\n                    >\n                      <Icon\n                        width=\"24px\"\n                        height=\"24px\"\n                        type={IconTypes.MORE}\n                        fillColor={IconColors.CONTENT_INVERSE}\n                      />\n                    </IconButton>\n                  )}\n                  menuItems={(closeDropdown) => (\n                    <MenuItems\n                      closeDropdown={closeDropdown}\n                      openLeft\n                      parentContainRef={parentRef}\n                      parentRef={actionRef} // for catching location(x, y) of MenuItems\n                    >\n                      <MenuItem\n                        onClick={() => {\n                          channel?.unmuteUser(member).then(() => {\n                            refreshList();\n                            closeDropdown();\n                          });\n                        }}\n                        dataSbId=\"channel_setting_muted_member_context_menu_unmute\"\n                      >\n                        {stringSet?.CHANNEL_SETTING__UNMUTE || stringSet.CHANNEL_SETTING__MODERATION__UNMUTE}\n                      </MenuItem>\n                    </MenuItems>\n                  )}\n                />\n              );\n            }\n            }\n          />\n        ))\n      }\n      {\n        members && members.length === 0 && (\n          <Label\n            className=\"sendbird-channel-settings__empty-list\"\n            type={LabelTypography.SUBTITLE_2}\n            color={LabelColors.ONBACKGROUND_3}\n          >\n            {stringSet.CHANNEL_SETTING__NO_UNMUTED}\n          </Label>\n        )\n      }\n      {\n        hasNext && (\n          <div\n            className=\"sendbird-channel-settings-accordion__footer\"\n          >\n            <Button\n              type={ButtonTypes.SECONDARY}\n              size={ButtonSizes.SMALL}\n              onClick={() => {\n                setShowModal(true);\n              }}\n            >\n              {stringSet.CHANNEL_SETTING__MUTED_MEMBERS__TITLE_ALL}\n            </Button>\n          </div>\n        )\n      }\n      {\n        showModal && (\n          <MutedMembersModal\n            onCancel={() => {\n              setShowModal(false);\n              refreshList();\n            }}\n          />\n        )\n      }\n    </>\n  );\n};\n\nexport default MutedMemberList;\n","import './admin-panel.scss';\nimport React, {\n  ReactElement,\n  useEffect,\n  useState,\n  useContext,\n} from 'react';\n\nimport { LocalizationContext } from '../../../../lib/LocalizationContext';\nimport Accordion, { AccordionGroup } from '../../../../ui/Accordion';\nimport\nLabel, {\n  LabelTypography,\n  LabelColors,\n} from '../../../../ui/Label';\nimport Icon, { IconTypes, IconColors } from '../../../../ui/Icon';\nimport Badge from '../../../../ui/Badge';\nimport { Toggle } from '../../../../ui/Toggle';\n\nimport OperatorList from './OperatorList';\nimport MemberList from './MemberList';\nimport BannedUserList from './BannedUserList';\nimport MutedMemberList from './MutedMemberList';\n\nimport { useChannelSettingsContext } from '../../context/ChannelSettingsProvider';\n\nconst kFormatter = (num: number): string|number => {\n  return Math.abs(num) > 999\n    ? `${(Math.abs(num) / 1000).toFixed(1)}K`\n    : num;\n};\n\nexport default function AdminPannel(): ReactElement {\n  const [frozen, setFrozen] = useState(false);\n\n  const { stringSet } = useContext(LocalizationContext);\n  const { channel } = useChannelSettingsContext();\n\n  // work around for\n  // https://sendbird.slack.com/archives/G01290GCDCN/p1595922832000900\n  // SDK bug - after frozen/unfrozen myRole becomes \"none\"\n  useEffect(() => {\n    setFrozen(channel?.isFrozen);\n  }, [channel]);\n\n  return (\n    <AccordionGroup className=\"sendbird-channel-settings__operator\">\n      <Accordion\n        className=\"sendbird-channel-settings__operators-list\"\n        id=\"operators\"\n        renderTitle={() => (\n          <>\n            <Icon\n              type={IconTypes.OPERATOR}\n              fillColor={IconColors.PRIMARY}\n              width={24}\n              height={24}\n              className=\"sendbird-channel-settings__accordion-icon\"\n            />\n            <Label\n              type={LabelTypography.SUBTITLE_1}\n              color={LabelColors.ONBACKGROUND_1}\n            >\n              {stringSet.CHANNEL_SETTING__OPERATORS__TITLE}\n            </Label>\n          </>\n        )}\n        renderContent={() => (\n          <>\n            <OperatorList />\n          </>\n        )}\n      />\n      <Accordion\n        className=\"sendbird-channel-settings__members-list\"\n        id=\"members\"\n        renderTitle={() => (\n          <>\n            <Icon\n              type={IconTypes.MEMBERS}\n              fillColor={IconColors.PRIMARY}\n              width={24}\n              height={24}\n              className=\"sendbird-channel-settings__accordion-icon\"\n            />\n            <Label\n              type={LabelTypography.SUBTITLE_1}\n              color={LabelColors.ONBACKGROUND_1}\n            >\n              {stringSet.CHANNEL_SETTING__MEMBERS__TITLE}\n            </Label>\n            <Badge count={kFormatter(channel?.memberCount)} />\n          </>\n        )}\n        renderContent={() => (\n          <>\n            <MemberList />\n          </>\n        )}\n      />\n      {\n        // No muted members in broadcast channel\n        !channel?.isBroadcast && (\n          <Accordion\n            id=\"mutedMembers\"\n            className=\"sendbird-channel-settings__muted-members-list\"\n            renderTitle={() => (\n              <>\n                <Icon\n                  type={IconTypes.MUTE}\n                  fillColor={IconColors.PRIMARY}\n                  width={24}\n                  height={24}\n                  className=\"sendbird-channel-settings__accordion-icon\"\n                />\n                <Label\n                  type={LabelTypography.SUBTITLE_1}\n                  color={LabelColors.ONBACKGROUND_1}\n                >\n                  {stringSet.CHANNEL_SETTING__MUTED_MEMBERS__TITLE}\n                </Label>\n              </>\n            )}\n            renderContent={() => (\n              <>\n                <MutedMemberList />\n              </>\n            )}\n          />\n        )\n      }\n      <Accordion\n        className=\"sendbird-channel-settings__banned-members-list\"\n        id=\"bannedUsers\"\n        renderTitle={() => (\n          <>\n            <Icon\n              type={IconTypes.BAN}\n              fillColor={IconColors.PRIMARY}\n              width={24}\n              height={24}\n              className=\"sendbird-channel-settings__accordion-icon\"\n            />\n            <Label\n              type={LabelTypography.SUBTITLE_1}\n              color={LabelColors.ONBACKGROUND_1}\n            >\n              {stringSet.CHANNEL_SETTING__BANNED_MEMBERS__TITLE}\n            </Label>\n          </>\n        )}\n        renderContent={() => (\n          <>\n            <BannedUserList />\n          </>\n        )}\n      />\n      {\n        // cannot freeze broadcast channel\n        !channel?.isBroadcast && (\n          <div className=\"sendbird-channel-settings__freeze\">\n            <Icon\n              type={IconTypes.FREEZE}\n              fillColor={IconColors.PRIMARY}\n              width={24}\n              height={24}\n              className=\"sendbird-channel-settings__accordion-icon\"\n            />\n            <Label\n              type={LabelTypography.SUBTITLE_1}\n              color={LabelColors.ONBACKGROUND_1}\n            >\n              {stringSet.CHANNEL_SETTING__FREEZE_CHANNEL}\n            </Label>\n            <Toggle\n              className=\"sendbird-channel-settings__frozen-icon\"\n              checked={frozen}\n              onChange={() => {\n                if (frozen) {\n                  channel?.unfreeze().then(() => {\n                    setFrozen((prev) => !prev);\n                  });\n                } else {\n                  channel?.freeze().then(() => {\n                    setFrozen((prev) => !prev);\n                  });\n                }\n              }}\n            />\n          </div>\n        )\n      }\n    </AccordionGroup>\n  );\n}\n"],"names":["OperatorsModal","_a","onCancel","_c","useState","operators","setOperators","_d","operatorQuery","setOperatorQuery","channel","useChannelSettingsContext","state","useSendbirdStateContext","currentUserId","_b","config","userId","stringSet","useContext","LocalizationContext","useEffect","operatorListQuery","createOperatorListQuery","limit","next","then","React","createElement","Modal","isFullScreenOnMobile","hideFooter","titleText","CHANNEL_SETTING__OPERATORS__TITLE_ALL","className","onScroll","e","hasNext","target","fetchMore","clientHeight","scrollTop","scrollHeight","o","__spreadArray","map","member","UserListItem","currentUser","user","key","action","parentRef","actionRef","ContextMenu","menuTrigger","toggleDropdown","IconButton","width","height","onClick","Icon","type","IconTypes","MORE","fillColor","IconColors","CONTENT_INVERSE","menuItems","closeDropdown","MenuItems","parentContainRef","openLeft","MenuItem","removeOperators","filter","dataSbId","CHANNEL_SETTING__MODERATION__UNREGISTER_OPERATOR","AddOperatorsModal","onSubmit","members","setMembers","selectedMembers","setSelectedMembers","memberQuery","setMemberQuery","memberListQuery","createMemberListQuery","operatorFilter","OperatorFilter","NONOPERATOR","selectedCount","Object","keys","m","length","ButtonTypes","PRIMARY","submitText","CHANNEL_SETTING__OPERATORS__ADD_BUTTON","addOperators","CHANNEL_SETTING__MEMBERS__SELECT_TITLE","Label","color","LabelColors","ONBACKGROUND_3","LabelTypography","CAPTION_1","concat","MODAL__INVITE_MEMBER__SELECTED","checkBox","checked","isOperator","role","disabled","onChange","event","modifiedSelectedMembers","__assign","id","OperatorList","showMore","setShowMore","showAdd","setShowAdd","_e","setHasNext","refreshList","useCallback","Fragment","operator","Button","SECONDARY","size","ButtonSizes","SMALL","CHANNEL_SETTING__OPERATORS__TITLE_ADD","BannedUsersModal","useLocalization","bannedUserListQuery","createBannedUserListQuery","users","noop","CHANNEL_SETTING__MUTED_MEMBERS__TITLE","unbanUser","CHANNEL_SETTING__MODERATION__BAN","BannedMemberList","showModal","setShowModal","bannedUserListQueryParams","CHANNEL_SETTING__MODERATION__UNBAN","SUBTITLE_2","CHANNEL_SETTING__MODERATION__EMPTY_BAN","CHANNEL_SETTING__MODERATION__ALL_BAN","MutedMembersModal","memberUserListQuery","mutedMemberFilter","unmuteUser","CHANNEL_SETTING__MODERATION__UNMUTE","MutedMemberList","CHANNEL_SETTING__UNMUTE","CHANNEL_SETTING__NO_UNMUTED","CHANNEL_SETTING__MUTED_MEMBERS__TITLE_ALL","kFormatter","num","Math","abs","toFixed","AdminPannel","frozen","setFrozen","isFrozen","AccordionGroup","Accordion","renderTitle","OPERATOR","SUBTITLE_1","ONBACKGROUND_1","CHANNEL_SETTING__OPERATORS__TITLE","renderContent","MEMBERS","CHANNEL_SETTING__MEMBERS__TITLE","Badge","count","memberCount","MemberList","isBroadcast","MUTE","BAN","CHANNEL_SETTING__BANNED_MEMBERS__TITLE","BannedUserList","FREEZE","CHANNEL_SETTING__FREEZE_CHANNEL","Toggle","unfreeze","prev","freeze"],"mappings":"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"}