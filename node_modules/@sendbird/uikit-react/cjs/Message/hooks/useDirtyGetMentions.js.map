{"version":3,"file":"useDirtyGetMentions.js","sources":["../../../../src/modules/Message/utils/getMentionNodes.ts","../../../../src/modules/Message/hooks/useDirtyGetMentions.ts"],"sourcesContent":["export function getMentionNodes(root: HTMLElement): Element[] {\n  if (root) {\n    const mentions = root.querySelectorAll('[data-sb-mention=\\'true\\']');\n    const mentionsArray = Array.from(mentions);\n    return mentionsArray;\n  }\n  return [];\n}\n","import { useEffect, useLayoutEffect, useState } from 'react';\n\nimport { Logger } from '../../../lib/SendbirdState';\nimport { getMentionNodes } from '../utils/getMentionNodes';\n\ninterface DynamicParams {\n  ref: React.RefObject<HTMLElement>;\n}\n\ninterface StaticParams {\n  logger: Logger;\n}\n\n/**\n * exported, should be backwords compatible\n * This is a dirty way to get the mentions given DOM node\n */\nexport function useDirtyGetMentions({\n  ref,\n}: DynamicParams, {\n  logger,\n}: StaticParams): Element[] {\n  // Select the node that will be observed for mutations\n  const targetNode = ref.current as HTMLElement;\n  const [mentionNodes, setMentionNodes] = useState<Element[]>([]);\n\n  // to get the initial mentions\n  useLayoutEffect(() => {\n    if (targetNode) {\n      const mentions = getMentionNodes(targetNode);\n      setMentionNodes(mentions);\n    }\n  }, [targetNode]);\n\n  useEffect(() => {\n    // Options for the observer (which mutations to observe)\n    const config = { childList: true, subtree: true };\n\n    // Callback function to execute when mutations are observed\n    const callback = (mutationList: MutationRecord[]): void => {\n      const hasMutation = mutationList.length > 0;\n      if (hasMutation) {\n        setMentionNodes(getMentionNodes(targetNode));\n      }\n    };\n\n    // Create an observer instance linked to the callback function\n    const observer = new MutationObserver(callback);\n\n    if (targetNode) {\n      // Start observing the target node for configured mutations\n      observer.observe(targetNode, config);\n      logger.info('useDirtyGetMentions: observer started', { observer, config });\n    }\n\n    return () => {\n      try {\n        observer.disconnect();\n        logger.info('useDirtyGetMentions: observer disconnected', { observer });\n      } catch (error) {\n        logger.error('useDirtyGetMentions: observer disconnect failed', { observer });\n      }\n    };\n  }, [targetNode]);\n  return mentionNodes;\n}\n"],"names":["getMentionNodes","root","mentions","querySelectorAll","mentionsArray","Array","from","useDirtyGetMentions","_a","_b","ref","logger","targetNode","current","_c","useState","mentionNodes","setMentionNodes","useLayoutEffect","useEffect","config","childList","subtree","callback","mutationList","hasMutation","length","observer","MutationObserver","observe","info","disconnect","error"],"mappings":";;;;;;AAAM,SAAUA,eAAeA,CAACC,IAAiB,EAAA;AAC/C,EAAA,IAAIA,IAAI,EAAE;AACR,IAAA,IAAMC,QAAQ,GAAGD,IAAI,CAACE,gBAAgB,CAAC,4BAA4B,CAAC,CAAA;AACpE,IAAA,IAAMC,aAAa,GAAGC,KAAK,CAACC,IAAI,CAACJ,QAAQ,CAAC,CAAA;AAC1C,IAAA,OAAOE,aAAa,CAAA;AACrB,GAAA;AACD,EAAA,OAAO,EAAE,CAAA;AACX;;ACMA;;;AAGG;AACa,SAAAG,mBAAmBA,CAACC,EAEpB,EAAEC,EAEH,EAAA;AAHb,EAAA,IAAAC,GAAG,GAAAF,EAAA,CAAAE,GAAA,CAAA;AAEH,EAAA,IAAAC,MAAM,GAAAF,EAAA,CAAAE,MAAA,CAAA;AAEN;AACA,EAAA,IAAMC,UAAU,GAAGF,GAAG,CAACG,OAAsB,CAAA;AACvC,EAAA,IAAAC,EAAA,GAAkCC,cAAQ,CAAY,EAAE,CAAC;AAAxDC,IAAAA,YAAY,GAAAF,EAAA,CAAA,CAAA,CAAA;AAAEG,IAAAA,eAAe,GAAAH,EAAA,CAAA,CAAA,CAA2B,CAAA;AAE/D;AACAI,EAAAA,qBAAe,CAAC,YAAA;AACd,IAAA,IAAIN,UAAU,EAAE;AACd,MAAA,IAAMV,QAAQ,GAAGF,eAAe,CAACY,UAAU,CAAC,CAAA;MAC5CK,eAAe,CAACf,QAAQ,CAAC,CAAA;AAC1B,KAAA;AACH,GAAC,EAAE,CAACU,UAAU,CAAC,CAAC,CAAA;AAEhBO,EAAAA,eAAS,CAAC,YAAA;AACR;AACA,IAAA,IAAMC,MAAM,GAAG;AAAEC,MAAAA,SAAS,EAAE,IAAI;AAAEC,MAAAA,OAAO,EAAE,IAAA;KAAM,CAAA;AAEjD;AACA,IAAA,IAAMC,QAAQ,GAAG,UAACC,YAA8B,EAAA;AAC9C,MAAA,IAAMC,WAAW,GAAGD,YAAY,CAACE,MAAM,GAAG,CAAC,CAAA;AAC3C,MAAA,IAAID,WAAW,EAAE;AACfR,QAAAA,eAAe,CAACjB,eAAe,CAACY,UAAU,CAAC,CAAC,CAAA;AAC7C,OAAA;KACF,CAAA;AAED;AACA,IAAA,IAAMe,QAAQ,GAAG,IAAIC,gBAAgB,CAACL,QAAQ,CAAC,CAAA;AAE/C,IAAA,IAAIX,UAAU,EAAE;AACd;AACAe,MAAAA,QAAQ,CAACE,OAAO,CAACjB,UAAU,EAAEQ,MAAM,CAAC,CAAA;AACpCT,MAAAA,MAAM,CAACmB,IAAI,CAAC,uCAAuC,EAAE;AAAEH,QAAAA,QAAQ,EAAAA,QAAA;AAAEP,QAAAA,MAAM,EAAAA,MAAAA;AAAA,OAAE,CAAC,CAAA;AAC3E,KAAA;AAED,IAAA,OAAO,YAAA;MACL,IAAI;QACFO,QAAQ,CAACI,UAAU,EAAE,CAAA;AACrBpB,QAAAA,MAAM,CAACmB,IAAI,CAAC,4CAA4C,EAAE;AAAEH,UAAAA,QAAQ,EAAAA,QAAAA;AAAE,SAAA,CAAC,CAAA;OACxE,CAAC,OAAOK,KAAK,EAAE;AACdrB,QAAAA,MAAM,CAACqB,KAAK,CAAC,iDAAiD,EAAE;AAAEL,UAAAA,QAAQ,EAAAA,QAAAA;AAAE,SAAA,CAAC,CAAA;AAC9E,OAAA;KACF,CAAA;AACH,GAAC,EAAE,CAACf,UAAU,CAAC,CAAC,CAAA;AAChB,EAAA,OAAOI,YAAY,CAAA;AACrB;;;;"}