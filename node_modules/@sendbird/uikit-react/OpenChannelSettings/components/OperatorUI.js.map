{"version":3,"file":"OperatorUI.js","sources":["../../../src/modules/OpenChannelSettings/components/OperatorUI/DeleteOpenChannel.tsx","../../../src/modules/OpenChannelSettings/components/OperatorUI/OperatorsModal.tsx","../../../src/modules/OpenChannelSettings/components/OperatorUI/AddOperatorsModal.tsx","../../../src/modules/OpenChannelSettings/components/OperatorUI/OperatorList.tsx","../../../src/modules/OpenChannelSettings/components/OperatorUI/MutedParticipantsModal.tsx","../../../src/modules/OpenChannelSettings/components/OperatorUI/MutedParticipantList.tsx","../../../src/modules/OpenChannelSettings/components/OperatorUI/BannedUsersModal.tsx","../../../src/modules/OpenChannelSettings/components/OperatorUI/BannedUserList.tsx","../../../src/modules/OpenChannelSettings/components/OperatorUI/index.tsx"],"sourcesContent":["import React, {\n  ReactElement,\n  useState,\n  useContext,\n} from 'react';\n\nimport Modal from '../../../../ui/Modal';\nimport Label, { LabelTypography, LabelColors } from '../../../../ui/Label';\nimport Icon, { IconTypes, IconColors } from '../../../../ui/Icon';\nimport { LocalizationContext } from '../../../../lib/LocalizationContext';\nimport useSendbirdStateContext from '../../../../hooks/useSendbirdStateContext';\nimport { useOpenChannelSettingsContext } from '../../context/OpenChannelSettingsProvider';\n\nexport default function DeleteChannel(): ReactElement {\n  const [showDeleteChannelModal, setShowDeleteChannelModal] = useState(false);\n  const { stringSet } = useContext(LocalizationContext);\n  const globalState = useSendbirdStateContext();\n  const isOnline = globalState?.config?.isOnline;\n  const logger = globalState?.config?.logger;\n\n  const { channel, onDeleteChannel } = useOpenChannelSettingsContext();\n\n  const deleteChannel = () => {\n    channel?.delete().then((response) => {\n      logger.info('OpenChannelSettings: Delete channel success', response);\n      if (onDeleteChannel) {\n        onDeleteChannel(channel);\n      }\n    }).catch((error) => {\n      logger.warning('OpenChannelSettings: Delete channel failed', error);\n    });\n  };\n  return (\n    <>\n      <div\n        className={\n          `sendbird-openchannel-settings__panel-item\n          sendbird-openchannel-settings__delete-channel\n            ${!isOnline ? 'sendbird-openchannel-settings__panel-item__disabled' : ''}`\n        }\n        role=\"button\"\n        tabIndex={0}\n        onKeyDown={() => {\n          if (!isOnline) { return; }\n          setShowDeleteChannelModal(true);\n        }}\n        onClick={() => {\n          if (!isOnline) { return; }\n          setShowDeleteChannelModal(true);\n        }}\n      >\n        <Icon\n          type={IconTypes.DELETE}\n          fillColor={IconColors.ERROR}\n          className={[\n            'sendbird-openchannel-settings__panel-icon-left',\n            'sendbird-openchannel-settings__panel-icon__delete',\n          ].join(' ')}\n          height=\"24px\"\n          width=\"24px\"\n        />\n        <Label\n          type={LabelTypography.SUBTITLE_1}\n          color={LabelColors.ONBACKGROUND_1}\n        >\n          {stringSet.OPEN_CHANNEL_SETTINGS__DELETE_CHANNEL_PANEL}\n        </Label>\n      </div>\n      {\n        showDeleteChannelModal && (\n          <Modal\n            isFullScreenOnMobile\n            onCancel={() => {\n              setShowDeleteChannelModal(false);\n            }}\n            onSubmit={() => {\n              deleteChannel();\n            }}\n            titleText={stringSet.OPEN_CHANNEL_SETTINGS__DELETE_CHANNEL_TITLE}\n            submitText={stringSet.OPEN_CHANNEL_SETTINGS__DELETE_CHANNEL_SUBMIT}\n          >\n            {stringSet.OPEN_CHANNEL_SETTINGS__DELETE_CHANNEL_CONTEXT}\n          </Modal>\n        )\n      }\n    </>\n  );\n}\n","import React, {\n  ReactElement,\n  useContext,\n  useEffect,\n  useState,\n} from 'react';\n\nimport Modal from '../../../../ui/Modal';\nimport UserListItem from '../../../../ui/UserListItem';\nimport IconButton from '../../../../ui/IconButton';\nimport Icon, { IconTypes, IconColors } from '../../../../ui/Icon';\nimport ContextMenu, { MenuItem, MenuItems } from '../../../../ui/ContextMenu';\n\nimport useSendbirdStateContext from '../../../../hooks/useSendbirdStateContext';\nimport { useOpenChannelSettingsContext } from '../../context/OpenChannelSettingsProvider';\nimport { LocalizationContext } from '../../../../lib/LocalizationContext';\n\ninterface Props { onCancel?(): void }\n\nexport default function OperatorListModal({ onCancel }: Props): ReactElement {\n  const [users, setUsers] = useState([]);\n  const [operatorQuery, setOperatorQuery] = useState(null);\n\n  const { channel } = useOpenChannelSettingsContext();\n  const state = useSendbirdStateContext();\n  const currentUserId = state?.config?.userId;\n  const { stringSet } = useContext(LocalizationContext);\n\n  useEffect(() => {\n    const operatorListQuery = channel?.createOperatorListQuery({\n      limit: 20,\n    });\n    operatorListQuery.next().then((participants) => {\n      setUsers(participants);\n    });\n    setOperatorQuery(operatorListQuery);\n  }, []);\n  return (\n    <div>\n      <Modal\n        hideFooter\n        isFullScreenOnMobile\n        titleText={stringSet.OPEN_CHANNEL_SETTINGS__OPERATORS__TITLE_ALL}\n        onCancel={onCancel}\n      >\n        <div\n          className=\"sendbird-more-users__popup-scroll\"\n          onScroll={(e) => {\n            const { hasNext } = operatorQuery;\n            const target = e.target as HTMLTextAreaElement;\n            const fetchMore = (\n              target.clientHeight + target.scrollTop === target.scrollHeight\n            );\n\n            if (hasNext && fetchMore) {\n              operatorQuery.next().then((o) => {\n                setUsers([\n                  ...users,\n                  ...o,\n                ]);\n              });\n            }\n          }}\n        >\n          {\n            users.map((operator) => (\n              <UserListItem\n                currentUser={currentUserId}\n                user={operator}\n                key={operator.userId}\n                action={({ parentRef, actionRef }) => (\n                  currentUserId !== operator?.userId\n                    ? (\n                      <ContextMenu\n                        menuTrigger={(toggleDropdown) => (\n                          <IconButton\n                            className=\"sendbird-user-message__more__menu\"\n                            width=\"32px\"\n                            height=\"32px\"\n                            onClick={toggleDropdown}\n                          >\n                            <Icon\n                              width=\"24px\"\n                              height=\"24px\"\n                              type={IconTypes.MORE}\n                              fillColor={IconColors.CONTENT_INVERSE}\n                            />\n                          </IconButton>\n                        )}\n                        menuItems={(closeDropdown) => (\n                          <MenuItems\n                            parentContainRef={parentRef}\n                            parentRef={actionRef}\n                            closeDropdown={closeDropdown}\n                            openLeft\n                          >\n                            <MenuItem\n                              onClick={() => {\n                                channel?.removeOperators([operator.userId]).then(() => {\n                                  setUsers(users.filter(({ userId }) => {\n                                    return userId !== operator.userId;\n                                  }));\n                                });\n                                closeDropdown();\n                              }}\n                              dataSbId=\"open_channel_setting_operator_context_menu_unregister_operator\"\n                            >\n                              {stringSet.OPEN_CHANNEL_SETTING__MODERATION__UNREGISTER_OPERATOR}\n                            </MenuItem>\n                          </MenuItems>\n                        )}\n                      />\n                    ) : null\n                )}\n              />\n            ))\n          }\n        </div>\n      </Modal>\n    </div>\n  );\n}\n","import React, {\n  ReactElement,\n  useEffect,\n  useState,\n  useContext,\n} from 'react';\n\nimport { LocalizationContext } from '../../../../lib/LocalizationContext';\nimport Modal from '../../../../ui/Modal';\nimport Label, {\n  LabelTypography,\n  LabelColors,\n} from '../../../../ui/Label';\nimport { ButtonTypes } from '../../../../ui/Button';\nimport UserListItem from '../../../../ui/UserListItem';\nimport { useOpenChannelSettingsContext } from '../../context/OpenChannelSettingsProvider';\n\ninterface Props {\n  onCancel(): void;\n  onSubmit(participants: Array<string>): void;\n}\n\nexport default function AddOperatorsModal({\n  onCancel,\n  onSubmit,\n}: Props): ReactElement {\n  const [participants, setParticipants] = useState([]);\n  const [selectedUsers, setSelectedUsers] = useState({});\n  const [participantQuery, setParticipantQuery] = useState(null);\n  const { stringSet } = useContext(LocalizationContext);\n\n  const { channel } = useOpenChannelSettingsContext();\n\n  useEffect(() => {\n    const participantListQuery = channel?.createParticipantListQuery({\n      limit: 20,\n    });\n    participantListQuery.next().then((users) => {\n      setParticipants(users);\n    });\n    setParticipantQuery(participantListQuery);\n  }, []);\n\n  const selectedCount = Object.keys(selectedUsers).filter((m) => selectedUsers[m]).length;\n  return (\n    <>\n      <Modal\n        isFullScreenOnMobile\n        type={ButtonTypes.PRIMARY}\n        submitText={stringSet.CHANNEL_SETTING__OPERATORS__ADD_BUTTON}\n        onCancel={onCancel}\n        onSubmit={() => {\n          const users = Object.keys(selectedUsers).filter((m) => selectedUsers[m]);\n          channel?.addOperators(users).then(() => {\n            onSubmit(users);\n          });\n        }}\n        titleText={stringSet.OPEN_CHANNEL_CONVERSATION__SELECT_PARTICIPANTS}\n      >\n        <Label\n          color={(selectedCount > 0) ? LabelColors.PRIMARY : LabelColors.ONBACKGROUND_3}\n          type={LabelTypography.CAPTION_1}\n        >\n          {`${selectedCount} ${stringSet.MODAL__INVITE_MEMBER__SELECTED}`}\n        </Label>\n        <div\n          className=\"sendbird-more-users__popup-scroll\"\n          onScroll={(e) => {\n            const { hasNext } = participantQuery;\n            const target = e.target as HTMLTextAreaElement;\n            const fetchMore = (\n              target.clientHeight + target.scrollTop === target.scrollHeight\n            );\n            if (hasNext && fetchMore) {\n              participantQuery.next().then((o) => {\n                setParticipants([\n                  ...participants,\n                  ...o,\n                ]);\n              });\n            }\n          }}\n        >\n          {\n            participants.map((participant) => {\n              const isOperator = channel?.operators.find((operator) => operator?.userId === participant?.userId) ? true : false;\n              return (\n                <UserListItem\n                  checkBox\n                  checked={selectedUsers[participant.userId] || isOperator}\n                  disabled={isOperator}\n                  isOperator={isOperator}\n                  onChange={\n                    (event) => {\n                      const modifiedSelectedUsers = {\n                        ...selectedUsers,\n                        [event.target.id]: event.target.checked,\n                      };\n                      if (!event.target.checked) {\n                        delete modifiedSelectedUsers[event.target.id];\n                      }\n                      setSelectedUsers(modifiedSelectedUsers);\n                    }\n                  }\n                  user={participant}\n                  key={participant.userId}\n                />\n              );\n            })\n          }\n        </div>\n      </Modal>\n    </>\n  );\n}\n","import React, { ReactElement, useContext, useState } from 'react';\n\nimport { UserListItem } from '../ParticipantUI/ParticipantItem';\nimport useSendbirdStateContext from '../../../../hooks/useSendbirdStateContext';\n\nimport Button, { ButtonTypes, ButtonSizes } from '../../../../ui/Button';\nimport ContextMenu, { MenuItem, MenuItems } from '../../../../ui/ContextMenu';\nimport Icon, { IconTypes, IconColors } from '../../../../ui/Icon';\nimport IconButton from '../../../../ui/IconButton';\nimport { LocalizationContext } from '../../../../lib/LocalizationContext';\nimport { useOpenChannelSettingsContext } from '../../context/OpenChannelSettingsProvider';\nimport OperatorListModal from './OperatorsModal';\nimport AddOperatorsModal from './AddOperatorsModal';\nimport { Participant } from '@sendbird/chat';\n\nconst OperatorList = (): ReactElement => {\n  const [showAdd, setShowAdd] = useState<boolean>(false);\n  const [showMore, setShowMore] = useState<boolean>(false);\n  const state = useSendbirdStateContext();\n  const currentUserId = state?.config?.userId;\n  const { stringSet } = useContext(LocalizationContext);\n  const { channel } = useOpenChannelSettingsContext();\n\n  return (\n    <div>\n      {\n        channel?.operators?.slice(0, 10).map((operator: Participant) => (\n          <UserListItem\n            key={operator.userId}\n            user={operator}\n            currentUser={currentUserId}\n            action={({ actionRef }) => (\n              currentUserId !== operator?.userId\n                ? (\n                  <ContextMenu\n                    menuTrigger={(toggleDropdown) => (\n                      <IconButton\n                        className=\"sendbird-openchannel-operator-list__menu\"\n                        width=\"32px\"\n                        height=\"32px\"\n                        onClick={toggleDropdown}\n                      >\n                        <Icon\n                          width=\"24px\"\n                          height=\"24px\"\n                          type={IconTypes.MORE}\n                          fillColor={IconColors.CONTENT_INVERSE}\n                        />\n                      </IconButton>\n                    )}\n                    menuItems={(closeDropdown) => (\n                      <MenuItems\n                        parentRef={actionRef}\n                        closeDropdown={closeDropdown}\n                        openLeft\n                      >\n                        <MenuItem\n                          onClick={() => {\n                            channel?.removeOperators([operator.userId]).then(() => {\n                              closeDropdown();\n                            });\n                          }}\n                          dataSbId=\"open_channel_setting_operator_context_menu_unregister_operator\"\n                        >\n                          {stringSet.OPEN_CHANNEL_SETTING__MODERATION__UNREGISTER_OPERATOR}\n                        </MenuItem>\n                        <MenuItem\n                          onClick={() => {\n                            if (operator.isMuted) {\n                              channel?.unmuteUser(operator).then(() => {\n                                closeDropdown();\n                              });\n                            } else {\n                              channel?.muteUser(operator).then(() => {\n                                closeDropdown();\n                              });\n                            }\n                          }}\n                          dataSbId={`open_channel_setting_operator_context_menu_${operator.isMuted ? 'unmute' : 'mute'}`}\n                        >\n                          {\n                            operator.isMuted\n                              ? stringSet.OPEN_CHANNEL_SETTING__MODERATION__UNMUTE\n                              : stringSet.OPEN_CHANNEL_SETTING__MODERATION__MUTE\n                          }\n                        </MenuItem>\n                        <MenuItem\n                          onClick={() => {\n                            channel?.banUser(operator).then(() => {\n                              closeDropdown();\n                            });\n                          }}\n                          dataSbId=\"open_channel_setting_operator_context_menu_ban\"\n                        >\n                          {stringSet.OPEN_CHANNEL_SETTING__MODERATION__BAN}\n                        </MenuItem>\n                      </MenuItems>\n                    )}\n                  />\n                ) : null\n            )}\n          />\n        ))\n      }\n      <div className=\"sendbird-openchannel-operator-list__footer\">\n        <Button\n          type={ButtonTypes.SECONDARY}\n          size={ButtonSizes.SMALL}\n          onClick={() => {\n            setShowAdd(true);\n          }}\n        >\n          {stringSet.OPEN_CHANNEL_SETTINGS__OPERATORS__TITLE_ADD}\n        </Button>\n        {\n          channel?.operators?.length > 10 && (\n            <Button\n              type={ButtonTypes.SECONDARY}\n              size={ButtonSizes.SMALL}\n              onClick={() => {\n                setShowMore(true);\n              }}\n            >\n              {stringSet.OPEN_CHANNEL_SETTINGS__OPERATORS__TITLE_ALL}\n            </Button>\n          )\n        }\n      </div>\n      {\n        showMore && (\n          <>\n            <OperatorListModal\n              onCancel={() => {\n                setShowMore(false);\n              }}\n            />\n          </>\n        )\n      }\n      {\n        showAdd && (\n          <>\n            <AddOperatorsModal\n              onCancel={() => setShowAdd(false)}\n              onSubmit={() => {\n                setShowAdd(false);\n              }}\n            />\n          </>\n        )\n      }\n    </div>\n  );\n};\n\nexport default OperatorList;\n","import React, {\n  ReactElement,\n  useContext,\n  useEffect,\n  useState,\n} from 'react';\n\nimport Modal from '../../../../ui/Modal';\nimport UserListItem from '../../../../ui/UserListItem';\nimport IconButton from '../../../../ui/IconButton';\nimport Icon, { IconTypes, IconColors } from '../../../../ui/Icon';\nimport ContextMenu, { MenuItem, MenuItems } from '../../../../ui/ContextMenu';\nimport { noop } from '../../../../utils/utils';\nimport { useOpenChannelSettingsContext } from '../../context/OpenChannelSettingsProvider';\nimport useSendbirdStateContext from '../../../../hooks/useSendbirdStateContext';\nimport { LocalizationContext } from '../../../../lib/LocalizationContext';\n\ninterface Props {\n  onCancel(): void;\n}\n\nexport default function MutedParticipantsModal({\n  onCancel,\n}: Props): ReactElement {\n  const [mutedUsers, setMutedUsers] = useState([]);\n  const [userListQuery, setUserListQuery] = useState(null);\n\n  const { channel } = useOpenChannelSettingsContext();\n  const state = useSendbirdStateContext();\n  const currentUserId = state?.config?.userId;\n  const { stringSet } = useContext(LocalizationContext);\n\n  useEffect(() => {\n    const mutedUserListQuery = channel?.createMutedUserListQuery({\n      limit: 10,\n    });\n    mutedUserListQuery.next().then((users) => {\n      setMutedUsers(users);\n    });\n    setUserListQuery(mutedUserListQuery);\n  }, []);\n  return (\n    <div>\n      <Modal\n        isFullScreenOnMobile\n        hideFooter\n        onCancel={() => onCancel()}\n        onSubmit={noop}\n        titleText={stringSet.OPEN_CHANNEL_SETTINGS__MUTED_MEMBERS__TITLE}\n      >\n        <div\n          className=\"sendbird-more-members__popup-scroll\"\n          onScroll={(e) => {\n            const { hasNext } = userListQuery;\n            const target = e.target as HTMLTextAreaElement;\n            const fetchMore = (\n              target.clientHeight + target.scrollTop === target.scrollHeight\n            );\n\n            if (hasNext && fetchMore) {\n              userListQuery.next().then((o) => {\n                setMutedUsers([\n                  ...mutedUsers,\n                  ...o,\n                ]);\n              });\n            }\n          }}\n        >\n          {\n            mutedUsers.map((mutedUser) => (\n              <UserListItem\n                currentUser={currentUserId}\n                user={mutedUser}\n                key={mutedUser.userId}\n                action={({ actionRef }) => (\n                  mutedUser?.userId !== currentUserId\n                    ? (\n                      <ContextMenu\n                        menuTrigger={(toggleDropdown) => (\n                          <IconButton\n                            className=\"sendbird-user-message__more__menu\"\n                            width=\"32px\"\n                            height=\"32px\"\n                            onClick={toggleDropdown}\n                          >\n                            <Icon\n                              width=\"24px\"\n                              height=\"24px\"\n                              type={IconTypes.MORE}\n                              fillColor={IconColors.CONTENT_INVERSE}\n                            />\n                          </IconButton>\n                        )}\n                        menuItems={(closeDropdown) => (\n                          <MenuItems\n                            parentRef={actionRef}\n                            closeDropdown={closeDropdown}\n                            openLeft\n                          >\n                            <MenuItem\n                              onClick={() => {\n                                channel?.unmuteUser(mutedUser).then(() => {\n                                  closeDropdown();\n                                  setMutedUsers(mutedUsers.filter((u) => {\n                                    return (u.userId !== mutedUser.userId);\n                                  }));\n                                });\n                              }}\n                              dataSbId=\"open_channel_setting_muted_member_context_menu_unmute\"\n                            >\n                              {stringSet.OPEN_CHANNEL_SETTING__MODERATION__UNMUTE}\n                            </MenuItem>\n                          </MenuItems>\n                        )}\n                      />\n                    ) : null\n                )}\n              />\n            ))}\n        </div>\n      </Modal>\n    </div>\n  );\n}\n","import React, {\n  ReactElement,\n  useEffect,\n  useState,\n  useCallback,\n  useContext,\n} from 'react';\n\nimport Button, { ButtonTypes, ButtonSizes } from '../../../../ui/Button';\nimport IconButton from '../../../../ui/IconButton';\nimport Icon, { IconTypes, IconColors } from '../../../../ui/Icon';\nimport ContextMenu, { MenuItem, MenuItems } from '../../../../ui/ContextMenu';\nimport Label, { LabelTypography, LabelColors } from '../../../../ui/Label';\nimport { UserListItem } from '../ParticipantUI/ParticipantItem';\nimport MutedParticipantsModal from './MutedParticipantsModal';\nimport useSendbirdStateContext from '../../../../hooks/useSendbirdStateContext';\nimport { useOpenChannelSettingsContext } from '../../context/OpenChannelSettingsProvider';\nimport { LocalizationContext } from '../../../../lib/LocalizationContext';\n\nexport const MutedParticipantList = (): ReactElement => {\n  const [mutedUsers, setMutedUsers] = useState([]);\n  const [hasNext, setHasNext] = useState(false);\n  const [showModal, setShowModal] = useState(false);\n\n  const { channel } = useOpenChannelSettingsContext();\n  const state = useSendbirdStateContext();\n  const currentUserId = state?.config?.userId;\n  const { stringSet } = useContext(LocalizationContext);\n\n  useEffect(() => {\n    if (!channel) {\n      setMutedUsers([]);\n      return;\n    }\n    const mutedUserListQuery = channel?.createMutedUserListQuery({\n      limit: 10,\n    });\n    mutedUserListQuery.next().then((members) => {\n      setMutedUsers(members);\n      setHasNext(mutedUserListQuery.hasNext);\n    });\n  }, [channel]);\n\n  const refreshList = useCallback(() => {\n    if (!channel) {\n      setMutedUsers([]);\n      return;\n    }\n\n    const mutedUserListQuery = channel?.createMutedUserListQuery({\n      limit: 10,\n    });\n    mutedUserListQuery.next().then((members) => {\n      setMutedUsers(members);\n      setHasNext(mutedUserListQuery.hasNext);\n    });\n  }, [channel]);\n  return (\n    <>\n      {\n        mutedUsers.map((mutedUser) => (\n          <UserListItem\n            key={mutedUser.userId}\n            user={mutedUser}\n            currentUser={currentUserId}\n            isOperator={channel?.isOperator(mutedUser.userId)}\n            action={({ actionRef }) => (\n              mutedUser?.userId !== currentUserId\n                ? (\n                  <ContextMenu\n                    menuTrigger={(toggleDropdown) => (\n                      <IconButton\n                        className=\"sendbird-user-message__more__menu\"\n                        width=\"32px\"\n                        height=\"32px\"\n                        onClick={toggleDropdown}\n                      >\n                        <Icon\n                          width=\"24px\"\n                          height=\"24px\"\n                          type={IconTypes.MORE}\n                          fillColor={IconColors.CONTENT_INVERSE}\n                        />\n                      </IconButton>\n                    )}\n                    menuItems={(closeDropdown) => (\n                      <MenuItems\n                        closeDropdown={closeDropdown}\n                        openLeft\n                        parentRef={actionRef}\n                      >\n                        <MenuItem\n                          onClick={() => {\n                            channel?.unmuteUser(mutedUser).then(() => {\n                              refreshList();\n                              closeDropdown();\n                            });\n                          }}\n                          dataSbId=\"open_channel_setting_muted_member_context_menu_unmute\"\n                        >\n                          {stringSet.OPEN_CHANNEL_SETTING__MODERATION__UNMUTE}\n                        </MenuItem>\n                      </MenuItems>\n                    )}\n                  />\n                ) : null\n            )}\n          />\n        ))\n      }\n      {\n        mutedUsers && mutedUsers.length === 0 && (\n          <Label\n            className=\"sendbird-channel-settings__empty-list\"\n            type={LabelTypography.SUBTITLE_2}\n            color={LabelColors.ONBACKGROUND_3}\n          >\n            {stringSet.OPEN_CHANNEL_SETTINGS__MUTED_MEMBERS__NO_ONE}\n          </Label>\n        )\n      }\n      {\n        hasNext && (\n          <div\n            className=\"sendbird-channel-settings-muted-participant-list__footer\"\n          >\n            <Button\n              type={ButtonTypes.SECONDARY}\n              size={ButtonSizes.SMALL}\n              onClick={() => {\n                setShowModal(true);\n              }}\n            >\n              {stringSet.OPEN_CHANNEL_SETTINGS__MUTED_MEMBERS__TITLE_ALL}\n            </Button>\n          </div>\n        )\n      }\n      {\n        showModal && (\n          <MutedParticipantsModal\n            onCancel={() => {\n              setShowModal(false);\n              refreshList();\n            }}\n          />\n        )\n      }\n    </>\n  );\n};\n\nexport default MutedParticipantList;\n","import React, {\n  ReactElement,\n  useContext,\n  useEffect,\n  useState,\n} from 'react';\n\nimport Modal from '../../../../ui/Modal';\nimport UserListItem from '../../../../ui/UserListItem';\nimport IconButton from '../../../../ui/IconButton';\nimport Icon, { IconTypes, IconColors } from '../../../../ui/Icon';\nimport ContextMenu, { MenuItem, MenuItems } from '../../../../ui/ContextMenu';\n\nimport { noop } from '../../../../utils/utils';\nimport { useOpenChannelSettingsContext } from '../../context/OpenChannelSettingsProvider';\nimport { LocalizationContext } from '../../../../lib/LocalizationContext';\nimport useSendbirdStateContext from '../../../../hooks/useSendbirdStateContext';\n\ninterface Props {\n  onCancel(): void;\n}\n\nexport default function BannedUsersModal({\n  onCancel,\n}: Props): ReactElement {\n  const [bannedUsers, setBannedUsers] = useState([]);\n  const [userListQuery, setUserListQuery] = useState(null);\n  const { channel } = useOpenChannelSettingsContext();\n  const state = useSendbirdStateContext();\n  const { stringSet } = useContext(LocalizationContext);\n  const currentUserId = state?.config?.userId;\n\n  useEffect(() => {\n    const bannedUserListQuery = channel?.createBannedUserListQuery();\n    bannedUserListQuery.next().then((users) => {\n      setBannedUsers(users);\n    });\n    setUserListQuery(bannedUserListQuery);\n  }, []);\n  return (\n    <div>\n      <Modal\n        hideFooter\n        isFullScreenOnMobile\n        onCancel={() => onCancel()}\n        onSubmit={noop}\n        titleText={stringSet.OPEN_CHANNEL_SETTINGS__MUTED_MEMBERS__TITLE}\n      >\n        <div\n          className=\"sendbird-more-members__popup-scroll\"\n          onScroll={(e) => {\n            const { hasNext } = userListQuery;\n            const target = e.target as HTMLTextAreaElement;\n            const fetchMore = (\n              target.clientHeight + target.scrollTop === target.scrollHeight\n            );\n\n            if (hasNext && fetchMore) {\n              userListQuery.next().then((o) => {\n                setBannedUsers([\n                  ...bannedUsers,\n                  ...o,\n                ]);\n              });\n            }\n          }}\n        >\n          {\n            bannedUsers.map((bannedUser) => (\n              <UserListItem\n                user={bannedUser}\n                key={bannedUser.userId}\n                action={({ actionRef }) => (\n                  bannedUser?.userId !== currentUserId\n                    ? (\n                      <ContextMenu\n                        menuTrigger={(toggleDropdown) => (\n                          <IconButton\n                            className=\"sendbird-user-message__more__menu\"\n                            width=\"32px\"\n                            height=\"32px\"\n                            onClick={toggleDropdown}\n                          >\n                            <Icon\n                              width=\"24px\"\n                              height=\"24px\"\n                              type={IconTypes.MORE}\n                              fillColor={IconColors.CONTENT_INVERSE}\n                            />\n                          </IconButton>\n                        )}\n                        menuItems={(closeDropdown) => (\n                          <MenuItems\n                            parentRef={actionRef}\n                            closeDropdown={closeDropdown}\n                            openLeft\n                          >\n                            <MenuItem\n                              onClick={() => {\n                                channel?.unbanUser(bannedUser).then(() => {\n                                  closeDropdown();\n                                  setBannedUsers(bannedUsers.filter((u) => {\n                                    return (u.userId !== bannedUser.userId);\n                                  }));\n                                });\n                              }}\n                              dataSbId=\"open_channel_setting_banned_user_context_menu_unban\"\n                            >\n                              {stringSet.OPEN_CHANNEL_SETTING__MODERATION__UNBAN}\n                            </MenuItem>\n                          </MenuItems>\n                        )}\n                      />\n                    ) : null\n                )\n                }\n              />\n            ))\n          }\n        </div>\n      </Modal>\n    </div>\n  );\n}\n","import React, {\n  ReactElement,\n  useEffect,\n  useState,\n  useCallback,\n  useContext,\n} from 'react';\n\nimport Button, { ButtonTypes, ButtonSizes } from '../../../../ui/Button';\nimport Label, { LabelTypography, LabelColors } from '../../../../ui/Label';\nimport IconButton from '../../../../ui/IconButton';\nimport Icon, { IconTypes, IconColors } from '../../../../ui/Icon';\nimport ContextMenu, { MenuItem, MenuItems } from '../../../../ui/ContextMenu';\n\nimport BannedUsersModal from './BannedUsersModal';\nimport { UserListItem } from '../ParticipantUI/ParticipantItem';\nimport { useOpenChannelSettingsContext } from '../../context/OpenChannelSettingsProvider';\nimport { LocalizationContext } from '../../../../lib/LocalizationContext';\nimport useSendbirdStateContext from '../../../../hooks/useSendbirdStateContext';\n\nexport const BannedUserList = (): ReactElement => {\n  const [bannedUsers, setBannedUsers] = useState([]);\n  const [hasNext, setHasNext] = useState(false);\n  const [showModal, setShowModal] = useState(false);\n\n  const { channel } = useOpenChannelSettingsContext();\n  const state = useSendbirdStateContext();\n  const { stringSet } = useContext(LocalizationContext);\n  const currentUserId = state?.config?.userId;\n\n  useEffect(() => {\n    if (!channel) {\n      setBannedUsers([]);\n      return;\n    }\n    const bannedUserListQuery = channel?.createBannedUserListQuery();\n    bannedUserListQuery.next().then((users) => {\n      setBannedUsers(users);\n      setHasNext(bannedUserListQuery.hasNext);\n    });\n  }, [channel]);\n\n  const refreshList = useCallback(() => {\n    if (!channel) {\n      setBannedUsers([]);\n      return;\n    }\n    const bannedUserListQuery = channel?.createBannedUserListQuery();\n    bannedUserListQuery.next().then((users) => {\n      setBannedUsers(users);\n      setHasNext(bannedUserListQuery.hasNext);\n    });\n  }, [channel]);\n  return (\n    <>\n      {\n        bannedUsers.map((bannedUser) => (\n          <UserListItem\n            key={bannedUser.userId}\n            user={bannedUser}\n            isOperator={channel?.isOperator(bannedUser.userId)}\n            action={({ actionRef }) => (\n              bannedUser?.userId !== currentUserId\n                ? (\n                  <ContextMenu\n                    menuTrigger={(toggleDropdown) => (\n                      <IconButton\n                        className=\"sendbird-user-message__more__menu\"\n                        width=\"32px\"\n                        height=\"32px\"\n                        onClick={toggleDropdown}\n                      >\n                        <Icon\n                          width=\"24px\"\n                          height=\"24px\"\n                          type={IconTypes.MORE}\n                          fillColor={IconColors.CONTENT_INVERSE}\n                        />\n                      </IconButton>\n                    )}\n                    menuItems={(closeDropdown) => (\n                      <MenuItems\n                        parentRef={actionRef}\n                        closeDropdown={closeDropdown}\n                        openLeft\n                      >\n                        <MenuItem\n                          onClick={() => {\n                            channel?.unbanUser(bannedUser).then(() => {\n                              closeDropdown();\n                              refreshList();\n                            });\n                          }}\n                          dataSbId=\"open_channel_setting_banned_user_context_menu_unban\"\n                        >\n                          {stringSet.OPEN_CHANNEL_SETTING__MODERATION__UNBAN}\n                        </MenuItem>\n                      </MenuItems>\n                    )}\n                  />\n                ) : null\n            )}\n          />\n        ))\n      }\n      {\n        bannedUsers && bannedUsers.length === 0 && (\n          <Label\n            className=\"sendbird-channel-settings__empty-list\"\n            type={LabelTypography.SUBTITLE_2}\n            color={LabelColors.ONBACKGROUND_3}\n          >\n            {stringSet.OPEN_CHANNEL_SETTINGS__BANNED_MEMBERS__NO_ONE}\n          </Label>\n        )\n      }\n      {\n        hasNext && (\n          <div className=\"sendbird-channel-settings-banned-user-list__footer\" >\n            <Button\n              type={ButtonTypes.SECONDARY}\n              size={ButtonSizes.SMALL}\n              onClick={() => {\n                setShowModal(true);\n              }}\n            >\n              {stringSet.OPEN_CHANNEL_SETTINGS__BANNED_MEMBERS__TITLE_ALL}\n            </Button>\n          </div>\n        )\n      }\n      {\n        showModal && (\n          <BannedUsersModal\n            onCancel={() => {\n              setShowModal(false);\n              refreshList();\n            }}\n          />\n        )\n      }\n    </>\n  );\n};\n\nexport default BannedUserList;\n","import React, { useContext } from 'react';\nimport { LocalizationContext } from '../../../../lib/LocalizationContext';\n\nimport Label, {\n  LabelTypography,\n  LabelColors,\n} from '../../../../ui/Label';\nimport Icon, {\n  IconTypes,\n  IconColors,\n} from '../../../../ui/Icon';\nimport { useOpenChannelSettingsContext } from '../../context/OpenChannelSettingsProvider';\nimport OpenChannelProfile from '../OpenChannelProfile';\nimport DeleteChannel from './DeleteOpenChannel';\nimport ParticipantsAccordion from '../ParticipantUI';\nimport Accordion, { AccordionGroup } from '../../../../ui/Accordion';\nimport OperatorList from './OperatorList';\nimport MutedParticipantList from './MutedParticipantList';\nimport BannedUserList from './BannedUserList';\n\nexport const copyToClipboard = (text: string): boolean => {\n  // @ts-ignore: Unreachable code error\n  if (window.clipboardData && window.clipboardData.setData) {\n    // Internet Explorer-specific code path to prevent textarea being shown while dialog is visible.\n    // @ts-ignore: Unreachable code error\n    return window.clipboardData.setData('Text', text);\n  }\n  if (document.queryCommandSupported && document.queryCommandSupported('copy')) {\n    const textarea = document.createElement('textarea');\n    textarea.textContent = text;\n    textarea.style.position = 'fixed'; // Prevent scrolling to bottom of page in Microsoft Edge.\n    document.body.appendChild(textarea);\n    textarea.select();\n    try {\n      return document.execCommand('copy'); // Security exception may be thrown by some browsers.\n    } catch (ex) {\n      return false;\n    } finally {\n      document.body.removeChild(textarea);\n    }\n  }\n  return false;\n};\n\nexport interface OperatorUIProps {\n  renderChannelProfile?: () => React.ReactElement;\n}\n\nexport const OperatorUI: React.FC<OperatorUIProps> = ({\n  renderChannelProfile,\n}: OperatorUIProps) => {\n  const { stringSet } = useContext(LocalizationContext);\n  const {\n    onCloseClick,\n    channel,\n  } = useOpenChannelSettingsContext();\n  return (\n    <>\n      <div className=\"sendbird-openchannel-settings__header\">\n        <Label type={LabelTypography.H_2} color={LabelColors.ONBACKGROUND_1}>\n          {stringSet.CHANNEL_SETTING__HEADER__TITLE}\n        </Label>\n        <Icon\n          className=\"sendbird-openchannel-settings__close-icon\"\n          type={IconTypes.CLOSE}\n          height=\"24px\"\n          width=\"24px\"\n          onClick={() => {\n            onCloseClick();\n          }}\n        />\n      </div>\n      <div className=\"sendbird-openchannel-settings__profile\">\n        {\n          renderChannelProfile?.() || (\n            <OpenChannelProfile />\n          )\n        }\n      </div>\n      <div className=\"sendbird-openchannel-settings__url\">\n        <Icon\n          className=\"sendbird-openchannel-settings__copy-icon\"\n          type={IconTypes.COPY}\n          height=\"22px\"\n          width=\"22px\"\n          onClick={() => {\n            copyToClipboard(channel?.url);\n          }}\n        />\n        <Label\n          className=\"sendbird-openchannel-settings__url-label\"\n          type={LabelTypography.CAPTION_2}\n          color={LabelColors.ONBACKGROUND_2}\n        >\n          {stringSet.OPEN_CHANNEL_SETTINGS__OPERATOR_URL}\n        </Label>\n        <Label\n          className=\"sendbird-openchannel-settings__url-value\"\n          type={LabelTypography.SUBTITLE_2}\n        >\n          {channel?.url}\n        </Label>\n      </div>\n      <AccordionGroup>\n        <Accordion\n          className=\"sendbird-openchannel-settings__operators-list\"\n          id=\"operators\"\n          renderTitle={() => (\n            <>\n              <Icon\n                className=\"sendbird-openchannel-settings__operator-accordion-icon\"\n                type={IconTypes.OPERATOR}\n                fillColor={IconColors.PRIMARY}\n                width=\"24px\"\n                height=\"24px\"\n              />\n              <Label\n                type={LabelTypography.SUBTITLE_1}\n                color={LabelColors.ONBACKGROUND_1}\n              >\n                {stringSet.OPEN_CHANNEL_SETTINGS__OPERATORS_TITLE}\n              </Label>\n            </>\n          )}\n          renderContent={() => (\n            <>\n              <OperatorList />\n            </>\n          )}\n        />\n        <Accordion\n          className=\"sendbird-channel-settings__operators-list\"\n          id=\"participants\"\n          renderTitle={() => (\n            <>\n              <Icon\n                type={IconTypes.MEMBERS}\n                fillColor={IconColors.PRIMARY}\n                width={24}\n                height={24}\n                className=\"sendbird-openchannel-settings__operator-accordion-icon\"\n              />\n              <Label\n                type={LabelTypography.SUBTITLE_1}\n                color={LabelColors.ONBACKGROUND_1}\n              >\n                {stringSet.OPEN_CHANNEL_SETTINGS__PARTICIPANTS_ACCORDION_TITLE}\n              </Label>\n            </>\n          )}\n          renderContent={() => (\n            <>\n              <ParticipantsAccordion isOperatorView />\n            </>\n          )}\n        />\n        <Accordion\n          className=\"sendbird-channel-settings__operators-list\"\n          id=\"mutedMembers\"\n          renderTitle={() => (\n            <>\n              <Icon\n                className=\"sendbird-openchannel-settings__operator-accordion-icon\"\n                type={IconTypes.MUTE}\n                fillColor={IconColors.PRIMARY}\n                width=\"24px\"\n                height=\"24px\"\n              />\n              <Label\n                type={LabelTypography.SUBTITLE_1}\n                color={LabelColors.ONBACKGROUND_1}\n              >\n                {stringSet.OPEN_CHANNEL_SETTINGS__MUTED_MEMBERS__TITLE}\n              </Label>\n            </>\n          )}\n          renderContent={() => (\n            <>\n              <MutedParticipantList />\n            </>\n          )}\n        />\n        <Accordion\n          className=\"sendbird-channel-settings__operators-list\"\n          id=\"bannedUsers\"\n          renderTitle={() => (\n            <>\n              <Icon\n                className=\"sendbird-openchannel-settings__operator-accordion-icon\"\n                type={IconTypes.BAN}\n                fillColor={IconColors.PRIMARY}\n                width=\"24px\"\n                height=\"24px\"\n              />\n              <Label\n                type={LabelTypography.SUBTITLE_1}\n                color={LabelColors.ONBACKGROUND_1}\n              >\n                {stringSet.OPEN_CHANNEL_SETTINGS__BANNED_MEMBERS__TITLE}\n              </Label>\n            </>\n          )}\n          renderContent={() => (\n            <>\n              <BannedUserList />\n            </>\n          )}\n        />\n      </AccordionGroup>\n      <DeleteChannel />\n    </>\n  );\n};\n\nexport default OperatorUI;\n"],"names":["DeleteChannel","_c","useState","showDeleteChannelModal","setShowDeleteChannelModal","stringSet","useContext","LocalizationContext","globalState","useSendbirdStateContext","isOnline","_a","config","logger","_b","_d","useOpenChannelSettingsContext","channel","onDeleteChannel","deleteChannel","delete","then","response","info","catch","error","warning","React","createElement","Fragment","className","concat","role","tabIndex","onKeyDown","onClick","Icon","type","IconTypes","DELETE","fillColor","IconColors","ERROR","join","height","width","Label","LabelTypography","SUBTITLE_1","color","LabelColors","ONBACKGROUND_1","OPEN_CHANNEL_SETTINGS__DELETE_CHANNEL_PANEL","Modal","isFullScreenOnMobile","onCancel","onSubmit","titleText","OPEN_CHANNEL_SETTINGS__DELETE_CHANNEL_TITLE","submitText","OPEN_CHANNEL_SETTINGS__DELETE_CHANNEL_SUBMIT","OPEN_CHANNEL_SETTINGS__DELETE_CHANNEL_CONTEXT","OperatorListModal","users","setUsers","operatorQuery","setOperatorQuery","state","currentUserId","userId","useEffect","operatorListQuery","createOperatorListQuery","limit","next","participants","hideFooter","OPEN_CHANNEL_SETTINGS__OPERATORS__TITLE_ALL","onScroll","e","hasNext","target","fetchMore","clientHeight","scrollTop","scrollHeight","o","__spreadArray","map","operator","UserListItem","currentUser","user","key","action","parentRef","actionRef","ContextMenu","menuTrigger","toggleDropdown","IconButton","MORE","CONTENT_INVERSE","menuItems","closeDropdown","MenuItems","parentContainRef","openLeft","MenuItem","removeOperators","filter","dataSbId","OPEN_CHANNEL_SETTING__MODERATION__UNREGISTER_OPERATOR","AddOperatorsModal","setParticipants","selectedUsers","setSelectedUsers","participantQuery","setParticipantQuery","participantListQuery","createParticipantListQuery","selectedCount","Object","keys","m","length","ButtonTypes","PRIMARY","CHANNEL_SETTING__OPERATORS__ADD_BUTTON","addOperators","OPEN_CHANNEL_CONVERSATION__SELECT_PARTICIPANTS","ONBACKGROUND_3","CAPTION_1","MODAL__INVITE_MEMBER__SELECTED","participant","isOperator","operators","find","checkBox","checked","disabled","onChange","event","modifiedSelectedUsers","__assign","id","OperatorList","showAdd","setShowAdd","_e","showMore","setShowMore","slice","isMuted","unmuteUser","muteUser","OPEN_CHANNEL_SETTING__MODERATION__UNMUTE","OPEN_CHANNEL_SETTING__MODERATION__MUTE","banUser","OPEN_CHANNEL_SETTING__MODERATION__BAN","Button","SECONDARY","size","ButtonSizes","SMALL","OPEN_CHANNEL_SETTINGS__OPERATORS__TITLE_ADD","MutedParticipantsModal","mutedUsers","setMutedUsers","userListQuery","setUserListQuery","mutedUserListQuery","createMutedUserListQuery","noop","OPEN_CHANNEL_SETTINGS__MUTED_MEMBERS__TITLE","mutedUser","u","MutedParticipantList","setHasNext","showModal","setShowModal","members","refreshList","useCallback","SUBTITLE_2","OPEN_CHANNEL_SETTINGS__MUTED_MEMBERS__NO_ONE","OPEN_CHANNEL_SETTINGS__MUTED_MEMBERS__TITLE_ALL","BannedUsersModal","bannedUsers","setBannedUsers","bannedUserListQuery","createBannedUserListQuery","bannedUser","unbanUser","OPEN_CHANNEL_SETTING__MODERATION__UNBAN","BannedUserList","OPEN_CHANNEL_SETTINGS__BANNED_MEMBERS__NO_ONE","OPEN_CHANNEL_SETTINGS__BANNED_MEMBERS__TITLE_ALL","copyToClipboard","text","window","clipboardData","setData","document","queryCommandSupported","textarea","textContent","style","position","body","appendChild","select","execCommand","ex","removeChild","OperatorUI","renderChannelProfile","onCloseClick","H_2","CHANNEL_SETTING__HEADER__TITLE","CLOSE","OpenChannelProfile","COPY","url","CAPTION_2","ONBACKGROUND_2","OPEN_CHANNEL_SETTINGS__OPERATOR_URL","AccordionGroup","Accordion","renderTitle","OPERATOR","OPEN_CHANNEL_SETTINGS__OPERATORS_TITLE","renderContent","MEMBERS","OPEN_CHANNEL_SETTINGS__PARTICIPANTS_ACCORDION_TITLE","ParticipantsAccordion","isOperatorView","MUTE","BAN","OPEN_CHANNEL_SETTINGS__BANNED_MEMBERS__TITLE"],"mappings":"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"}