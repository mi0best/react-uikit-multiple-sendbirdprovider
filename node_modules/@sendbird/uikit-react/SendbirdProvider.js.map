{"version":3,"file":"SendbirdProvider.js","sources":["../src/lib/hooks/useTheme.ts","../src/lib/dux/sdk/actionTypes.ts","../src/lib/dux/sdk/initialState.ts","../src/lib/dux/sdk/reducers.ts","../src/lib/dux/user/initialState.ts","../src/lib/dux/user/reducers.ts","../src/lib/hooks/useOnlineStatus.ts","../src/lib/hooks/useConnect/disconnectSdk.ts","../src/lib/hooks/useConnect/setupConnection.ts","../src/lib/hooks/useConnect/connect.ts","../src/lib/hooks/useConnect/index.ts","../src/lib/Logger/index.ts","../src/lib/pubSub/index.ts","../src/hooks/useAppendDomNode.ts","../src/lib/VoiceMessageProvider.tsx","../src/lib/utils/uikitConfigMapper.ts","../src/lib/hooks/schedulerFactory.ts","../src/hooks/useUnmount.ts","../src/lib/hooks/useMarkAsReadScheduler.ts","../src/lib/hooks/useMarkAsDeliveredScheduler.ts","../src/lib/Sendbird.tsx"],"sourcesContent":["import { useLayoutEffect } from 'react';\nimport cssVars from 'css-vars-ponyfill';\n\nconst isEmpty = (obj) => {\n  if (obj === null || obj === undefined) {\n    return true;\n  }\n\n  for (const prop in obj) {\n    if (obj.hasOwnProperty(prop)) {\n      return false;\n    }\n  }\n  return JSON.stringify(obj) === JSON.stringify({});\n};\n\nconst useTheme = (overrides: Record<string, string>): void => {\n  useLayoutEffect(() => {\n    if (!isEmpty(overrides)) {\n      cssVars({\n        variables: {\n          ...{\n            '--sendbird-dark-primary-500': '#4d2aa6',\n            '--sendbird-dark-primary-400': '#6440C4',\n            '--sendbird-dark-primary-300': '#7B53EF',\n            '--sendbird-dark-primary-200': '#9E8CF5',\n            '--sendbird-dark-primary-100': '#E2DFFF',\n\n            '--sendbird-dark-secondary-500': '#007A7A',\n            '--sendbird-dark-secondary-400': '#189A8D',\n            '--sendbird-dark-secondary-300': '#2EBA9F',\n            '--sendbird-dark-secondary-200': '#6FD6BE',\n            '--sendbird-dark-secondary-100': '#AEF2DC',\n\n            '--sendbird-dark-information-100': '#b2d9ff',\n\n            '--sendbird-dark-error-500': '#A30E2D',\n            '--sendbird-dark-error-400': '#C11F41',\n            '--sendbird-dark-error-300': '#E53157',\n            '--sendbird-dark-error-200': '#FF6183',\n            '--sendbird-dark-error-100': '#FFABBD',\n\n            '--sendbird-dark-background-700': '#000000',\n            '--sendbird-dark-background-600': '#161616',\n            '--sendbird-dark-background-500': '#2C2C2C',\n            '--sendbird-dark-background-400': '#393939',\n            '--sendbird-dark-background-300': '#A8A8A8',\n            '--sendbird-dark-background-200': '#D9D9D9',\n            '--sendbird-dark-background-100': '#F0F0F0',\n            '--sendbird-dark-background-50': '#FFFFFF',\n\n            '--sendbird-dark-overlay': 'rgba(0, 0, 0, 0.32)',\n\n            '--sendbird-dark-onlight-01': 'rgba(0, 0, 0, 0.88)',\n            '--sendbird-dark-onlight-02': 'rgba(0, 0, 0, 0.50)',\n            '--sendbird-dark-onlight-03': 'rgba(0, 0, 0, 0.38)',\n            '--sendbird-dark-onlight-04': 'rgba(0, 0, 0, 0.12)',\n\n            '--sendbird-dark-ondark-01': 'rgba(255, 255, 255, 0.88)',\n            '--sendbird-dark-ondark-02': 'rgba(255, 255, 255, 0.50)',\n            '--sendbird-dark-ondark-03': 'rgba(255, 255, 255, 0.38)',\n            '--sendbird-dark-ondark-04': 'rgba(255, 255, 255, 0.12)',\n\n            '--sendbird-dark-shadow-01': '0 1px 5px 0 rgba(33, 34, 66, 0.04), 0 0 3px 0 rgba(0, 0, 0, 0.08), 0 2px 1px 0 rgba(0, 0, 0, 0.12)',\n            '--sendbird-dark-shadow-02': '0 3px 5px -3px rgba(33, 34, 66, 0.04), 0 3px 14px 2px rgba(0, 0, 0, 0.08), 0 8px 10px 1px rgba(0, 0, 0, 0.12)',\n            '--sendbird-dark-shadow-03': '0 6px 10px -5px rgba(0, 0, 0, 0.04), 0 6px 30px 5px rgba(0, 0, 0, 0.08), 0 16px 24px 2px rgba(0, 0, 0, 0.12)',\n            '--sendbird-dark-shadow-04': '0 9px 15px -7px rgba(0, 0, 0, 0.04), 0 9px 46px 8px rgba(0, 0, 0, 0.08), 0 24px 38px 3px rgba(0, 0, 0, 0.12)',\n\n            '--sendbird-dark-shadow-message-input': '0 1px 5px 0 rgba(33, 34, 66, 0.12), 0 0 1px 0 rgba(33, 34, 66, 0.16), 0 2px 1px 0 rgba(33, 34, 66, 0.08), 0 1px 5px 0 rgba(0, 0, 0, 0.12)',\n\n            '--sendbird-light-primary-500': '#4d2aa6',\n            '--sendbird-light-primary-400': '#6440C4',\n            '--sendbird-light-primary-300': '#7B53EF',\n            '--sendbird-light-primary-200': '#9E8CF5',\n            '--sendbird-light-primary-100': '#E2DFFF',\n\n            '--sendbird-light-secondary-500': '#007A7A',\n            '--sendbird-light-secondary-400': '#189A8D',\n            '--sendbird-light-secondary-300': '#2EBA9F',\n            '--sendbird-light-secondary-200': '#6FD6BE',\n            '--sendbird-light-secondary-100': '#AEF2DC',\n\n            '--sendbird-light-information-100': '#b2d9ff',\n\n            '--sendbird-light-error-500': '#A30E2D',\n            '--sendbird-light-error-400': '#C11F41',\n            '--sendbird-light-error-300': '#E53157',\n            '--sendbird-light-error-200': '#FF6183',\n            '--sendbird-light-error-100': '#FFABBD',\n\n            '--sendbird-light-background-700': '#000000',\n            '--sendbird-light-background-600': '#161616',\n            '--sendbird-light-background-500': '#2C2C2C',\n            '--sendbird-light-background-400': '#393939',\n            '--sendbird-light-background-300': '#A8A8A8',\n            '--sendbird-light-background-200': '#D9D9D9',\n            '--sendbird-light-background-100': '#F0F0F0',\n            '--sendbird-light-background-50': ' #FFFFFF',\n\n            '--sendbird-light-overlay': 'rgba(0, 0, 0, 0.32)',\n\n            '--sendbird-light-onlight-01': 'rgba(0, 0, 0, 0.88)',\n            '--sendbird-light-onlight-02': 'rgba(0, 0, 0, 0.50)',\n            '--sendbird-light-onlight-03': 'rgba(0, 0, 0, 0.38)',\n            '--sendbird-light-onlight-04': 'rgba(0, 0, 0, 0.12)',\n\n            '--sendbird-light-ondark-01': 'rgba(255, 255, 255, 0.88)',\n            '--sendbird-light-ondark-02': 'rgba(255, 255, 255, 0.50)',\n            '--sendbird-light-ondark-03': 'rgba(255, 255, 255, 0.38)',\n            '--sendbird-light-ondark-04': 'rgba(255, 255, 255, 0.12)',\n\n            '--sendbird-light-shadow-01': '0 1px 5px 0 rgba(33, 34, 66, 0.04), 0 0 3px 0 rgba(0, 0, 0, 0.08), 0 2px 1px 0 rgba(0, 0, 0, 0.12)',\n            '--sendbird-light-shadow-02': '0 3px 5px -3px rgba(33, 34, 66, 0.04), 0 3px 14px 2px rgba(0, 0, 0, 0.08), 0 8px 10px 1px rgba(0, 0, 0, 0.12)',\n            '--sendbird-light-shadow-03': '0 6px 10px -5px rgba(0, 0, 0, 0.04), 0 6px 30px 5px rgba(0, 0, 0, 0.08), 0 16px 24px 2px rgba(0, 0, 0, 0.12)',\n            '--sendbird-light-shadow-04': '0 9px 15px -7px rgba(0, 0, 0, 0.04), 0 9px 46px 8px rgba(0, 0, 0, 0.08), 0 24px 38px 3px rgba(0, 0, 0, 0.12)',\n\n            '--sendbird-light-shadow-message-input': '0 1px 5px 0 rgba(33, 34, 66, 0.12), 0 0 1px 0 rgba(33, 34, 66, 0.16), 0 2px 1px 0 rgba(33, 34, 66, 0.08), 0 1px 5px 0 rgba(0, 0, 0, 0.12)',\n          },\n          ...overrides,\n        },\n      });\n    }\n  }, [overrides]);\n};\n\nexport default useTheme;\n","import SendbirdChat from '@sendbird/chat';\nimport { CreateAction } from '../../../utils/typeHelpers/reducers/createAction';\n\nexport const SDK_ACTIONS = {\n  INIT_SDK: 'INIT_SDK',\n  SET_SDK_LOADING: 'SET_SDK_LOADING',\n  RESET_SDK: 'RESET_SDK',\n  SDK_ERROR: 'SDK_ERROR',\n} as const;\n\ntype SDK_PAYLOAD_TYPES = {\n  [SDK_ACTIONS.SET_SDK_LOADING]: boolean,\n  [SDK_ACTIONS.INIT_SDK]: SendbirdChat,\n  [SDK_ACTIONS.SDK_ERROR]: null,\n  [SDK_ACTIONS.RESET_SDK]: null,\n};\n\nexport type SdkActionTypes = CreateAction<SDK_PAYLOAD_TYPES>;\n","import { SdkStore } from '../../types';\n\nexport interface SdkStoreStateType {\n  initialized: SdkStore['initialized']\n  loading: SdkStore['loading']\n  sdk: SdkStore['sdk'],\n  error: SdkStore['error'];\n}\n\nconst initialState: SdkStoreStateType = {\n  initialized: false,\n  loading: false,\n  sdk: {} as SdkStore['sdk'],\n  error: false,\n};\n\nexport default initialState;\n","import { match } from 'ts-pattern';\nimport { SdkActionTypes, SDK_ACTIONS } from './actionTypes';\nimport initialState, { SdkStoreStateType } from './initialState';\n\nexport default function reducer(state: SdkStoreStateType, action: SdkActionTypes): SdkStoreStateType {\n  return match(action)\n    .with({ type: SDK_ACTIONS.SET_SDK_LOADING }, ({ payload }) => {\n      return {\n        ...state,\n        initialized: false,\n        loading: payload,\n      };\n    })\n    .with({ type: SDK_ACTIONS.SDK_ERROR }, () => {\n      return {\n        ...state,\n        initialized: false,\n        loading: false,\n        error: true,\n      };\n    })\n    .with({ type: SDK_ACTIONS.INIT_SDK }, ({ payload }) => {\n      return {\n        sdk: payload,\n        initialized: true,\n        loading: false,\n        error: false,\n      };\n    })\n    .with({ type: SDK_ACTIONS.RESET_SDK }, () => {\n      return initialState;\n    })\n    .otherwise(() => {\n      return state;\n    });\n}\n","import { User } from '@sendbird/chat';\n\nexport interface UserStoreStateType {\n  initialized: boolean;\n  loading: boolean;\n  user: User;\n}\n\nconst initialState: UserStoreStateType = {\n  initialized: false,\n  loading: false,\n  user: {} as User,\n};\n\nexport default initialState;\n","import { match } from 'ts-pattern';\nimport { UserActionTypes, USER_ACTIONS } from './actionTypes';\nimport initialState, { UserStoreStateType } from './initialState';\n\nexport default function reducer(state: UserStoreStateType, action: UserActionTypes): UserStoreStateType {\n  return match(action)\n    .with({ type: USER_ACTIONS.INIT_USER }, ({ payload }) => {\n      return {\n        initialized: true,\n        loading: false,\n        user: payload,\n      };\n    })\n    .with({ type: USER_ACTIONS.RESET_USER }, () => {\n      return initialState;\n    })\n    .with({ type: USER_ACTIONS.UPDATE_USER_INFO }, ({ payload }) => {\n      return {\n        ...state,\n        user: payload,\n      };\n    })\n    .otherwise(() => {\n      return state;\n    });\n}\n","import type SendbirdChat from '@sendbird/chat';\nimport { ConnectionHandler } from '@sendbird/chat';\nimport { useState, useEffect } from 'react';\n\nimport { uuidv4 } from '../../utils/uuid';\nimport { LoggerInterface } from '../Logger';\n\nfunction useOnlineStatus(sdk: SendbirdChat, logger: LoggerInterface) {\n  const [isOnline, setIsOnline] = useState(window?.navigator?.onLine ?? true);\n\n  useEffect(() => {\n    const uniqueHandlerId = uuidv4();\n    try {\n      logger.warning('sdk changed', uniqueHandlerId);\n      const handler = new ConnectionHandler({\n        onDisconnected() {\n          setIsOnline(false);\n          logger.warning('onDisconnected', { isOnline });\n        },\n        onReconnectStarted() {\n          setIsOnline(false);\n          logger.warning('onReconnectStarted', { isOnline });\n\n        },\n        onReconnectSucceeded() {\n          setIsOnline(true);\n          logger.warning('onReconnectSucceeded', { isOnline });\n        },\n        onReconnectFailed() {\n          sdk.reconnect();\n          logger.warning('onReconnectFailed');\n        },\n      });\n\n      if (sdk?.addConnectionHandler) {\n        // workaround -> addConnectionHandler invalidates session handler\n        // provided through configureSession\n        sdk.addConnectionHandler(uniqueHandlerId, handler);\n        logger.info('Added ConnectionHandler', uniqueHandlerId);\n      }\n    } catch {\n      //\n    }\n    return () => {\n      try {\n        sdk.removeConnectionHandler(uniqueHandlerId);\n        logger.info('Removed ConnectionHandler', uniqueHandlerId);\n      } catch {\n        //\n      }\n    };\n  }, [sdk]);\n\n  useEffect(() => {\n    const tryReconnect = () => {\n      try {\n        logger.warning('Try reconnecting SDK');\n        if (sdk.connectionState !== 'OPEN') { // connection is not broken yet\n          sdk.reconnect();\n        }\n      } catch {\n        //\n      }\n    };\n    // addEventListener version\n    window.addEventListener('online', tryReconnect);\n    return () => {\n      window.removeEventListener('online', tryReconnect);\n    };\n  }, [sdk]);\n\n  // add offline-class to body\n  useEffect(() => {\n    const body = document.querySelector('body');\n    if (!isOnline) {\n      try {\n        body.classList.add('sendbird__offline');\n        logger.info('Added class sendbird__offline to body');\n      } catch (e) {\n        //\n      }\n    } else {\n      try {\n        body.classList.remove('sendbird__offline');\n        logger.info('Removed class sendbird__offline from body');\n      } catch (e) {\n        //\n      }\n    }\n  }, [isOnline]);\n\n  return isOnline;\n}\n\nexport default useOnlineStatus;\n","import { SDK_ACTIONS } from '../../dux/sdk/actionTypes';\nimport { USER_ACTIONS } from '../../dux/user/actionTypes';\nimport { DisconnectSdkTypes } from './types';\n\nexport async function disconnectSdk({\n  sdkDispatcher,\n  userDispatcher,\n  sdk,\n}: DisconnectSdkTypes): Promise<boolean> {\n  return new Promise((resolve) => {\n    sdkDispatcher({ type: SDK_ACTIONS.SET_SDK_LOADING, payload: true });\n    if (sdk?.disconnect) {\n      sdk.disconnect()\n        .then(() => {\n          sdkDispatcher({ type: SDK_ACTIONS.RESET_SDK });\n          userDispatcher({ type: USER_ACTIONS.RESET_USER });\n        })\n        .finally(() => {\n          resolve(true);\n        });\n    } else {\n      resolve(true);\n    }\n  });\n}\n","import SendbirdChat, { DeviceOsPlatform, SendbirdError, SendbirdPlatform, SendbirdProduct, User } from '@sendbird/chat';\nimport { OpenChannelModule } from '@sendbird/chat/openChannel';\nimport { GroupChannelModule } from '@sendbird/chat/groupChannel';\n\nimport { SDK_ACTIONS } from '../../dux/sdk/actionTypes';\nimport { USER_ACTIONS } from '../../dux/user/actionTypes';\n\nimport { isTextuallyNull } from '../../../utils';\n\nimport { SetupConnectionTypes } from './types';\nimport { CustomExtensionParams, SendbirdChatInitParams } from '../../types';\n\nconst APP_VERSION_STRING = '__react_dev_mode__';\n\nconst { INIT_SDK, SET_SDK_LOADING, RESET_SDK, SDK_ERROR } = SDK_ACTIONS;\nconst { INIT_USER, UPDATE_USER_INFO, RESET_USER } = USER_ACTIONS;\n\nexport function getMissingParamError({ userId, appId }: { userId?: string, appId?: string }): string {\n  return `SendbirdProvider | useConnect/setupConnection/Connection failed UserId: ${userId} or appId: ${appId} missing`;\n}\nexport function getConnectSbError(error?: SendbirdError): string {\n  return `SendbirdProvider | useConnect/setupConnection/Connection failed. ${error?.code || ''} ${error?.message || ''}`;\n}\n\nexport function setUpParams({\n  appId,\n  customApiHost,\n  customWebSocketHost,\n  sdkInitParams,\n}: {\n  appId: string;\n  customApiHost?: string;\n  customWebSocketHost?: string;\n  sdkInitParams?: SendbirdChatInitParams;\n  customExtensionParams?: CustomExtensionParams;\n}): SendbirdChat {\n  const params = {\n    modules: [\n      new GroupChannelModule(),\n      new OpenChannelModule(),\n    ],\n    newInstance: true,\n    ...(sdkInitParams ?? {}),\n    // appId shouldn't be overrided\n    appId,\n  };\n  if (customApiHost) {\n    params['customApiHost'] = customApiHost;\n  }\n  if (customWebSocketHost) {\n    params['customWebSocketHost'] = customWebSocketHost;\n  }\n  const newSdk = SendbirdChat.init(params);\n  return newSdk;\n}\n\n// Steps\n// 1. Check if minimum userID/appID is provided\n//  1.a. If not, throw error > !reject\n//  1.b. If yes, continue\n// 2. Set up params with custom host if provided\n// 3. Set up session handler if provided\n// 4. Set up version\n// 5. Connect to Sendbird -> either using user ID or (user ID + access token)\n// 6. If connected, connectCbSucess\n//  6.a check if nickname is to be updated -> no > !resolve immediately\n//  6.b check if nickname is to be updated -> yes > update nickname > !resolve\n// 7. If not connected, connectCbError > !reject\nexport async function setUpConnection({\n  logger,\n  sdkDispatcher,\n  userDispatcher,\n  initDashboardConfigs,\n  userId,\n  appId,\n  customApiHost,\n  customWebSocketHost,\n  configureSession,\n  nickname,\n  profileUrl,\n  accessToken,\n  isUserIdUsedForNickname,\n  sdkInitParams,\n  customExtensionParams,\n  isMobile = false,\n}: SetupConnectionTypes): Promise<void> {\n  return new Promise((resolve, reject) => {\n    logger?.info?.('SendbirdProvider | useConnect/setupConnection/init', { userId, appId });\n    sdkDispatcher({ type: SET_SDK_LOADING, payload: true });\n\n    if (userId && appId) {\n      const newSdk = setUpParams({\n        appId,\n        customApiHost,\n        customWebSocketHost,\n        sdkInitParams,\n      });\n\n      if (configureSession && typeof configureSession === 'function') {\n        const sessionHandler = configureSession(newSdk);\n        logger?.info?.('SendbirdProvider | useConnect/setupConnection/configureSession', sessionHandler);\n        newSdk.setSessionHandler(sessionHandler);\n      }\n\n      logger?.info?.('SendbirdProvider | useConnect/setupConnection/setVersion', { version: APP_VERSION_STRING });\n      /**\n       * Keep optional chaining to the addSendbirdExtensions\n       * for supporting the ChatSDK v4.9.5 or less\n       */\n      newSdk?.addSendbirdExtensions?.(\n        [\n          {\n            product: SendbirdProduct?.UIKIT_CHAT ?? 'uikit-chat' as SendbirdProduct,\n            version: APP_VERSION_STRING,\n            platform: SendbirdPlatform?.JS ?? 'js' as SendbirdPlatform,\n          },\n        ],\n        {\n          platform: (isMobile\n            ? DeviceOsPlatform?.MOBILE_WEB ?? 'mobile_web'\n            : DeviceOsPlatform?.WEB ?? 'web') as DeviceOsPlatform,\n        },\n        customExtensionParams,\n      );\n      newSdk.addExtension('sb_uikit', APP_VERSION_STRING);\n\n      const connectCbSucess = async (user: User) => {\n        logger?.info?.('SendbirdProvider | useConnect/setupConnection/connectCbSucess', user);\n        sdkDispatcher({ type: INIT_SDK, payload: newSdk });\n        userDispatcher({ type: INIT_USER, payload: user });\n\n        initDashboardConfigs(newSdk)\n          .then(config => {\n            logger?.info?.('SendbirdProvider | useConnect/setupConnection/getUIKitConfiguration success', {\n              config,\n            });\n          })\n          .catch(error => {\n            logger?.error?.('SendbirdProvider | useConnect/setupConnection/getUIKitConfiguration failed', {\n              error,\n            });\n          });\n\n        // use nickname/profileUrl if provided\n        // or set userID as nickname\n        if ((nickname !== user.nickname || profileUrl !== user.profileUrl)\n          && !(isTextuallyNull(nickname) && isTextuallyNull(profileUrl))\n        ) {\n          logger?.info?.('SendbirdProvider | useConnect/setupConnection/updateCurrentUserInfo', {\n            nickname,\n            profileUrl,\n          });\n          newSdk.updateCurrentUserInfo({\n            nickname: nickname || user.nickname || (isUserIdUsedForNickname ? user.userId : ''),\n            profileUrl: profileUrl || user.profileUrl,\n          }).then((namedUser) => {\n            logger?.info?.('SendbirdProvider | useConnect/setupConnection/updateCurrentUserInfo success', {\n              nickname,\n              profileUrl,\n            });\n            userDispatcher({ type: UPDATE_USER_INFO, payload: namedUser });\n          }).finally(() => {\n            resolve();\n          });\n        } else {\n          resolve();\n        }\n      };\n\n      const connectCbError = (e: SendbirdError) => {\n        const errorMessage = getConnectSbError(e);\n        logger?.error?.(errorMessage, {\n          e,\n          appId,\n          userId,\n        });\n        sdkDispatcher({ type: RESET_SDK });\n        userDispatcher({ type: RESET_USER });\n\n        sdkDispatcher({ type: SDK_ERROR });\n        // exit promise with error\n        reject(errorMessage);\n      };\n\n      logger?.info?.(`SendbirdProvider | useConnect/setupConnection/connect connecting using ${accessToken ?? userId}`);\n      newSdk.connect(userId, accessToken)\n        .then((res) => connectCbSucess(res))\n        .catch((err) => connectCbError(err));\n    } else {\n      const errorMessage = getMissingParamError({ userId, appId });\n      sdkDispatcher({ type: SDK_ERROR });\n      logger?.error?.(errorMessage);\n      // exit promise with error\n      reject(errorMessage);\n    }\n  });\n}\n","import { disconnectSdk } from './disconnectSdk';\nimport { setUpConnection } from './setupConnection';\nimport { ConnectTypes } from './types';\n\nexport async function connect({\n  logger,\n  sdkDispatcher,\n  userDispatcher,\n  initDashboardConfigs,\n  userId,\n  appId,\n  customApiHost,\n  customWebSocketHost,\n  configureSession,\n  nickname,\n  profileUrl,\n  accessToken,\n  sdk,\n  sdkInitParams,\n  customExtensionParams,\n  isMobile,\n}: ConnectTypes): Promise<void> {\n  await disconnectSdk({\n    logger,\n    sdkDispatcher,\n    userDispatcher,\n    sdk,\n  });\n  await setUpConnection({\n    logger,\n    sdkDispatcher,\n    userDispatcher,\n    initDashboardConfigs,\n    userId,\n    appId,\n    customApiHost,\n    customWebSocketHost,\n    configureSession,\n    nickname,\n    profileUrl,\n    accessToken,\n    sdkInitParams,\n    customExtensionParams,\n    isMobile,\n  });\n}\n","import { useCallback, useEffect } from 'react';\n\nimport { ReconnectType, StaticTypes, TriggerTypes } from './types';\nimport { connect } from './connect';\n\nexport default function useConnect(triggerTypes: TriggerTypes, staticTypes: StaticTypes): ReconnectType {\n  const { userId, appId, accessToken, isMobile, isUserIdUsedForNickname } = triggerTypes;\n  const {\n    logger,\n    nickname,\n    profileUrl,\n    configureSession,\n    customApiHost,\n    customWebSocketHost,\n    sdk,\n    sdkDispatcher,\n    userDispatcher,\n    initDashboardConfigs,\n    sdkInitParams,\n    customExtensionParams,\n  } = staticTypes;\n  logger?.info?.('SendbirdProvider | useConnect', { ...triggerTypes, ...staticTypes });\n\n  useEffect(() => {\n    logger?.info?.('SendbirdProvider | useConnect/useEffect', { userId, appId, accessToken });\n    try {\n      connect({\n        userId,\n        appId,\n        accessToken,\n        logger,\n        nickname,\n        profileUrl,\n        configureSession,\n        customApiHost,\n        customWebSocketHost,\n        sdk,\n        sdkDispatcher,\n        userDispatcher,\n        initDashboardConfigs,\n        isUserIdUsedForNickname,\n        sdkInitParams,\n        customExtensionParams,\n        isMobile,\n      });\n    } catch (error) {\n      logger?.error?.('SendbirdProvider | useConnect/useEffect', error);\n    }\n  }, [userId, appId, accessToken]);\n  const reconnect = useCallback(() => {\n    logger?.info?.('SendbirdProvider | useConnect/reconnect/useCallback', { sdk });\n\n    try {\n      connect({\n        userId,\n        appId,\n        accessToken,\n        logger,\n        nickname,\n        profileUrl,\n        configureSession,\n        customApiHost,\n        customWebSocketHost,\n        sdk,\n        sdkDispatcher,\n        userDispatcher,\n        initDashboardConfigs,\n        isUserIdUsedForNickname,\n        sdkInitParams,\n        customExtensionParams,\n        isMobile,\n      });\n    } catch (error) {\n      logger?.error?.('SendbirdProvider | useConnect/reconnect/useCallback', error);\n    }\n  }, [sdk]);\n  return reconnect;\n}\n","// Logger, pretty much explains it\n// in SendbirdProvider\n\nimport { ObjectValues } from '../../utils/typeHelpers/objectValues';\nimport { noop } from '../../utils/utils';\n\n// const [logger, setLogger] = useState(LoggerFactory(logLevel));\nexport const LOG_LEVELS = {\n  DEBUG: 'debug',\n  WARNING: 'warning',\n  ERROR: 'error',\n  INFO: 'info',\n  ALL: 'all',\n} as const;\nexport type LogLevel = ObjectValues<typeof LOG_LEVELS>;\n\nconst colorLog = (level: LogLevel): string => {\n  switch (level) {\n    case LOG_LEVELS.WARNING:\n      return ('color: Orange');\n    case LOG_LEVELS.ERROR:\n      return ('color: Red');\n    default:\n      return ('color: Gray');\n  }\n};\n\ninterface PrintLogProps {\n  level: LogLevel;\n  title: string;\n  description?: string;\n  payload?: unknown[];\n}\nexport const printLog = ({\n  level,\n  title,\n  description = '',\n  payload = [],\n}: PrintLogProps): void => {\n  // eslint-disable-next-line no-console\n  console.log(\n    `%c SendbirdUIKit | ${level} | ${new Date().toISOString()} | ${title} ${description && '|'}`, colorLog(level), description, ...payload,\n  );\n};\n\nexport interface LoggerInterface {\n  info(title?: string, ...payload: unknown[]): void;\n  error(title?: string, ...payload: unknown[]): void;\n  warning(title?: string, ...payload: unknown[]): void;\n}\n\nexport const getDefaultLogger = (): LoggerInterface => ({\n  info: noop,\n  error: noop,\n  warning: noop,\n});\n\nexport const LoggerFactory = (\n  lvl: LogLevel,\n  customInterface?: () => void,\n): LoggerInterface => {\n  const logInterface = customInterface || printLog;\n  const lvlArray: Array<LogLevel> = Array.isArray(lvl) ? lvl : [lvl];\n\n  const applyLog = (lgLvl: LogLevel) => (title?: string, description?: string, ...payload: unknown[]) => logInterface({\n    level: lgLvl,\n    title,\n    description,\n    payload,\n  });\n\n  return lvlArray.reduce((accumulator, currentLvl) => {\n    if (currentLvl === LOG_LEVELS.DEBUG || currentLvl === LOG_LEVELS.ALL) {\n      return ({\n        ...accumulator,\n        info: applyLog(LOG_LEVELS.INFO),\n        error: applyLog(LOG_LEVELS.ERROR),\n        warning: applyLog(LOG_LEVELS.WARNING),\n      });\n    }\n\n    if (currentLvl === LOG_LEVELS.INFO) {\n      return ({\n        ...accumulator,\n        info: applyLog(LOG_LEVELS.INFO),\n      });\n    }\n\n    if (currentLvl === LOG_LEVELS.ERROR) {\n      return ({\n        ...accumulator,\n        error: applyLog(LOG_LEVELS.ERROR),\n      });\n    }\n\n    if (currentLvl === LOG_LEVELS.WARNING) {\n      return ({\n        ...accumulator,\n        warning: applyLog(LOG_LEVELS.WARNING),\n      });\n    }\n\n    return { ...accumulator };\n  }, getDefaultLogger());\n};\n\n// TODO: Make this to hook, useLogger\n","// https://davidwalsh.name/pubsub-javascript\n// we use pubsub to sync events between multiple components(example - ChannelList, Channel)\n// for example, if customer sends a message from their custom component\n// without pubsub,we would not be able to listen to it\n// in our ChannelList or Conversation\n\nexport interface PubSubTypes {\n  __getTopics: () => Record<string, string>;\n  subscribe: (topic: string, listener: unknown) => { remove: () => void };\n  publish: (topic: string, info: unknown) => void;\n}\n\nconst pubSubFactory = (): PubSubTypes => {\n  const topics = {};\n  const hOP = topics.hasOwnProperty;\n\n  return {\n    __getTopics: () => topics,\n    subscribe: (topic, listener) => {\n      // Create the topic's object if not yet created\n      if (!hOP.call(topics, topic)) { topics[topic] = []; }\n\n      // Add the listener to queue\n      const index = topics[topic].push(listener) - 1;\n\n      // Provide handle back for removal of topic\n      return {\n        remove: () => {\n          topics[topic].splice(index, 1);\n        },\n      };\n    },\n    publish: (topic, info) => {\n      // If the topic doesn't exist, or there's no listeners in queue, just leave\n      if (!hOP.call(topics, topic)) { return; }\n\n      // Cycle through topics queue, fire!\n      topics[topic].forEach((item) => {\n        item(info !== undefined ? info : {});\n      });\n    },\n  };\n};\n\nexport default pubSubFactory;\n","import { useEffect } from 'react';\n\nfunction useAppendDomNode(\n  ids: string[] = [],\n  rootSelector = 'unknown',\n) {\n  useEffect(() => {\n    const root = document.querySelector(rootSelector);\n    if (root) {\n      ids.forEach((id) => {\n        const elem = document.createElement('div');\n        elem.setAttribute('id', id);\n        root.appendChild(elem);\n      });\n    }\n    return () => {\n      if (root) {\n        ids.forEach((id) => {\n          const target = document.getElementById(id);\n          if (target) root.removeChild(target);\n        });\n      }\n    };\n  }, []);\n}\n\nexport default useAppendDomNode;\n","import React from 'react';\nimport { VoicePlayerProvider } from '../hooks/VoicePlayer';\nimport { VoiceRecorderProvider } from '../hooks/VoiceRecorder';\n\nexport interface VoiceMessageProviderProps {\n  children: React.ReactElement;\n  isVoiceMessageEnabled?: boolean;\n}\n\nexport const VoiceMessageProvider = ({\n  children,\n  isVoiceMessageEnabled = true,\n}: VoiceMessageProviderProps): React.ReactElement => {\n  if (!isVoiceMessageEnabled) {\n    return (\n      <VoicePlayerProvider>\n        {children}\n      </VoicePlayerProvider>\n    );\n  }\n  return (\n    <VoiceRecorderProvider>\n      <VoicePlayerProvider>\n        {children}\n      </VoicePlayerProvider>\n    </VoiceRecorderProvider>\n  );\n};\n\nexport default VoiceMessageProvider;\n","import { UIKitOptions, CommonUIKitConfigProps } from '../types';\nimport { getCaseResolvedReplyType } from './resolvedReplyType';\n\nexport function uikitConfigMapper({\n  legacyConfig,\n  uikitOptions = {},\n}: { legacyConfig: CommonUIKitConfigProps, uikitOptions?: UIKitOptions }): UIKitOptions {\n  const {\n    replyType,\n    isMentionEnabled,\n    isReactionEnabled,\n    disableUserProfile,\n    isVoiceMessageEnabled,\n    isTypingIndicatorEnabledOnChannelList,\n    isMessageReceiptStatusEnabledOnChannelList,\n    showSearchIcon,\n  } = legacyConfig;\n  return {\n    common: {\n      enableUsingDefaultUserProfile: uikitOptions.common?.enableUsingDefaultUserProfile\n        ?? (typeof disableUserProfile === 'boolean'\n          ? !disableUserProfile\n          : undefined),\n    },\n    groupChannel: {\n      enableOgtag: uikitOptions.groupChannel?.enableOgtag,\n      enableMention: uikitOptions.groupChannel?.enableMention ?? isMentionEnabled,\n      enableReactions: uikitOptions.groupChannel?.enableReactions ?? isReactionEnabled,\n      enableTypingIndicator: uikitOptions.groupChannel?.enableTypingIndicator,\n      enableVoiceMessage: uikitOptions.groupChannel?.enableVoiceMessage ?? isVoiceMessageEnabled,\n      replyType: uikitOptions.groupChannel?.replyType\n        ?? (replyType != null ? getCaseResolvedReplyType(replyType).lowerCase : undefined),\n      threadReplySelectType: uikitOptions.groupChannel?.threadReplySelectType,\n      input: {\n        enableDocument: uikitOptions.groupChannel?.input?.enableDocument,\n      },\n    },\n    groupChannelList: {\n      enableTypingIndicator: uikitOptions.groupChannelList?.enableTypingIndicator ?? isTypingIndicatorEnabledOnChannelList,\n      enableMessageReceiptStatus: uikitOptions.groupChannelList?.enableMessageReceiptStatus ?? isMessageReceiptStatusEnabledOnChannelList,\n    },\n    groupChannelSettings: {\n      enableMessageSearch: uikitOptions.groupChannelSettings?.enableMessageSearch ?? showSearchIcon,\n    },\n    openChannel: {\n      enableOgtag: uikitOptions.openChannel?.enableOgtag,\n      input: {\n        enableDocument: uikitOptions.openChannel?.input?.enableDocument,\n      },\n    },\n  };\n}\n","import { GroupChannel } from '@sendbird/chat/groupChannel';\nimport { Logger } from '../SendbirdState';\n\nconst TIMEOUT = 2000;\n\n/*\n  * This is a factory function that returns a scheduler.\n  * The scheduler is a queue that calls the callback function on intervals.\n  * If interval is empty, the callback function is called immediately.\n  * If interval is not empty, the callback function is called after the interval.\n*/\nexport function schedulerFactory<T>({\n  logger,\n  timeout,\n  cb,\n}: {\n  logger: Logger;\n  timeout?: number;\n  cb: (item: T) => void;\n}) {\n  let queue: GroupChannel[] = [];\n  let interval: ReturnType<typeof setTimeout> | null = null;\n  const push = (channel: GroupChannel) => {\n    const channelPresent = queue.find((c) => c.url === channel.url);\n    if (!channelPresent) {\n      queue.push(channel);\n    } else {\n      logger.info('Channel: Mark as read already in queue', { channel });\n    }\n    // start the interval if it's not already running\n    if (interval) {\n      return;\n    }\n    const item = queue.shift();\n    if (item) {\n      cb(item as T);\n    }\n    interval = setInterval(() => {\n      if (queue.length === 0 && interval) {\n        clearInterval(interval);\n        interval = null;\n        return;\n      }\n      const item = queue.shift();\n      if (item) {\n        cb(item as T);\n      }\n    }, (timeout || TIMEOUT));\n  };\n  const clear = () => {\n    queue = [];\n    if (interval) {\n      clearInterval(interval);\n      interval = null;\n    }\n  };\n  return {\n    push,\n    clear,\n    getQueue: () => queue,\n  };\n}\n","import { DependencyList, useLayoutEffect } from 'react';\n\n// this hook accepts a callback to run component is unmounted\nexport function useUnmount(callback: () => void, deps: DependencyList = []) {\n  useLayoutEffect(() => {\n    return () => {\n      callback();\n    };\n  }, deps);\n}\n","import { useEffect, useMemo } from 'react';\nimport { GroupChannel } from '@sendbird/chat/groupChannel';\n\nimport { schedulerFactory } from './schedulerFactory';\nimport { Logger } from '../SendbirdState';\nimport { useUnmount } from '../../hooks/useUnmount';\n\nexport type MarkAsReadSchedulerType = {\n  push: (channel: GroupChannel) => void;\n  clear: () => void;\n  getQueue: () => GroupChannel[];\n};\n\ninterface DynamicParams {\n  isConnected: boolean;\n}\n\ninterface StaticParams {\n  logger: Logger;\n}\n\nexport function useMarkAsReadScheduler({\n  isConnected,\n}: DynamicParams, {\n  logger,\n}: StaticParams): MarkAsReadSchedulerType {\n  const markAsReadScheduler = useMemo(() => schedulerFactory<GroupChannel>({\n    logger,\n    cb: (channel) => {\n      try {\n        channel.markAsRead();\n      } catch (error) {\n        logger.warning('Channel: Mark as delivered failed', { channel, error });\n      }\n    },\n  }), []);\n\n  useEffect(() => {\n    // for simplicity, we clear the queue when the connection is lost\n    if (!isConnected) {\n      markAsReadScheduler.clear();\n    }\n  }, [isConnected]);\n\n  useUnmount(() => { markAsReadScheduler.clear(); });\n\n  return markAsReadScheduler;\n}\n","import { useEffect, useMemo } from 'react';\nimport { GroupChannel } from '@sendbird/chat/groupChannel';\n\nimport { schedulerFactory } from './schedulerFactory';\nimport { Logger } from '../SendbirdState';\nimport { useUnmount } from '../../hooks/useUnmount';\n\nexport type MarkAsDeliveredSchedulerType = {\n  push: (channel: GroupChannel) => void;\n  clear: () => void;\n  getQueue: () => GroupChannel[];\n};\n\ninterface DynamicParams {\n  isConnected: boolean;\n}\n\ninterface StaticParams {\n  logger: Logger;\n}\n\nexport function useMarkAsDeliveredScheduler({\n  isConnected,\n}: DynamicParams, {\n  logger,\n}: StaticParams): MarkAsDeliveredSchedulerType {\n  const markAsDeliveredScheduler = useMemo(() => schedulerFactory<GroupChannel>({\n    logger,\n    cb: (channel) => {\n      try {\n        channel.markAsDelivered();\n      } catch (error) {\n        logger.warning('Channel: Mark as delivered failed', { channel, error });\n      }\n    },\n  }), []);\n\n  useEffect(() => {\n    // for simplicity, we clear the queue when the connection is lost\n    if (!isConnected) {\n      markAsDeliveredScheduler.clear();\n    }\n  }, [isConnected]);\n\n  useUnmount(() => { markAsDeliveredScheduler.clear(); });\n\n  return markAsDeliveredScheduler;\n}\n","import './index.scss';\nimport './__experimental__typography.scss';\n\nimport React, { useEffect, useMemo, useReducer, useState } from 'react';\nimport { User } from '@sendbird/chat';\nimport { GroupChannel } from '@sendbird/chat/groupChannel';\nimport { UIKitConfigProvider, useUIKitConfig } from '@sendbird/uikit-tools';\n\nimport { SendbirdSdkContext } from './SendbirdSdkContext';\n\nimport useTheme from './hooks/useTheme';\n\nimport sdkReducers from './dux/sdk/reducers';\nimport userReducers from './dux/user/reducers';\n\nimport sdkInitialState from './dux/sdk/initialState';\nimport userInitialState from './dux/user/initialState';\n\nimport useOnlineStatus from './hooks/useOnlineStatus';\nimport useConnect from './hooks/useConnect';\nimport { LoggerFactory, LogLevel } from './Logger';\nimport pubSubFactory, { PubSubTypes } from './pubSub/index';\nimport useAppendDomNode from '../hooks/useAppendDomNode';\n\nimport { VoiceMessageProvider } from './VoiceMessageProvider';\nimport { LocalizationProvider } from './LocalizationContext';\nimport { MediaQueryProvider, useMediaQueryContext } from './MediaQueryContext';\nimport getStringSet from '../ui/Label/stringSet';\nimport {\n  DEFAULT_MULTIPLE_FILES_MESSAGE_LIMIT,\n  VOICE_RECORDER_DEFAULT_MAX,\n  VOICE_RECORDER_DEFAULT_MIN,\n} from '../utils/consts';\nimport { uikitConfigMapper } from './utils/uikitConfigMapper';\n\nimport { useMarkAsReadScheduler } from './hooks/useMarkAsReadScheduler';\nimport { ConfigureSessionTypes } from './hooks/useConnect/types';\nimport { useMarkAsDeliveredScheduler } from './hooks/useMarkAsDeliveredScheduler';\nimport { getCaseResolvedReplyType, getCaseResolvedThreadReplySelectType } from './utils/resolvedReplyType';\nimport { useUnmount } from '../hooks/useUnmount';\nimport { disconnectSdk } from './hooks/useConnect/disconnectSdk';\nimport {\n  UIKitOptions,\n  CommonUIKitConfigProps,\n  SendbirdChatInitParams,\n  CustomExtensionParams,\n  SBUEventHandlers,\n} from './types';\nimport { GlobalModalProvider } from '../hooks/useModal';\n\nexport { useSendbirdStateContext } from '../hooks/useSendbirdStateContext';\n\nexport type UserListQueryType = {\n  hasNext?: boolean;\n  next: () => Promise<Array<User>>;\n};\n\ninterface VoiceRecordOptions {\n  maxRecordingTime?: number;\n  minRecordingTime?: number;\n}\n\nexport interface ImageCompressionOptions {\n  compressionRate?: number;\n  resizingWidth?: number | string;\n  resizingHeight?: number | string;\n}\n\nexport interface SendbirdConfig {\n  logLevel?: string | Array<string>;\n  pubSub?: PubSubTypes;\n  userMention?: {\n    maxMentionCount?: number;\n    maxSuggestionCount?: number;\n  };\n  isREMUnitEnabled?: boolean;\n}\n\nexport interface SendbirdProviderProps extends CommonUIKitConfigProps, React.PropsWithChildren {\n  appId: string;\n  userId: string;\n  accessToken?: string;\n  customApiHost?: string;\n  customWebSocketHost?: string;\n  configureSession?: ConfigureSessionTypes;\n  theme?: 'light' | 'dark';\n  config?: SendbirdConfig;\n  nickname?: string;\n  colorSet?: Record<string, string>;\n  stringSet?: Record<string, string>;\n  dateLocale?: Locale;\n  profileUrl?: string;\n  voiceRecord?: VoiceRecordOptions;\n  userListQuery?(): UserListQueryType;\n  imageCompression?: ImageCompressionOptions;\n  allowProfileEdit?: boolean;\n  disableMarkAsDelivered?: boolean;\n  breakpoint?: string | boolean;\n  renderUserProfile?: () => React.ReactElement;\n  onUserProfileMessage?: (channel: GroupChannel) => void;\n  uikitOptions?: UIKitOptions;\n  isUserIdUsedForNickname?: boolean;\n  sdkInitParams?: SendbirdChatInitParams;\n  customExtensionParams?: CustomExtensionParams;\n  isMultipleFilesMessageEnabled?: boolean;\n\n  // Customer provided callbacks\n  eventHandlers?: SBUEventHandlers;\n}\n\nexport function SendbirdProvider(props: SendbirdProviderProps) {\n  const localConfigs = uikitConfigMapper({\n    legacyConfig: {\n      replyType: props.replyType,\n      isMentionEnabled: props.isMentionEnabled,\n      isReactionEnabled: props.isReactionEnabled,\n      disableUserProfile: props.disableUserProfile,\n      isVoiceMessageEnabled: props.isVoiceMessageEnabled,\n      isTypingIndicatorEnabledOnChannelList:\n        props.isTypingIndicatorEnabledOnChannelList,\n      isMessageReceiptStatusEnabledOnChannelList:\n        props.isMessageReceiptStatusEnabledOnChannelList,\n      showSearchIcon: props.showSearchIcon,\n    },\n    uikitOptions: props.uikitOptions,\n  });\n\n  return (\n    <UIKitConfigProvider\n      localConfigs={{\n        common: localConfigs?.common,\n        groupChannel: {\n          channel: localConfigs?.groupChannel,\n          channelList: localConfigs?.groupChannelList,\n          setting: localConfigs?.groupChannelSettings,\n        },\n        openChannel: {\n          channel: localConfigs?.openChannel,\n        },\n      }}\n    >\n      <SendbirdSDK {...props} />\n    </UIKitConfigProvider>\n  );\n}\nconst SendbirdSDK = ({\n  appId,\n  userId,\n  children,\n  accessToken = '',\n  customApiHost = '',\n  customWebSocketHost = '',\n  configureSession = null,\n  theme = 'light',\n  config = {},\n  nickname = '',\n  colorSet = null,\n  stringSet = null,\n  dateLocale = null,\n  profileUrl = '',\n  voiceRecord,\n  userListQuery = null,\n  imageCompression = {},\n  allowProfileEdit = false,\n  disableMarkAsDelivered = false,\n  renderUserProfile = null,\n  onUserProfileMessage = null,\n  breakpoint = false,\n  isUserIdUsedForNickname = true,\n  sdkInitParams,\n  customExtensionParams,\n  isMultipleFilesMessageEnabled = false,\n  eventHandlers,\n}: SendbirdProviderProps): React.ReactElement => {\n  const {\n    logLevel = '',\n    userMention = {},\n    isREMUnitEnabled = false,\n    pubSub: customPubSub,\n  } = config;\n  const { isMobile } = useMediaQueryContext();\n  const [logger, setLogger] = useState(LoggerFactory(logLevel as LogLevel));\n  const [pubSub] = useState(() => customPubSub ?? pubSubFactory());\n  const [sdkStore, sdkDispatcher] = useReducer(sdkReducers, sdkInitialState);\n  const [userStore, userDispatcher] = useReducer(userReducers, userInitialState);\n\n  const { configs, configsWithAppAttr, initDashboardConfigs } = useUIKitConfig();\n  const sdkInitialized = sdkStore.initialized;\n  const sdk = sdkStore?.sdk;\n  const {\n    uploadSizeLimit,\n    multipleFilesMessageFileCountLimit,\n  } = sdk?.appInfo ?? {};\n\n  useTheme(colorSet);\n\n  const reconnect = useConnect({\n    appId,\n    userId,\n    accessToken,\n    isUserIdUsedForNickname,\n    isMobile,\n  }, {\n    logger,\n    nickname,\n    profileUrl,\n    configureSession,\n    customApiHost,\n    customWebSocketHost,\n    sdkInitParams,\n    customExtensionParams,\n    sdk,\n    sdkDispatcher,\n    userDispatcher,\n    initDashboardConfigs,\n  });\n\n  useUnmount(() => {\n    if (typeof sdk.disconnect === 'function') {\n      disconnectSdk({\n        logger,\n        sdkDispatcher,\n        userDispatcher,\n        sdk,\n      });\n    }\n  }, [sdk.disconnect]);\n\n  // to create a pubsub to communicate between parent and child\n  useEffect(() => {\n    setLogger(LoggerFactory(logLevel as LogLevel));\n  }, [logLevel]);\n\n  useAppendDomNode([\n    'sendbird-modal-root',\n    'sendbird-dropdown-portal',\n    'sendbird-emoji-list-portal',\n  ], 'body');\n\n  // should move to reducer\n  const [currentTheme, setCurrentTheme] = useState(theme);\n  useEffect(() => {\n    setCurrentTheme(theme);\n  }, [theme]);\n\n  useEffect(() => {\n    const body = document.querySelector('body');\n    body.classList.remove('sendbird-experimental__rem__units');\n    if (isREMUnitEnabled) {\n      body.classList.add('sendbird-experimental__rem__units');\n    }\n  }, [isREMUnitEnabled]);\n  // add-remove theme from body\n  useEffect(() => {\n    logger.info('Setup theme', `Theme: ${currentTheme}`);\n    try {\n      const body = document.querySelector('body');\n      body.classList.remove('sendbird-theme--light');\n      body.classList.remove('sendbird-theme--dark');\n      body.classList.add(`sendbird-theme--${currentTheme || 'light'}`);\n      logger.info('Finish setup theme');\n      // eslint-disable-next-line no-empty\n    } catch (e) {\n      logger.warning('Setup theme failed', `${e}`);\n    }\n    return () => {\n      try {\n        const body = document.querySelector('body');\n        body.classList.remove('sendbird-theme--light');\n        body.classList.remove('sendbird-theme--dark');\n        // eslint-disable-next-line no-empty\n      } catch { }\n    };\n  }, [currentTheme]);\n\n  const isOnline = useOnlineStatus(sdkStore.sdk, logger);\n\n  const markAsReadScheduler = useMarkAsReadScheduler({ isConnected: isOnline }, { logger });\n  const markAsDeliveredScheduler = useMarkAsDeliveredScheduler({ isConnected: isOnline }, { logger });\n\n  const localeStringSet = React.useMemo(() => {\n    if (!stringSet) {\n      return getStringSet('en');\n    }\n    return {\n      ...getStringSet('en'),\n      ...stringSet,\n    };\n  }, [stringSet]);\n\n  /**\n   * Feature Configuration - TODO\n   * This will be moved into the UIKitConfigProvider, aftering Dashboard applies\n   */\n  const uikitMultipleFilesMessageLimit = useMemo(() => {\n    return Math.min(DEFAULT_MULTIPLE_FILES_MESSAGE_LIMIT, multipleFilesMessageFileCountLimit ?? Number.MAX_SAFE_INTEGER);\n  }, [multipleFilesMessageFileCountLimit]);\n  const uikitUploadSizeLimit = useMemo(() => {\n    return uploadSizeLimit;\n  }, [uploadSizeLimit]);\n\n  return (\n    <SendbirdSdkContext.Provider\n      value={{\n        stores: {\n          sdkStore,\n          userStore,\n        },\n        dispatchers: {\n          sdkDispatcher,\n          userDispatcher,\n          reconnect,\n        },\n        config: {\n          disableMarkAsDelivered,\n          renderUserProfile,\n          onUserProfileMessage,\n          allowProfileEdit,\n          isOnline,\n          userId,\n          appId,\n          accessToken,\n          theme: currentTheme,\n          setCurrentTheme,\n          setCurrenttheme: setCurrentTheme, // deprecated: typo\n          isMultipleFilesMessageEnabled,\n          uikitUploadSizeLimit,\n          uikitMultipleFilesMessageLimit,\n          userListQuery,\n          logger,\n          pubSub,\n          imageCompression: {\n            compressionRate: 0.7,\n            ...imageCompression,\n          },\n          voiceRecord: {\n            maxRecordingTime: voiceRecord?.maxRecordingTime ?? VOICE_RECORDER_DEFAULT_MAX,\n            minRecordingTime: voiceRecord?.minRecordingTime ?? VOICE_RECORDER_DEFAULT_MIN,\n          },\n          userMention: {\n            maxMentionCount: userMention?.maxMentionCount || 10,\n            maxSuggestionCount: userMention?.maxSuggestionCount || 15,\n          },\n          markAsReadScheduler,\n          markAsDeliveredScheduler,\n          // From UIKitConfigProvider.localConfigs\n          disableUserProfile:\n            !configs.common.enableUsingDefaultUserProfile,\n          isReactionEnabled:\n            sdkInitialized && configsWithAppAttr(sdk).groupChannel.channel.enableReactions,\n          isMentionEnabled:\n            configs.groupChannel.channel.enableMention,\n          isVoiceMessageEnabled:\n            configs.groupChannel.channel.enableVoiceMessage,\n          replyType:\n            getCaseResolvedReplyType(configs.groupChannel.channel.replyType).upperCase,\n          isTypingIndicatorEnabledOnChannelList:\n            configs.groupChannel.channelList.enableTypingIndicator,\n          isMessageReceiptStatusEnabledOnChannelList:\n            configs.groupChannel.channelList.enableMessageReceiptStatus,\n          showSearchIcon:\n            sdkInitialized && configsWithAppAttr(sdk).groupChannel.setting.enableMessageSearch,\n          // Remote configs set from dashboard by UIKit feature configuration\n          groupChannel: {\n            enableOgtag:\n              sdkInitialized && configsWithAppAttr(sdk).groupChannel.channel.enableOgtag,\n            enableTypingIndicator: configs.groupChannel.channel.enableTypingIndicator,\n            enableDocument: configs.groupChannel.channel.input.enableDocument,\n            threadReplySelectType: getCaseResolvedThreadReplySelectType(configs.groupChannel.channel.threadReplySelectType).lowerCase,\n          },\n          openChannel: {\n            enableOgtag:\n              sdkInitialized && configsWithAppAttr(sdk).openChannel.channel.enableOgtag,\n            enableDocument: configs.openChannel.channel.input.enableDocument,\n          },\n        },\n        eventHandlers,\n      }}\n    >\n      <MediaQueryProvider logger={logger} breakpoint={breakpoint}>\n        <LocalizationProvider stringSet={localeStringSet} dateLocale={dateLocale}>\n          <VoiceMessageProvider isVoiceMessageEnabled={configs.groupChannel.channel.enableVoiceMessage}>\n            <GlobalModalProvider>\n              {children}\n            </GlobalModalProvider>\n          </VoiceMessageProvider>\n        </LocalizationProvider>\n      </MediaQueryProvider>\n    </SendbirdSdkContext.Provider>\n  );\n};\n\nexport default SendbirdProvider;\n"],"names":["isEmpty","obj","undefined","prop","hasOwnProperty","JSON","stringify","useTheme","overrides","useLayoutEffect","cssVars","variables","__assign","SDK_ACTIONS","INIT_SDK","SET_SDK_LOADING","RESET_SDK","SDK_ERROR","initialState","initialized","loading","sdk","error","reducer","state","action","match","with","type","_a","payload","otherwise","user","USER_ACTIONS","INIT_USER","RESET_USER","UPDATE_USER_INFO","useOnlineStatus","logger","_c","useState","_b","window","navigator","onLine","isOnline","setIsOnline","useEffect","uniqueHandlerId","uuidv4","warning","handler","ConnectionHandler","onDisconnected","onReconnectStarted","onReconnectSucceeded","onReconnectFailed","reconnect","addConnectionHandler","info","removeConnectionHandler","tryReconnect","connectionState","addEventListener","removeEventListener","body","document","querySelector","classList","add","e","remove","disconnectSdk","sdkDispatcher","userDispatcher","Promise","resolve","disconnect","then","finally","APP_VERSION_STRING","getMissingParamError","userId","appId","concat","getConnectSbError","code","message","setUpParams","customApiHost","customWebSocketHost","sdkInitParams","params","modules","GroupChannelModule","OpenChannelModule","newInstance","newSdk","SendbirdChat","init","setUpConnection","initDashboardConfigs","configureSession","nickname","profileUrl","accessToken","isUserIdUsedForNickname","customExtensionParams","isMobile","reject","call","newSdk_1","sessionHandler","setSessionHandler","version","_d","addSendbirdExtensions","product","_e","SendbirdProduct","UIKIT_CHAT","platform","_f","SendbirdPlatform","JS","_g","DeviceOsPlatform","MOBILE_WEB","_h","WEB","addExtension","connectCbSucess_1","__awaiter","_this","config","catch","isTextuallyNull","updateCurrentUserInfo","namedUser","connectCbError_1","errorMessage","_j","connect","res","err","_k","sent","useConnect","triggerTypes","staticTypes","useCallback","LOG_LEVELS","DEBUG","WARNING","ERROR","INFO","ALL","colorLog","level","printLog","title","description","console","log","apply","__spreadArray","Date","toISOString","getDefaultLogger","noop","LoggerFactory","lvl","customInterface","logInterface","lvlArray","Array","isArray","applyLog","lgLvl","_i","arguments","length","reduce","accumulator","currentLvl","pubSubFactory","topics","hOP","__getTopics","subscribe","topic","listener","index","push","splice","publish","forEach","item","useAppendDomNode","ids","rootSelector","root","id","elem","createElement","setAttribute","appendChild","target","getElementById","removeChild","VoiceMessageProvider","children","isVoiceMessageEnabled","React","VoicePlayerProvider","VoiceRecorderProvider","uikitConfigMapper","legacyConfig","_1","uikitOptions","replyType","isMentionEnabled","isReactionEnabled","disableUserProfile","isTypingIndicatorEnabledOnChannelList","isMessageReceiptStatusEnabledOnChannelList","showSearchIcon","common","enableUsingDefaultUserProfile","groupChannel","enableOgtag","enableMention","enableReactions","enableTypingIndicator","enableVoiceMessage","_l","_o","_m","getCaseResolvedReplyType","lowerCase","threadReplySelectType","_p","input","enableDocument","_q","_r","groupChannelList","_s","_t","enableMessageReceiptStatus","_u","_v","groupChannelSettings","enableMessageSearch","_w","_x","openChannel","_y","_z","_0","TIMEOUT","schedulerFactory","timeout","cb","queue","interval","channel","channelPresent","find","c","url","shift","setInterval","clearInterval","clear","getQueue","useUnmount","callback","deps","useMarkAsReadScheduler","isConnected","markAsReadScheduler","useMemo","markAsRead","useMarkAsDeliveredScheduler","markAsDeliveredScheduler","markAsDelivered","SendbirdProvider","props","localConfigs","UIKitConfigProvider","channelList","setting","SendbirdSDK","theme","colorSet","stringSet","dateLocale","voiceRecord","userListQuery","imageCompression","allowProfileEdit","disableMarkAsDelivered","renderUserProfile","onUserProfileMessage","breakpoint","isMultipleFilesMessageEnabled","eventHandlers","logLevel","userMention","_2","isREMUnitEnabled","customPubSub","useMediaQueryContext","_3","setLogger","pubSub","_4","useReducer","sdkReducers","sdkInitialState","sdkStore","_5","userReducers","userInitialState","userStore","_6","useUIKitConfig","configs","configsWithAppAttr","sdkInitialized","_7","appInfo","uploadSizeLimit","multipleFilesMessageFileCountLimit","_8","currentTheme","setCurrentTheme","localeStringSet","getStringSet","uikitMultipleFilesMessageLimit","Math","min","DEFAULT_MULTIPLE_FILES_MESSAGE_LIMIT","Number","MAX_SAFE_INTEGER","uikitUploadSizeLimit","SendbirdSdkContext","Provider","value","stores","dispatchers","setCurrenttheme","compressionRate","maxRecordingTime","VOICE_RECORDER_DEFAULT_MAX","minRecordingTime","VOICE_RECORDER_DEFAULT_MIN","maxMentionCount","maxSuggestionCount","upperCase","getCaseResolvedThreadReplySelectType","MediaQueryProvider","LocalizationProvider","GlobalModalProvider"],"mappings":"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"}