import React__default, { useRef, useState, useMemo } from 'react';
import { i as isSameDay } from '../../index-682a192c.js';
import Icon, { IconTypes, IconColors } from '../../ui/Icon.js';
import PlaceHolder, { PlaceHolderTypes } from '../../ui/PlaceHolder.js';
import { u as useOpenChannelContext, c as compareMessagesForGrouping } from '../../OpenChannelProvider-9818f9ed.js';
import MessagOpenChannelMessageeHoc from './OpenChannelMessage.js';
import { MessageProvider } from '../../Message/context.js';
import { useSendbirdStateContext } from '../../useSendbirdStateContext.js';
import { a as useHandleOnScrollCallback } from '../../index-494f9e79.js';
import '../../index-2d27aeef.js';
import '../../index-e4277f9c.js';
import 'prop-types';
import '../../tslib.es6-c2fb729e.js';
import '../../LocalizationContext-287ee149.js';
import '../../stringSet-6422c6b9.js';
import '../../index-92741c7e.js';
import '../../ui/Loader.js';
import '../../UserProfileContext-2001a468.js';
import '../../compareIds-7e517404.js';
import '../../pubSub/topics.js';
import '@sendbird/chat';
import '@sendbird/chat/openChannel';
import '../../uuid-c15b8b3b.js';
import '../../ui/OpenchannelUserMessage.js';
import '../../_rollupPluginBabelHelpers-e92eb032.js';
import '../../ui/Avatar.js';
import '../../ui/ImageRenderer.js';
import '../../ui/ContextMenu.js';
import 'react-dom';
import '../../ui/SortByRow.js';
import '../../index-776554c0.js';
import '../../utils/message/getOutgoingMessageState.js';
import '../../index-09847c0f.js';
import '../../ui/IconButton.js';
import '../../ui/UserProfile.js';
import '../../sendbirdSelectors.js';
import '../../utils-6c50a6d1.js';
import '../../ui/Button.js';
import '../../types-9d43ac6e.js';
import '../../utils-fa321757.js';
import '../../index-686a551d.js';
import '../../MediaQueryContext-114ca049.js';
import '../../useLongPress-f8655a14.js';
import '../../ui/OpenChannelAdminMessage.js';
import '../../ui/OpenchannelOGMessage.js';
import '../../ui/LinkLabel.js';
import '../../index-a0638563.js';
import '../../tokenize-eae44765.js';
import '../../ui/MentionLabel.js';
import '../../ui/OpenchannelThumbnailMessage.js';
import '../../ui/OpenchannelFileMessage.js';
import '../../ui/TextButton.js';
import '../../color-57373b4c.js';
import '../../ui/DateSeparator.js';
import '../../ui/MessageInput.js';
import '../../const-93731a4c.js';
import '../../const-73db0277.js';
import '../../index-6b3b1eca.js';
import 'dompurify';
import '../../consts-57c888b9.js';
import '../../consts-4ec7d640.js';
import '../../consts-be37687e.js';
import '../../index-0f017704.js';
import '../../index-04bd1a59.js';
import '../../consts-d9c5f25a.js';
import '../../ui/Modal.js';
import '../../stringFormatterUtils-abbe70ba.js';
import '../../withSendbird.js';

function OpenchannelMessageList(props, ref) {
  var _a = useOpenChannelContext(),
    _b = _a.isMessageGroupingEnabled,
    isMessageGroupingEnabled = _b === void 0 ? true : _b,
    allMessages = _a.allMessages,
    hasMore = _a.hasMore,
    onScroll = _a.onScroll;
  var store = useSendbirdStateContext();
  var userId = store.config.userId;
  var scrollRef = ref || useRef(null);
  var _c = useState(false),
    showScrollDownButton = _c[0],
    setShowScrollDownButton = _c[1];
  var scrollToBottom = function () {
    if (scrollRef && scrollRef.current) {
      scrollRef.current.scrollTo(0, scrollRef.current.scrollHeight);
      setShowScrollDownButton(false);
    }
  };
  var handleOnScroll = useHandleOnScrollCallback({
    setShowScrollDownButton: setShowScrollDownButton,
    hasMore: hasMore,
    onScroll: onScroll,
    scrollRef: scrollRef
  });
  var memoizedMessageList = useMemo(function () {
    var _a;
    if (allMessages.length > 0) {
      return allMessages.map(function (message, index) {
        var _a;
        var previousMessage = allMessages[index - 1];
        var nextMessage = allMessages[index - 1];
        var previousMessageCreatedAt = previousMessage && previousMessage.createdAt;
        var currentCreatedAt = message === null || message === void 0 ? void 0 : message.createdAt;
        // https://stackoverflow.com/a/41855608
        var hasSeparator = !(previousMessageCreatedAt && isSameDay(currentCreatedAt, previousMessageCreatedAt));
        var _b = isMessageGroupingEnabled ? compareMessagesForGrouping(previousMessage, message, nextMessage) : [false, false],
          chainTop = _b[0],
          chainBottom = _b[1];
        var isByMe = ((_a = message === null || message === void 0 ? void 0 : message.sender) === null || _a === void 0 ? void 0 : _a.userId) === userId;
        var key = (message === null || message === void 0 ? void 0 : message.messageId) || (message === null || message === void 0 ? void 0 : message.reqId);
        return /*#__PURE__*/React__default.createElement(MessageProvider, {
          message: message,
          isByMe: isByMe,
          key: key
        }, /*#__PURE__*/React__default.createElement(MessagOpenChannelMessageeHoc, {
          message: message,
          chainTop: chainTop,
          chainBottom: chainBottom,
          hasSeparator: hasSeparator,
          renderMessage: props === null || props === void 0 ? void 0 : props.renderMessage
        }));
      });
    }
    return ((_a = props === null || props === void 0 ? void 0 : props.renderPlaceHolderEmptyList) === null || _a === void 0 ? void 0 : _a.call(props)) || /*#__PURE__*/React__default.createElement(PlaceHolder, {
      className: "sendbird-openchannel-conversation-scroll__container__place-holder",
      type: PlaceHolderTypes.NO_MESSAGES
    });
  }, [allMessages]);
  return /*#__PURE__*/React__default.createElement("div", {
    className: "sendbird-openchannel-conversation-scroll"
  }, /*#__PURE__*/React__default.createElement("div", {
    className: "sendbird-openchannel-conversation-scroll__container"
  }, /*#__PURE__*/React__default.createElement("div", {
    className: "sendbird-openchannel-conversation-scroll__container__padding"
  }), /*#__PURE__*/React__default.createElement("div", {
    className: ['sendbird-openchannel-conversation-scroll__container__item-container', allMessages.length > 0 ? '' : 'no-messages'].join(' '),
    onScroll: handleOnScroll,
    ref: scrollRef
  }, memoizedMessageList)), showScrollDownButton && /*#__PURE__*/React__default.createElement("div", {
    className: "sendbird-openchannel-conversation-scroll__container__scroll-bottom-button",
    onClick: scrollToBottom,
    onKeyDown: scrollToBottom,
    tabIndex: 0,
    role: "button"
  }, /*#__PURE__*/React__default.createElement(Icon, {
    width: "24px",
    height: "24px",
    type: IconTypes.CHEVRON_DOWN,
    fillColor: IconColors.CONTENT
  })));
}
var OpenChannelMessageList = /*#__PURE__*/React__default.forwardRef(OpenchannelMessageList);

export { OpenChannelMessageList as default };
//# sourceMappingURL=OpenChannelMessageList.js.map
