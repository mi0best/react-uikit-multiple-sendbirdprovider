import type { SnakeCasedPropertiesDeep } from 'type-fest';
interface ChannelInputConfig {
    camera: {
        enablePhoto: boolean;
        enableVideo: boolean;
    };
    gallery: {
        enablePhoto: boolean;
        enableVideo: boolean;
    };
    enableDocument: boolean;
}
interface CommonConfig {
    enableUsingDefaultUserProfile: boolean;
}
interface GroupChannelConfig {
    channel: {
        enableOgtag: boolean;
        enableTypingIndicator: boolean;
        enableReactions: boolean;
        enableMention: boolean;
        replyType: 'none' | 'quote_reply' | 'thread';
        threadReplySelectType: 'thread' | 'parent';
        enableVoiceMessage: boolean;
        input: ChannelInputConfig;
    };
    channelList: {
        enableTypingIndicator: boolean;
        enableMessageReceiptStatus: boolean;
    };
    setting: {
        enableMessageSearch: boolean;
    };
}
interface OpenChannelConfig {
    channel: {
        enableOgtag: boolean;
        input: ChannelInputConfig;
    };
}
export interface SBUConfig {
    common: CommonConfig;
    groupChannel: GroupChannelConfig;
    openChannel: OpenChannelConfig;
}
export interface SBUConfigPayload {
    updatedAt: number;
    configuration: SBUConfig;
}
export type SBUConfigRaw = SnakeCasedPropertiesDeep<SBUConfig>;
export type SBUConfigPayloadRaw = {
    updated_at: number;
    configuration: SBUConfigRaw;
};
export {};
