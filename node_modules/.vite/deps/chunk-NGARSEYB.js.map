{
  "version": 3,
  "sources": ["../../@sendbird/src/lib/pubSub/topics.ts", "../../@sendbird/src/lib/UserProfileContext.tsx", "../../@sendbird/src/utils/numberToPx.ts", "../../@sendbird/src/ui/ImageRenderer/utils.ts", "../../@sendbird/src/ui/ImageRenderer/useDynamicSideLength.ts", "../../@sendbird/src/ui/ImageRenderer/index.tsx", "../../@sendbird/src/utils/pxToNumber.ts", "../../@sendbird/src/ui/Avatar/index.tsx", "../../@sendbird/src/lib/selectors.ts", "../../@sendbird/src/ui/Avatar/MutedAvatarOverlay.tsx", "../../@sendbird/src/ui/Checkbox/index.tsx", "../../@sendbird/src/ui/UserProfile/index.tsx", "../../@sendbird/src/ui/SortByRow/index.tsx", "../../@sendbird/src/ui/ContextMenu/MenuItems.tsx", "../../@sendbird/src/ui/ContextMenu/EmojiListItems.tsx", "../../@sendbird/src/ui/ContextMenu/index.tsx", "../../@sendbird/src/ui/UserListItem/index.tsx", "../../@sendbird/src/ui/ChannelAvatar/utils.ts", "../../@sendbird/src/ui/ChannelAvatar/index.tsx", "../../@sendbird/node_modules/@babel/runtime/helpers/esm/typeof.js", "../../@sendbird/node_modules/date-fns/esm/_lib/requiredArgs/index.js", "../../@sendbird/node_modules/date-fns/esm/toDate/index.js", "../../@sendbird/node_modules/date-fns/esm/isDate/index.js", "../../@sendbird/node_modules/date-fns/esm/isValid/index.js", "../../@sendbird/node_modules/date-fns/esm/_lib/toInteger/index.js", "../../@sendbird/node_modules/date-fns/esm/addMilliseconds/index.js", "../../@sendbird/node_modules/date-fns/esm/subMilliseconds/index.js", "../../@sendbird/node_modules/date-fns/esm/_lib/getUTCDayOfYear/index.js", "../../@sendbird/node_modules/date-fns/esm/_lib/startOfUTCISOWeek/index.js", "../../@sendbird/node_modules/date-fns/esm/_lib/getUTCISOWeekYear/index.js", "../../@sendbird/node_modules/date-fns/esm/_lib/startOfUTCISOWeekYear/index.js", "../../@sendbird/node_modules/date-fns/esm/_lib/getUTCISOWeek/index.js", "../../@sendbird/node_modules/date-fns/esm/_lib/defaultOptions/index.js", "../../@sendbird/node_modules/date-fns/esm/_lib/startOfUTCWeek/index.js", "../../@sendbird/node_modules/date-fns/esm/_lib/getUTCWeekYear/index.js", "../../@sendbird/node_modules/date-fns/esm/_lib/startOfUTCWeekYear/index.js", "../../@sendbird/node_modules/date-fns/esm/_lib/getUTCWeek/index.js", "../../@sendbird/node_modules/date-fns/esm/_lib/addLeadingZeros/index.js", "../../@sendbird/node_modules/date-fns/esm/_lib/format/lightFormatters/index.js", "../../@sendbird/node_modules/date-fns/esm/_lib/format/formatters/index.js", "../../@sendbird/node_modules/date-fns/esm/_lib/format/longFormatters/index.js", "../../@sendbird/node_modules/date-fns/esm/_lib/getTimezoneOffsetInMilliseconds/index.js", "../../@sendbird/node_modules/date-fns/esm/_lib/protectedTokens/index.js", "../../@sendbird/node_modules/date-fns/esm/format/index.js", "../../@sendbird/src/ui/Loader/index.tsx", "../../@sendbird/node_modules/date-fns/esm/startOfDay/index.js", "../../@sendbird/node_modules/date-fns/esm/isSameDay/index.js", "../../@sendbird/node_modules/date-fns/esm/isToday/index.js", "../../@sendbird/node_modules/date-fns/esm/isSameYear/index.js", "../../@sendbird/node_modules/date-fns/esm/isThisYear/index.js", "../../@sendbird/node_modules/date-fns/esm/addDays/index.js", "../../@sendbird/node_modules/date-fns/esm/subDays/index.js", "../../@sendbird/node_modules/date-fns/esm/isYesterday/index.js", "../../@sendbird/src/modules/ChannelList/components/ChannelPreview/utils.ts", "../../@sendbird/src/ui/MessageStatus/index.tsx", "../../@sendbird/src/ui/MentionUserLabel/consts.ts", "../../@sendbird/src/utils/color.ts", "../../@sendbird/src/ui/TextButton/index.tsx", "../../@sendbird/src/modules/Channel/context/const.ts", "../../@sendbird/src/modules/Channel/context/utils.ts", "../../@sendbird/src/modules/Channel/context/dux/actionTypes.ts", "../../@sendbird/src/modules/internalInterfaces.ts", "../../@sendbird/src/modules/Thread/context/utils.ts", "../../@sendbird/src/modules/Channel/context/hooks/useSendMultipleFilesMessage.ts", "../../@sendbird/src/utils/compareIds.ts", "../../@sendbird/src/utils/getIsReactionEnabled.ts", "../../@sendbird/src/modules/Channel/context/dux/initialState.ts", "../../@sendbird/src/modules/Channel/context/dux/reducers.ts", "../../@sendbird/src/modules/Channel/context/hooks/useHandleChannelEvents.ts", "../../@sendbird/src/modules/Channel/context/hooks/useGetChannel.js", "../../@sendbird/src/modules/Channel/context/hooks/useInitialMessagesFetch.ts", "../../@sendbird/src/modules/Channel/context/hooks/useReconnectOnIdle.ts", "../../@sendbird/src/modules/Channel/context/hooks/useHandleReconnect.ts", "../../@sendbird/src/modules/Channel/context/hooks/useScrollCallback.ts", "../../@sendbird/src/modules/Channel/context/hooks/useScrollDownCallback.js", "../../@sendbird/src/modules/Channel/context/hooks/useDeleteMessageCallback.js", "../../@sendbird/src/modules/Channel/context/hooks/useUpdateMessageCallback.js", "../../@sendbird/src/modules/Channel/context/hooks/useResendMessageCallback.js", "../../@sendbird/src/modules/Channel/context/hooks/useSendMessageCallback.js", "../../@sendbird/src/modules/Channel/context/hooks/useSendFileMessageCallback.js", "../../@sendbird/src/modules/Channel/context/hooks/useToggleReactionCallback.js", "../../@sendbird/src/modules/Channel/context/hooks/useScrollToMessage.ts", "../../@sendbird/src/modules/Channel/context/hooks/useSendVoiceMessageCallback.ts", "../../@sendbird/src/modules/Channel/context/hooks/useHandleChannelPubsubEvents.ts", "../../@sendbird/src/modules/Channel/context/ChannelProvider.tsx", "../../@sendbird/src/modules/Channel/components/TypingIndicator.tsx", "../../@sendbird/src/hooks/useLongPress.tsx", "../../@sendbird/src/ui/PlaceHolder/index.tsx"],
  "sourcesContent": ["import { ObjectValues } from '../../utils/typeHelpers/objectValues';\n\nexport const PUBSUB_TOPICS = {\n  // Group Channel\n  USER_UPDATED: 'USER_UPDATED',\n  SEND_MESSAGE_START: 'SEND_MESSAGE_START',\n  SEND_MESSAGE_FAILED: 'SEND_MESSAGE_FAILED',\n  SEND_USER_MESSAGE: 'SEND_USER_MESSAGE',\n  SEND_FILE_MESSAGE: 'SEND_FILE_MESSAGE',\n  ON_FILE_INFO_UPLOADED: 'ON_FILE_INFO_UPLOADED',\n  UPDATE_USER_MESSAGE: 'UPDATE_USER_MESSAGE',\n  DELETE_MESSAGE: 'DELETE_MESSAGE',\n  LEAVE_CHANNEL: 'LEAVE_CHANNEL',\n  CREATE_CHANNEL: 'CREATE_CHANNEL',\n  // Open Channel\n  UPDATE_OPEN_CHANNEL: 'UPDATE_OPEN_CHANNEL',\n} as const;\nexport type pubSubTopic = ObjectValues<typeof PUBSUB_TOPICS>;\n\nexport default PUBSUB_TOPICS;\n", "import React from 'react';\nimport type { GroupChannel } from '@sendbird/chat/groupChannel';\nimport type { RenderUserProfileProps } from '../types';\n\ninterface UserProfileContextInterface {\n  disableUserProfile: boolean;\n  isOpenChannel: boolean;\n  renderUserProfile?: (props: RenderUserProfileProps) => React.ReactElement;\n  onUserProfileMessage?: (channel: GroupChannel) => void;\n}\n\n/**\n * user profile goes deep inside the component tree\n * use this context as a short circuit to send in values\n */\nconst UserProfileContext = React.createContext<UserProfileContextInterface>({\n  disableUserProfile: true,\n  isOpenChannel: false,\n  renderUserProfile: null,\n  onUserProfileMessage: null,\n});\n\ntype UserProfileProviderProps = React.PropsWithChildren<{\n  disableUserProfile?: boolean;\n  isOpenChannel?: boolean;\n  renderUserProfile?: (props: RenderUserProfileProps) => React.ReactElement;\n  onUserProfileMessage?: (channel: GroupChannel) => void;\n}>;\n\nconst UserProfileProvider = ({\n  isOpenChannel = false,\n  disableUserProfile = false,\n  renderUserProfile = null,\n  onUserProfileMessage = null,\n  children,\n}: UserProfileProviderProps) => {\n  return (\n    <UserProfileContext.Provider\n      value={{\n        isOpenChannel,\n        disableUserProfile,\n        renderUserProfile,\n        onUserProfileMessage,\n      }}\n    >\n      {children}\n    </UserProfileContext.Provider>\n  );\n};\n\nexport { UserProfileContext, UserProfileProvider };\n", "export default (value: string | number): string => {\n  return typeof value === 'number' ? `${value}px` : value;\n};\n", "import numberToPx from '../../utils/numberToPx';\n\nexport function getDynamicMinLengthInPx(\n  sideLength: string | number,\n  maxSideLength: string | null,\n  defaultMinLength: string,\n): string {\n  return `min(${maxSideLength ?? defaultMinLength}, ${numberToPx(sideLength) ?? defaultMinLength})`;\n}\n", "import { useMemo } from 'react';\nimport { getDynamicMinLengthInPx } from './utils';\n\ninterface DynamicSideLengthProps {\n  width: string | number;\n  height: string | number;\n  maxSideLength: string | null;\n  defaultMinLength: string\n}\n\nexport function useDynamicSideLength({\n  width,\n  height,\n  maxSideLength,\n  defaultMinLength,\n}: DynamicSideLengthProps): string[] {\n\n  const dynamicMinWidth = useMemo(() => {\n    return getDynamicMinLengthInPx(width, maxSideLength, defaultMinLength);\n  }, [width]);\n\n  const dynamicMinHeight = useMemo(() => {\n    return getDynamicMinLengthInPx(height, maxSideLength, defaultMinLength);\n  }, [height]);\n\n  return [dynamicMinWidth, dynamicMinHeight];\n}\n", "import React, { useState, useMemo, ReactElement } from 'react';\n\nimport './index.scss';\nimport numberToPx from '../../utils/numberToPx';\nimport { useDynamicSideLength } from './useDynamicSideLength';\n\n/*\n  ImageRenderer displays image with url or source\n  it checks if the source exist with img tag first\n  if it exists onLoad is called, if not onError is called\n  and those properties switch img tag to real purposing element\n*/\n\nexport function getBorderRadiusForImageRenderer(\n  circle = false,\n  borderRadius: string | number = null,\n): string {\n  return circle ? '50%' : numberToPx(borderRadius);\n}\n\nexport function getBorderRadiusForMultipleImageRenderer(\n  borderRadius: string | number,\n  index: number,\n  totalCount: number,\n): string {\n  const value: number = parseInt(borderRadius);\n  const lastIndex: number = totalCount - 1;\n  const topLeft: string = index === 0 ? value * 2 : value;\n  const topRight: string = index === 1 ? value * 2 : value;\n  const bottomRight: string = index === lastIndex ? value * 2 : value;\n  const bottomLeft: string = index === lastIndex - 1 ? value * 2 : value;\n  return `${topLeft}px ${topRight}px ${bottomRight}px ${bottomLeft}px`;\n}\n\nexport interface ImageRendererProps {\n  className?: string | Array<string>;\n  url: string;\n  alt?: string;\n  width?: string | number;\n  maxSideLength?: string;\n  height?: string | number;\n  circle?: boolean;\n  fixedSize?: boolean;\n  placeHolder?: ((props: { style: { [key: string]: string | number } }) => ReactElement) | ReactElement;\n  defaultComponent?: (() => ReactElement) | ReactElement;\n  borderRadius?: string | number;\n  onLoad?: () => void;\n  onError?: () => void;\n  shadeOnHover?: boolean;\n  isUploaded?: boolean;\n}\n\nconst ImageRenderer = ({\n  className = '',\n  url,\n  alt = '',\n  width = null,\n  maxSideLength = null,\n  height = null,\n  circle = false,\n  fixedSize = false,\n  placeHolder = null,\n  defaultComponent = null,\n  borderRadius = null,\n  onLoad = () => { /* noop */ },\n  onError = () => { /* noop */ },\n  shadeOnHover,\n  isUploaded = true,\n}: ImageRendererProps): ReactElement => {\n  const [showDefaultComponent, setShowDefaultComponent] = useState(false);\n  const [showPlaceHolder, setShowPlaceHolder] = useState(true);\n  const [dynamicMinWidth, dynamicMinHeight] = useDynamicSideLength({\n    width,\n    height,\n    maxSideLength,\n    defaultMinLength: '400px',\n  });\n  const DefaultComponent = useMemo(() => {\n    return typeof defaultComponent === 'function'\n      ? defaultComponent()\n      : defaultComponent;\n  }, [defaultComponent]);\n\n  const PlaceHolder = useMemo(() => {\n    return (placeHolder && typeof placeHolder === 'function')\n      ? placeHolder({\n        style: {\n          width: '100%',\n          minWidth: dynamicMinWidth,\n          maxWidth: fixedSize ? dynamicMinWidth : '400px',\n          height: dynamicMinHeight,\n          position: 'absolute',\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n        },\n      })\n      : null;\n  }, [placeHolder]);\n\n  const HiddenImageLoader = useMemo(() => {\n    setShowDefaultComponent(false);\n    // reset the state when url is changed\n    return (\n      <img\n        className=\"sendbird-image-renderer__hidden-image-loader\"\n        src={url}\n        alt={alt}\n        onLoad={() => {\n          setShowPlaceHolder(false);\n          onLoad();\n        }}\n        onError={() => {\n          setShowDefaultComponent(true);\n          onError();\n        }}\n      />\n    );\n  }, [url]);\n\n  return dynamicMinWidth && dynamicMinHeight && (\n    <div\n      className={[\n        ...(Array.isArray(className) ? className : [className]),\n        'sendbird-image-renderer',\n      ].join(' ')}\n      style={{\n        width: '100%',\n        minWidth: dynamicMinWidth,\n        maxWidth: fixedSize ? dynamicMinWidth : '400px',\n        height: dynamicMinHeight,\n      }}\n    >\n      {showPlaceHolder && PlaceHolder}\n      {\n        showDefaultComponent\n          ? DefaultComponent\n          : (\n            <div\n              className=\"sendbird-image-renderer__image\"\n              style={{\n                width: '100%',\n                minWidth: dynamicMinWidth,\n                maxWidth: fixedSize ? dynamicMinWidth : '400px',\n                height: dynamicMinHeight,\n                position: 'absolute',\n                backgroundRepeat: 'no-repeat',\n                backgroundPosition: 'center',\n                backgroundSize: 'cover',\n                backgroundImage: `url(${url})`,\n                borderRadius: getBorderRadiusForImageRenderer(circle, borderRadius),\n              }}\n            />\n          )\n      }\n      {HiddenImageLoader}\n      {\n        shadeOnHover && <div\n          className=\"sendbird-multiple-files-image-renderer__image-cover\"\n          style={{\n            ...{ borderRadius: getBorderRadiusForImageRenderer(circle, borderRadius) },\n            ...(isUploaded ? {} : { display: 'inline-flex' }),\n          }}\n        />\n      }\n    </div>\n  );\n};\n\nexport default ImageRenderer;\n", "export default (px: string | number): number | void => {\n  if (typeof px === 'number') {\n    return px;\n  }\n  if (typeof px === 'string') {\n    const parsed = Number.parseFloat(px);\n    if (!Number.isNaN(parsed)) {\n      return parsed;\n    }\n  }\n  return null;\n};\n", "import React, { ReactElement, RefObject } from 'react';\n\nimport ImageRenderer from '../ImageRenderer';\nimport Icon, { IconTypes, IconColors } from '../Icon';\n\nimport './index.scss';\nimport { uuidv4 } from '../../utils/uuid';\nimport pxToNumber from '../../utils/pxToNumber';\n\nconst imageRendererClassName = 'sendbird-avatar-img';\n\ninterface DefaultComponentProps {\n  width: string | number,\n  height: string | number,\n}\n\nconst DefaultComponent = ({ width, height }: DefaultComponentProps): ReactElement => {\n  let iconWidth = pxToNumber(width);\n  let iconHeight = pxToNumber(height);\n  if (typeof iconWidth === 'number') {\n    iconWidth *= 0.575;\n  }\n  if (typeof iconHeight === 'number') {\n    iconHeight *= 0.575;\n  }\n\n  return (\n    <div className=\"sendbird-avatar-img--default\" style={{ width, height }}>\n      <Icon\n        type={IconTypes.USER}\n        fillColor={IconColors.CONTENT}\n        width={iconWidth}\n        height={iconHeight}\n      />\n    </div>\n  );\n};\n\nconst _defaultComponent = ({\n  width,\n  height,\n}: DefaultComponentProps) => (\n  <DefaultComponent width={width} height={height} />\n);\n\ninterface AvatarInnerProps {\n  height: string | number,\n  width: string | number,\n  src?: string | Array<string>,\n  alt?: string,\n  customDefaultComponent?({ width, height }: { width: number | string, height: number | string }): ReactElement;\n}\n\nexport const AvatarInner = ({\n  src = '',\n  alt = '',\n  height,\n  width,\n  customDefaultComponent,\n}: AvatarInnerProps): ReactElement => {\n  const defaultComponent = () => customDefaultComponent ? customDefaultComponent({ width, height }) : _defaultComponent({ width, height });\n\n  if (typeof src === 'string') {\n    return (\n      <ImageRenderer\n        className={imageRendererClassName}\n        url={src}\n        height={height}\n        width={width}\n        alt={alt}\n        defaultComponent={defaultComponent}\n      />\n    );\n  }\n\n  if (src && src.length) {\n    if (src.length === 1) {\n      return (\n        <ImageRenderer\n          className={imageRendererClassName}\n          url={src[0]}\n          height={height}\n          width={width}\n          alt={alt}\n          defaultComponent={defaultComponent}\n        />\n      );\n    }\n\n    if (src.length === 2) {\n      return (\n        <div className=\"sendbird-avatar--inner__two-child\">\n          <ImageRenderer\n            className={imageRendererClassName}\n            url={src[0]}\n            height={height}\n            width={width}\n            alt={alt}\n            defaultComponent={defaultComponent}\n          />\n          <ImageRenderer\n            className={imageRendererClassName}\n            url={src[1]}\n            height={height}\n            width={width}\n            alt={alt}\n            defaultComponent={defaultComponent}\n          />\n        </div>\n      );\n    }\n\n    if (src.length === 3) {\n      return (\n        <>\n          <div className=\"sendbird-avatar--inner__three-child--upper\">\n            <ImageRenderer\n              className={imageRendererClassName}\n              url={src[0]}\n              height={height}\n              width={width}\n              alt={alt}\n              defaultComponent={defaultComponent}\n            />\n          </div>\n          <div className=\"sendbird-avatar--inner__three-child--lower\">\n            <ImageRenderer\n              className={imageRendererClassName}\n              url={src[1]}\n              height={height}\n              width={width}\n              alt={alt}\n              defaultComponent={defaultComponent}\n            />\n            <ImageRenderer\n              className={imageRendererClassName}\n              url={src[2]}\n              height={height}\n              width={width}\n              alt={alt}\n              defaultComponent={defaultComponent}\n            />\n          </div>\n        </>\n      );\n    }\n\n    return (\n      <div className=\"sendbird-avatar--inner__four-child\">\n        {\n          src.slice(0, 4)\n            .map((i) => (\n              <ImageRenderer\n                className={imageRendererClassName}\n                url={i}\n                height={height}\n                width={width}\n                alt={alt}\n                key={uuidv4()}\n                defaultComponent={defaultComponent}\n              />\n            ))\n        }\n      </div>\n    );\n  }\n  // default img\n  return (\n    <ImageRenderer\n      className={imageRendererClassName}\n      url=\"\"\n      height={height}\n      width={width}\n      alt={alt}\n      defaultComponent={defaultComponent}\n    />\n  );\n};\n\ninterface AvatarProps {\n  className?: string | Array<string>,\n  height?: string | number,\n  width?: string | number,\n  src?: string | Array<string>,\n  alt?: string,\n  onClick?(): void,\n  customDefaultComponent?({ width, height }: { width: number | string, height: number | string }): ReactElement;\n}\n\nfunction Avatar(\n  {\n    className = '',\n    src = '',\n    alt = '',\n    width = '56px',\n    height = '56px',\n    onClick,\n    customDefaultComponent,\n  }: AvatarProps,\n  ref: RefObject<HTMLDivElement>,\n): ReactElement {\n  return (\n    <div\n      className={[\n        ...(Array.isArray(className) ? className : [className]),\n        'sendbird-avatar',\n      ].join(' ')}\n      role=\"button\"\n      ref={ref}\n      style={{ height, width }}\n      onClick={onClick}\n      onKeyDown={onClick}\n      tabIndex={0}\n    >\n      <AvatarInner\n        src={src}\n        width={width}\n        height={height}\n        alt={alt}\n        customDefaultComponent={customDefaultComponent}\n      />\n    </div>\n  );\n}\n\nexport default React.forwardRef(Avatar);\n", "import topics from './pubSub/topics';\nimport type {\n  User,\n  UserUpdateParams,\n} from '@sendbird/chat';\n\nimport { FailedMessageHandler, MessageHandler, UserMessage, UserMessageCreateParams } from '@sendbird/chat/message';\nimport { GroupChannel, GroupChannelCreateParams, SendbirdGroupChat } from '@sendbird/chat/groupChannel';\nimport { OpenChannel, OpenChannelCreateParams, SendbirdOpenChat } from '@sendbird/chat/openChannel';\nimport { FileMessage, FileMessageCreateParams, SendableMessage, UserMessageUpdateParams } from '@sendbird/chat/lib/__definition';\n\nimport {\n  SdkStore,\n  SendBirdState,\n  SendBirdStateConfig,\n  SendBirdStateStore,\n} from './types';\nimport { noop } from '../utils/utils';\nimport { SendableMessageType } from '../utils';\n\n/**\n * 1. UIKit Instances\n *    a. getSdk\n *    b. getPubSub\n * 2. Chat & Connection\n *    a. getConnect\n *    b. getDisconnect\n *    c. getUpdateUserInfo\n * 3. Channel\n *    a. getCreateGroupChannel\n *    b. getCreateOpenChannel\n *    c. getGetGroupChannel\n *    d. getGetOpenChannel\n *    e. getLeaveGroupChannel\n *    f. getEnterOpenChannel\n *    g. getExitOpenChannel\n *    h. getFreezeChannel\n *    i. getUnfreezeChannel\n * 4. Message\n *    a. getSendUserMessage\n *    b. getSendFileMessage\n *    c. getUpdateUserMessage\n *    d. x - getUpdateFileMessage\n *    e. getDeleteMessage\n *    f. getResendUserMessage\n *    g. getResendFileMessage\n */\n\n/**\n * import useSendbirdStateContext from '@sendbird-uikit/useSendbirdStateContext'\n * import selectors from '@sendbird-uikit/send'\n * const state = useSendbirdStateContext();\n */\n\n// 1. UIKit Instances\n\n/**\n * const sdk = selectors.getSdk(state);\n */\nexport const getSdk = (state: SendBirdState): SendbirdGroupChat & SendbirdOpenChat => {\n  const { stores = {} } = state;\n  const { sdkStore = {} } = stores as SendBirdStateStore;\n  const { sdk } = sdkStore as SdkStore;\n  return sdk;\n};\n\n/**\n * const pubSub = selectors.getPubSub(state);\n */\nexport const getPubSub = (state: SendBirdState): any => {\n  const { config = {} } = state;\n  const { pubSub } = config as SendBirdStateConfig;\n  return pubSub;\n};\n\n// 2. Chat & Connection\n\n/**\n * const connect = selectors.getConnect(state);\n * connect('user-id-sendbirdian', 'access-token-0000')\n *  .then((user) => {})\n *  .catch((error) => {})\n */\nexport const getConnect = (state: SendBirdState) => (\n  (userId: string, accessToken?: string): Promise<User> => (\n    new Promise((resolve, reject) => {\n      const sdk = getSdk(state);\n      if (!sdk) {\n        reject(new Error('Sdk not found'));\n      }\n      if (!(sdk?.connect && typeof sdk.connect === 'function')) {\n        reject(new Error('Not found the function \"connect'));\n      }\n      if (!accessToken) {\n        sdk.connect(userId)\n          .then((res) => resolve(res))\n          .catch((err) => reject(err));\n      } else {\n        sdk.connect(userId, accessToken)\n          .then((res) => resolve(res))\n          .catch((err) => reject(err));\n      }\n    })\n  )\n);\n\n/**\n * const disconnect = selectors.getDisconnect(state);\n * disconnect()\n *  .then(() => {})\n *  .catch((error) => {})\n */\nexport const getDisconnect = (state: SendBirdState) => (\n  (): Promise<void> => (\n    new Promise((resolve, reject) => {\n      const sdk = getSdk(state);\n      if (!sdk) {\n        reject(new Error('Sdk not found'));\n      }\n      if (!(sdk.disconnect && typeof sdk.disconnect === 'function')) {\n        reject(new Error('Not found the function \"disconnect'));\n      }\n      sdk.disconnect()\n        .then((res) => resolve(res))\n        .catch((err) => reject(err));\n    })\n  )\n);\n\n/**\n * const updateUserInfo = selectors.getUpdateUserInfo(state);\n * updateUserInfo('new-nickname', 'new-profile-url')\n *  .then((user) => {})\n *  .catch((error) => {})\n */\nexport const getUpdateUserInfo = (state: SendBirdState) => (\n  (nickname: string, profileUrl?: string): Promise<User> => (\n    new Promise((resolve, reject) => {\n      const sdk = getSdk(state);\n      if (!sdk) {\n        reject(new Error('Sdk not found'));\n      }\n      if (!(sdk.updateCurrentUserInfo && typeof sdk.updateCurrentUserInfo === 'function')) {\n        reject(new Error('Not found the function \"updateCurrentUserInfo\"'));\n      }\n      const userParams: UserUpdateParams = { nickname };\n      if (profileUrl) {\n        userParams.profileUrl = profileUrl;\n      }\n      sdk.updateCurrentUserInfo(userParams)\n        .then((res) => resolve(res))\n        .catch((err) => reject(err));\n    })\n  )\n);\n\n// 3. Channel\n\n/**\n * const createGroupChannel = selectors.getCreateGroupChannel(state);\n * createGroupChannel(channelParams: GroupChannelCreateParams)\n *  .then((channel) => {})\n *  .catch((error) => {})\n */\nexport const getCreateGroupChannel = (state: SendBirdState) => (\n  (params: GroupChannelCreateParams): Promise<GroupChannel> => (\n    new Promise((resolve, reject) => {\n      const sdk = getSdk(state);\n      const pubSub = getPubSub(state);\n      if (!sdk) {\n        reject(new Error('Sdk not found'));\n      }\n      if (!sdk.groupChannel) {\n        reject(new Error('Not found GroupChannelModule'));\n      }\n      if (!(sdk.groupChannel.createChannel && typeof sdk.groupChannel.createChannel === 'function')) {\n        reject(new Error('Not found the function \"createChannel\"'));\n      }\n      sdk.groupChannel.createChannel(params)\n        .then((channel) => {\n          resolve(channel);\n          pubSub.publish(\n            topics.CREATE_CHANNEL,\n            { channel },\n          );\n        })\n        .catch(reject);\n    })\n  )\n);\n\n/**\n * const createOpenChannel = selectors.getCreateOpenChannel(state);\n * createOpenChannel(channelParams: OpenChannelCreateParams)\n *  .then((channel) => {})\n *  .catch((error) => {})\n */\nexport const getCreateOpenChannel = (state: SendBirdState) => (\n  (params: OpenChannelCreateParams): Promise<OpenChannel> => (\n    new Promise((resolve, reject) => {\n      const sdk = getSdk(state);\n      // const pubSub = getPubSub(state);\n      if (!sdk) {\n        reject(new Error('Sdk not found'));\n      }\n      if (!sdk.openChannel) {\n        reject(new Error('Not found OpenChannelModule'));\n      }\n      if (!(sdk.openChannel.createChannel && typeof sdk.openChannel.createChannel === 'function')) {\n        reject(new Error('Not found the function \"createChannel\"'));\n      }\n      sdk.openChannel.createChannel(params)\n        .then((channel) => {\n          resolve(channel);\n          // Consider pubSub process\n        })\n        .catch(reject);\n    })\n  )\n);\n\n/**\n * const getGroupChannel = selectors.getGetGroupChannel(state);\n * getGroupChannel('channel-url-1234', isSelected)\n *  .then((channel) => {\n *    // groupChannel = channel;\n *    // or\n *    // setCurrentChannel(channel);\n *  })\n *  .catch((error) => {})\n */\nexport const getGetGroupChannel = (state: SendBirdState) => (\n  (channelUrl: string): Promise<GroupChannel> => (\n    new Promise((resolve, reject) => {\n      const sdk = getSdk(state);\n      // const pubSub = getPubSub(state);\n      if (!sdk) {\n        reject(new Error('Sdk not found'));\n      }\n      if (!sdk.groupChannel) {\n        reject(new Error('Not found GroupChannelModule'));\n      }\n      if (!(sdk.groupChannel.getChannel && typeof sdk.groupChannel.getChannel === 'function')) {\n        reject(new Error('Not found the function \"getChannel\"'));\n      }\n      sdk.groupChannel.getChannel(channelUrl)\n        .then((channel) => {\n          resolve(channel);\n          // Add pubSub with isSelected\n        })\n        .catch(reject);\n    })\n  )\n);\n\n/**\n * const getOpenChannel = selectors.getGetOpenChannel(state);\n * getOpenChannel('channel-url-12345')\n *  .then((channel) => {\n *    // openChannel = channel;\n *    // or\n *    // setCurrentChannel(channel);\n *  })\n *  .catch((error) => {})\n */\nexport const getGetOpenChannel = (state: SendBirdState) => (\n  (channelUrl: string): Promise<OpenChannel> => (\n    new Promise((resolve, reject) => {\n      const sdk = getSdk(state);\n      // const pubSub = getPubSub(state);\n      if (!sdk) {\n        reject(new Error('Sdk not found'));\n      }\n      if (!sdk.openChannel) {\n        reject(new Error('Not found OpenChannelModule'));\n      }\n      if (!(sdk.openChannel.getChannel && typeof sdk.openChannel.getChannel === 'function')) {\n        reject(new Error('Not found the function \"getChannel\"'));\n      }\n      sdk.openChannel.getChannel(channelUrl)\n        .then((channel) => {\n          resolve(channel);\n          // Add pubSub with isSelected\n        })\n        .catch(reject);\n    })\n  )\n);\n\n/**\n * const leaveChannel = selectors.getLeaveGroupChannel(state);\n * leaveChannel('group-channel-url')\n *  .then((channel) => {})\n *  .catch((error) => {})\n */\nexport const getLeaveGroupChannel = (state: SendBirdState) => (\n  (channelUrl: string): Promise<void> => (\n    new Promise((resolve, reject) => {\n      getGetGroupChannel(state)?.(channelUrl)\n        .then((channel) => {\n          channel.leave()\n            .then(() => {\n              resolve();\n              // Add pubSub process\n            })\n            .catch(reject);\n        })\n        .catch(reject);\n    })\n  )\n);\n\n/**\n * const enterChannel = selectors.getEnterOpenChannel(state);\n * enterChannel('open-channel-url')\n *  .then((channel) => {})\n *  .catch((error) => {})\n */\nexport const getEnterOpenChannel = (state: SendBirdState) => (\n  (channelUrl: string): Promise<OpenChannel> => (\n    new Promise((resolve, reject) => {\n      getGetOpenChannel(state)?.(channelUrl)\n        .then((channel) => {\n          channel.enter()\n            .then(() => {\n              resolve(channel);\n              // Add pubSub process\n            })\n            .catch(reject);\n        })\n        .catch(reject);\n    })\n  )\n);\n\n/**\n * const exitChannel = selectors.getExitOpenChannel(state);\n * exitChannel('open-channel-url')\n *  .then((channel) => {})\n *  .catch((error) => {})\n */\nexport const getExitOpenChannel = (state: SendBirdState) => (\n  (channelUrl: string): Promise<OpenChannel> => (\n    new Promise((resolve, reject) => {\n      getGetOpenChannel(state)?.(channelUrl)\n        .then((channel) => {\n          channel.exit()\n            .then(() => {\n              resolve(channel);\n              // Add pubSub process\n            })\n            .catch(reject);\n        })\n        .catch(reject);\n    })\n  )\n);\n\n/**\n * const freezeChannel = selectors.getFreezeChannel(currentChannel);\n * freezeChannel()\n *  .then(() => {})\n *  .catch((error) => {})\n */\nexport const getFreezeChannel = () => (\n  (channel: GroupChannel | OpenChannel): Promise<void> => (\n    new Promise((resolve, reject) => {\n      if (!(channel.freeze && typeof channel?.freeze === 'function')) {\n        reject(new Error('Not found the function \"freeze\"'));\n      }\n      channel.freeze()\n        .then(() => {\n          resolve();\n          // Add pubSub process\n          /**\n           * consider divide the logic to\n           * _freezeGroupChannel and _freezeOpenChannel\n           */\n        })\n        .catch(reject);\n    })\n  )\n);\n\n/**\n * const unfreezeChannel = selectors.getUnfreezeChannel(currentChannel);\n * unfreezeChannel()\n *  .then((channel) => {})\n *  .catch((error) => {})\n */\nexport const getUnfreezeChannel = () => (\n  (channel: GroupChannel | OpenChannel): Promise<void> => (\n    new Promise((resolve, reject) => {\n      if (!(channel.unfreeze && typeof channel?.unfreeze === 'function')) {\n        reject(new Error('Not found the function \"unfreeze\"'));\n      }\n      channel.unfreeze()\n        .then(() => {\n          resolve();\n          // Add pubSub process\n          /**\n           * consider divide the logic to\n           * _unfreezeGroupChannel and _unfreezeOpenChannel\n           */\n        })\n        .catch(reject);\n    })\n  )\n);\n\n// 4. Message\nexport class UikitMessageHandler<T extends SendableMessage = SendableMessage> {\n  private _onPending: MessageHandler<T> = noop;\n\n  private _onFailed: FailedMessageHandler<T> = noop;\n\n  private _onSucceeded: MessageHandler<T> = noop;\n\n  public triggerPending(message: T): void {\n    this._onPending(message);\n  }\n\n  public triggerFailed(error: Error, message: T): void {\n    this._onFailed(error, message.isResendable ? message : null);\n  }\n\n  public triggerSucceeded(message: T): void {\n    this._onSucceeded(message);\n  }\n\n  public onPending(handler: MessageHandler<T>): UikitMessageHandler {\n    if (typeof handler === 'function') {\n      this._onPending = handler;\n    }\n    return this;\n  }\n\n  public onFailed(handler: FailedMessageHandler<T>): UikitMessageHandler {\n    if (typeof handler === 'function') {\n      this._onFailed = handler;\n    }\n    return this;\n  }\n\n  public onSucceeded(handler: MessageHandler<T>): UikitMessageHandler {\n    if (typeof handler === 'function') {\n      this._onSucceeded = handler;\n    }\n    return this;\n  }\n}\n\n/**\n * const sendUserMessage = selectors.getSendUserMessage(state);\n * sendUserMessage(\n *  channel: GroupChannel | OpenChannel,\n *  params: UserMessageCreateParams,\n * )\n *  .onPending((message) => {})\n *  .onFailed((error, message) => {})\n *  .onSucceeded((message) => {})\n */\n\nexport const getSendUserMessage = (state: SendBirdState) => (\n  (channel: GroupChannel | OpenChannel, params: UserMessageCreateParams): UikitMessageHandler => {\n    const handler = new UikitMessageHandler();\n    const pubSub = getPubSub(state);\n    channel.sendUserMessage(params)\n      .onFailed((error, message) => {\n        pubSub.publish(\n          topics.SEND_MESSAGE_FAILED,\n          { error, message, channel },\n        );\n        handler.triggerFailed(error, message);\n      })\n      .onPending((message) => {\n        pubSub.publish(\n          topics.SEND_MESSAGE_START,\n          { message, channel },\n        );\n        handler.triggerPending(message);\n      })\n      .onSucceeded((message) => {\n        pubSub.publish(\n          topics.SEND_USER_MESSAGE,\n          { message, channel },\n        );\n        handler.triggerSucceeded(message);\n      });\n    return handler;\n  }\n);\n\n/**\n * const sendFileMessage = selectors.getSendFileMessage(state);\n * sendFileMessage(\n *  channel: GroupChannel | OpenChannel,\n *  params: FileMessageCreateParams,\n * )\n *  .onPending((message) => {})\n *  .onFailed((error, message) => {})\n *  .onSucceeded((message) => {})\n */\nexport const getSendFileMessage = (state: SendBirdState) => (\n  (channel: GroupChannel | OpenChannel, params: FileMessageCreateParams): UikitMessageHandler => {\n    const handler = new UikitMessageHandler();\n    const pubSub = getPubSub(state);\n    channel.sendFileMessage(params)\n      .onFailed((error, message) => {\n        pubSub.publish(\n          topics.SEND_MESSAGE_FAILED,\n          { error, message, channel },\n        );\n        handler.triggerFailed(error, message);\n      })\n      .onPending((message) => {\n        pubSub.publish(\n          topics.SEND_MESSAGE_START,\n          { message, channel },\n        );\n        handler.triggerPending(message);\n      })\n      .onSucceeded((message) => {\n        pubSub.publish(\n          topics.SEND_FILE_MESSAGE,\n          { message, channel },\n        );\n        handler.triggerSucceeded(message);\n      });\n    return handler;\n  }\n);\n\n/**\n * const updateUserMessage = selectors.getUpdateUserMessage(state);\n * updateUserMessage(\n *  channel: GroupChannel | OpenChannel,\n *  messageId: number,\n *  messageParams: UserMessageUpdateParams,\n * )\n *  .then((message) => {})\n *  .catch((error) => {})\n */\nexport const getUpdateUserMessage = (state: SendBirdState) => (\n  (channel: GroupChannel | OpenChannel, messageId: number, params: UserMessageUpdateParams): Promise<UserMessage> => (\n    new Promise((resolve, reject) => {\n      const pubSub = getPubSub(state);\n      channel.updateUserMessage(messageId, params)\n        .then((message) => {\n          pubSub.publish(\n            topics.UPDATE_USER_MESSAGE,\n            { message, channel, fromSelector: true },\n          );\n          resolve(message);\n        })\n        .catch(reject);\n    })\n  )\n);\n\n// TODO: We will provie this function in the future\n/**\n * const updateFileMessage = selectors.getUpdateFileMessage(state);\n * updateFileMessage(\n *  channel: GroupChannel | OpenChannel,\n *  messageId: number,\n *  params: FileMessageUpdateParams,\n * )\n *  .then((message) => {})\n *  .catch((error) => {})\n */\n// const getUpdateFileMessage = (state: SendBirdState) => (\n//   (channel: GroupChannel | OpenChannel, messageId: number, params: FileMessageUpdateParams) => (\n//     new Promise((resolve, reject) => {\n//       const pubSub = getPubSub(state);\n//       channel.updateFileMessage(messageId, params)\n//         .then((message) => {\n//           pubSub.publish(\n//             topics.UPDATE_USER_MESSAGE,\n//             { message, channel, fromSelector: true },\n//           );\n//           resolve(message);\n//         })\n//         .catch(reject);\n//     })\n//   )\n// );\n\n/**\n * const deleteMessage = selectors.getDeleteMessage(state);\n * deleteMessage(\n *  channel: GroupChannel | OpenChannel,\n *  message: SendableMessage,\n * )\n *  .then((deletedMessage) => {})\n *  .catch((error) => {})\n */\nexport const getDeleteMessage = (state: SendBirdState) => (\n  (channel: GroupChannel | OpenChannel, message: SendableMessageType): Promise<SendableMessageType> => (\n    new Promise((resolve, reject) => {\n      const pubSub = getPubSub(state);\n      const { messageId } = message;\n      channel.deleteMessage(message)\n        .then(() => {\n          pubSub.publish(\n            topics.DELETE_MESSAGE,\n            { messageId, channel },\n          );\n          resolve(message);\n        })\n        .catch(reject);\n    })\n  )\n);\n\n/**\n * const resendUserMessage = selectors.getResendUserMessage(state);\n * resendUserMessage(\n *  channel: GroupChannel | OpenChannel,\n *  failedMessage: UserMessage,\n * )\n *  .then(() => {})\n *  .catch((error) => {})\n */\nexport const getResendUserMessage = (state: SendBirdState) => (\n  (channel: GroupChannel | OpenChannel, failedMessage: UserMessage): Promise<UserMessage> => (\n    new Promise((resolve, reject) => {\n      const pubSub = getPubSub(state);\n      channel.resendUserMessage(failedMessage)\n        .then((message) => {\n          pubSub.publish(\n            topics.SEND_USER_MESSAGE,\n            { message, channel },\n          );\n          resolve(message);\n        })\n        .catch(reject);\n    })\n  )\n);\n\n/**\n * const resendFileMessage = selectors.getResendFileMessage(state);\n * resendFileMessage(\n *  channel: GroupChannel | OpenChannel,\n *  failedMessage: FileMessage,\n *  blob: Blob,\n * )\n *  .then(() => {})\n *  .catch((error) => {})\n */\nexport const getResendFileMessage = (state: SendBirdState) => (\n  (channel: GroupChannel | OpenChannel, failedMessage: FileMessage, blob: Blob): Promise<FileMessage> => (\n    new Promise((resolve, reject) => {\n      const pubSub = getPubSub(state);\n      channel.resendFileMessage(failedMessage, blob)\n        .then((message) => {\n          pubSub.publish(\n            topics.SEND_FILE_MESSAGE,\n            { message, channel },\n          );\n          resolve(message);\n        })\n        .catch(reject);\n    })\n  )\n);\n\nconst sendbirdSelectors = {\n  getSdk,\n  getPubSub,\n  getConnect,\n  getDisconnect,\n  getUpdateUserInfo,\n  getCreateGroupChannel,\n  getCreateOpenChannel,\n  getGetGroupChannel,\n  getGetOpenChannel,\n  getLeaveGroupChannel,\n  getEnterOpenChannel,\n  getExitOpenChannel,\n  getFreezeChannel,\n  getUnfreezeChannel,\n  getSendUserMessage,\n  getSendFileMessage,\n  getUpdateUserMessage,\n  getDeleteMessage,\n  getResendUserMessage,\n  getResendFileMessage,\n};\n\nexport default sendbirdSelectors;\n", "import './muted-avatar-overlay.scss';\n\nimport React, { ReactElement } from 'react';\nimport Icon, { IconTypes, IconColors } from '../Icon';\n\ninterface Props {\n  height?: number;\n  width?: number;\n}\n\nexport default function MutedAvatarOverlay(props: Props): ReactElement {\n  const { height = 24, width = 24 } = props;\n  return (\n    <div\n      className=\"sendbird-muted-avatar\"\n      style={{\n        height: `${height}px`,\n        width: `${width}px`,\n      }}\n    >\n      <div className=\"sendbird-muted-avatar__icon\">\n        <div\n          className=\"sendbird-muted-avatar__bg\"\n          style={{\n            height: `${height}px`,\n            width: `${width}px`,\n          }}\n        />\n        <Icon\n          type={IconTypes.MUTE}\n          fillColor={IconColors.WHITE}\n          width={`${height - 8}px`}\n          height={`${width - 8}px`}\n        />\n      </div>\n    </div>\n  );\n}\n", "import React, { ChangeEvent, ReactElement, useState } from 'react';\nimport './index.scss';\n\nexport interface CheckboxProps {\n  id?: string;\n  checked?: boolean;\n  disabled?: boolean;\n  onChange?(e: ChangeEvent<HTMLInputElement>): void;\n}\n\nexport default function Checkbox({\n  id,\n  checked = false,\n  disabled,\n  onChange,\n}: CheckboxProps): ReactElement {\n  const [isChecked, setIsCheck] = useState(checked);\n  return (\n    <label\n      className={[\n        'sendbird-checkbox',\n        disabled ? 'disabled' : '',\n      ].join(' ')}\n      htmlFor={id}\n    >\n      <input\n        disabled={disabled}\n        id={id}\n        type=\"checkbox\"\n        checked={isChecked}\n        onClick={() => {\n          if (!disabled) setIsCheck(!isChecked);\n        }}\n        onChange={onChange}\n      />\n      <span\n        className={[\n          'sendbird-checkbox--checkmark',\n          disabled ? 'disabled' : '',\n        ].join(' ')}\n      />\n    </label>\n  );\n}\n", "import './index.scss';\nimport React, { ReactElement, useContext } from 'react';\nimport type { GroupChannel, GroupChannelCreateParams } from '@sendbird/chat/groupChannel';\nimport type { User } from '@sendbird/chat';\n\nimport { LocalizationContext } from '../../lib/LocalizationContext';\nimport { UserProfileContext } from '../../lib/UserProfileContext';\nimport { getCreateGroupChannel } from '../../lib/selectors';\nimport Avatar from '../Avatar/index';\nimport Label, { LabelColors, LabelTypography } from '../Label';\nimport Button, { ButtonTypes } from '../Button';\nimport useSendbirdStateContext from '../../hooks/useSendbirdStateContext';\n\ninterface Logger {\n  info?(message: string, channel: GroupChannel): void;\n}\n\ninterface Props {\n  user: User;\n  currentUserId?: string;\n  logger?: Logger;\n  disableMessaging?: boolean;\n  createChannel?(params: GroupChannelCreateParams): Promise<GroupChannel>;\n  onSuccess?: () => void;\n}\n\nfunction UserProfile({\n  user,\n  currentUserId,\n  disableMessaging = false,\n  onSuccess,\n}: Props): ReactElement {\n  const store = useSendbirdStateContext();\n  const createChannel = getCreateGroupChannel(store);\n  const logger = store?.config?.logger;\n  const { stringSet } = useContext(LocalizationContext);\n  const currentUserId_ = currentUserId || store?.config?.userId;\n  const { onUserProfileMessage } = useContext(UserProfileContext);\n  return (\n    <div className=\"sendbird__user-profile\">\n      <section className=\"sendbird__user-profile-avatar\">\n        <Avatar\n          height=\"80px\"\n          width=\"80px\"\n          src={user?.profileUrl}\n        />\n      </section>\n      <section className=\"sendbird__user-profile-name\">\n        <Label\n          type={LabelTypography.H_2}\n          color={LabelColors.ONBACKGROUND_1}\n        >\n          {user?.nickname || stringSet.NO_NAME}\n        </Label>\n      </section>\n      {\n        (user?.userId !== currentUserId_) && !disableMessaging && (\n          <section className=\"sendbird__user-profile-message\">\n            <Button\n              type={ButtonTypes.SECONDARY}\n              onClick={() => {\n                // Create 1:1 channel\n                const params: GroupChannelCreateParams = {\n                  isDistinct: false,\n                  invitedUserIds: [user?.userId],\n                  operatorUserIds: [currentUserId_],\n                };\n                onSuccess();\n                createChannel(params)\n                  .then((groupChannel) => {\n                    logger.info('UserProfile, channel create', groupChannel);\n                    if (typeof onUserProfileMessage === 'function') {\n                      onUserProfileMessage?.(groupChannel);\n                    }\n                  });\n              }}\n            >\n              {stringSet.USER_PROFILE__MESSAGE}\n            </Button>\n          </section>\n        )\n      }\n      <div className=\"sendbird__user-profile-separator\" />\n      <section className=\"sendbird__user-profile-userId\">\n        <Label\n          className=\"sendbird__user-profile-userId--label\"\n          type={LabelTypography.CAPTION_2}\n          color={LabelColors.ONBACKGROUND_2}\n        >\n          {stringSet.USER_PROFILE__USER_ID}\n        </Label>\n        <Label\n          className=\"sendbird__user-profile-userId--value\"\n          type={LabelTypography.BODY_1}\n          color={LabelColors.ONBACKGROUND_1}\n        >\n          {user?.userId}\n        </Label>\n      </section>\n    </div>\n  );\n}\n\nexport default UserProfile;\n", "import React, { ReactElement, ReactNode } from 'react';\nimport uuidv4 from '../../utils/uuid';\n\nimport './index.scss';\n\nconst componentClassName = 'sendbird-sort-by-row';\n\nexport interface SortByRowProps {\n  className?: string | Array<string>;\n  maxItemCount: number;\n  itemWidth: number;\n  itemHeight: number;\n  children: ReactNode;\n}\nexport default function SortByRow({\n  className = '',\n  maxItemCount,\n  itemWidth,\n  itemHeight,\n  children,\n}: SortByRowProps): ReactElement {\n  if (Array.isArray(children) && children.length > maxItemCount) {\n    const result = [];\n\n    for (let i = 0; i < children.length; i += maxItemCount) {\n      result.push(\n        <div\n          className={[\n            ...(Array.isArray(className) ? className : [className]),\n            componentClassName,\n          ].join(' ')}\n          key={uuidv4()}\n          style={{\n            width: itemWidth * maxItemCount,\n            height: itemHeight,\n          }}\n        >\n          {\n            children.slice(i, i + maxItemCount)\n          }\n        </div>,\n      );\n    }\n    return <>{result}</>;\n  }\n\n  return (\n    <div\n      className={[\n        ...(Array.isArray(className) ? className : [className]),\n        componentClassName,\n      ].join(' ')}\n      style={{\n        width: itemWidth * (Array.isArray(children) ? children.length : 1),\n        height: itemHeight,\n      }}\n    >\n      {children as ReactElement}\n    </div>\n  );\n}\n", "import React, { ReactElement } from 'react';\nimport { createPortal } from 'react-dom';\n\ninterface MenuItemsProps {\n  className?: string;\n  style?: Record<string, string>;\n  openLeft?: boolean;\n  children: React.ReactElement | Array<React.ReactElement> | React.ReactNode;\n  parentRef: React.RefObject<HTMLElement>;\n  parentContainRef?: React.RefObject<HTMLElement>;\n  closeDropdown: () => void;\n}\n\ntype MenuStyleType = { top?: number, left?: number };\ninterface MenuItemsState {\n  menuStyle: MenuStyleType;\n  handleClickOutside: (e: MouseEvent) => void;\n}\n\n// padding to handle height of last item in message-list\nconst HEIGHT_PADDING = 60;\n\nexport default class MenuItems extends React.Component<MenuItemsProps, MenuItemsState> {\n  constructor(props: MenuItemsProps) {\n    super(props);\n    this.state = {\n      menuStyle: {},\n      handleClickOutside: () => { /* noop */ },\n    };\n  }\n\n  menuRef: React.RefObject<HTMLUListElement> = React.createRef();\n\n  componentDidMount(): void {\n    this.setupEvents();\n    this.getMenuPosition();\n  }\n\n  componentWillUnmount(): void {\n    this.cleanUpEvents();\n  }\n\n  setupEvents = (): void => {\n    const { closeDropdown } = this.props;\n    const { menuRef } = this;\n    const handleClickOutside = (event) => {\n      if (menuRef?.current && !menuRef?.current?.contains?.(event.target)) {\n        closeDropdown?.();\n      }\n    };\n    this.setState({\n      handleClickOutside,\n    });\n\n    document.addEventListener('mousedown', handleClickOutside);\n  };\n\n  cleanUpEvents = (): void => {\n    const {\n      handleClickOutside,\n    } = this.state;\n    document.removeEventListener('mousedown', handleClickOutside);\n  };\n\n  getMenuPosition = (): MenuStyleType => {\n    const { parentRef, openLeft } = this.props;\n    const parentRect = parentRef?.current?.getBoundingClientRect?.();\n    const x = parentRect?.x || parentRect?.left || 0;\n    const y = parentRect?.y || parentRect?.top || 0;\n    const menuStyle = {\n      top: y,\n      left: x,\n    };\n    if (!this.menuRef.current) return menuStyle;\n    const { innerWidth, innerHeight } = window;\n    const rect = this.menuRef.current.getBoundingClientRect();\n    if (y + rect.height + HEIGHT_PADDING > innerHeight) {\n      menuStyle.top -= rect.height;\n    }\n    if (x + rect.width > innerWidth && !openLeft) {\n      menuStyle.left -= rect.width;\n    }\n    if (menuStyle.top < 0) {\n      menuStyle.top = rect.height < innerHeight ? (innerHeight - rect.height) / 2 : 0;\n    }\n    menuStyle.top += 32;\n    if (openLeft) {\n      const padding = Number.isNaN(rect.width - 30)\n        ? 108 // default\n        : rect.width - 30;\n      menuStyle.left -= padding;\n    }\n    // warning: this section has to be executed after the openLeft is calculated\n    // menu is outside viewport\n    if (menuStyle.left < 0) {\n      menuStyle.left = rect.width < innerWidth ? (innerWidth - rect.width) / 2 : 0;\n    }\n\n    this.setState({ menuStyle });\n    return menuStyle;\n  };\n\n  render(): ReactElement {\n    const { menuStyle } = this.state;\n    const { children, style, className = '' } = this.props;\n    return (\n      createPortal(\n        (\n          <div className={this.props?.className}>\n            <div className=\"sendbird-dropdown__menu-backdrop\" />\n            <ul\n              className={`${className} sendbird-dropdown__menu`}\n              ref={this.menuRef}\n              style={{\n                display: 'inline-block',\n                position: 'fixed',\n                left: `${Math.round(menuStyle.left)}px`,\n                top: `${Math.round(menuStyle.top)}px`,\n                ...style,\n              }}\n            >\n              {children}\n            </ul>\n          </div>\n        ),\n        document.getElementById('sendbird-dropdown-portal'),\n      )\n    );\n  }\n}\n", "import React, { ReactElement, ReactNode, RefObject, useEffect, useRef, useState } from 'react';\nimport { createPortal } from 'react-dom';\n\nimport SortByRow from '../SortByRow';\nimport { Nullable } from '../../types';\n\nconst defaultParentRect = { x: 0, y: 0, left: 0, top: 0, height: 0 };\ntype SpaceFromTrigger = { x: number, y: number };\ntype ReactionStyle = { left: number, top: number };\nexport interface EmojiListItemsProps {\n  closeDropdown: () => void;\n  children: ReactNode;\n  parentRef: RefObject<HTMLDivElement>;\n  parentContainRef: RefObject<HTMLDivElement>;\n  spaceFromTrigger?: SpaceFromTrigger;\n}\n\nexport const EmojiListItems = ({\n  children,\n  parentRef,\n  parentContainRef,\n  spaceFromTrigger = { x: 0, y: 0 },\n  closeDropdown,\n}: EmojiListItemsProps): Nullable<ReactElement> => {\n  const [reactionStyle, setReactionStyle] = useState<ReactionStyle>({ left: 0, top: 0 });\n  const reactionRef: RefObject<HTMLUListElement> = useRef(null);\n\n  /* showParent & hideParent */\n  useEffect(() => {\n    if (parentContainRef && parentContainRef?.current) {\n      parentContainRef.current.classList.add('sendbird-reactions--pressed');\n    }\n    return () => {\n      if (parentContainRef && parentContainRef?.current) {\n        parentContainRef.current.classList.remove('sendbird-reactions--pressed');\n      }\n    };\n  }, []);\n\n  /* setupEvents & cleanupEvents */\n  useEffect(() => {\n    const handleClickOutSide = (event) => {\n      if (reactionRef?.current && !reactionRef?.current?.contains?.(event.target)) {\n        closeDropdown();\n      }\n    };\n    document.addEventListener('mousedown', handleClickOutSide);\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutSide);\n    };\n  }, []);\n\n  /* getBarPosition */\n  useEffect(() => {\n    const spaceFromTriggerX = spaceFromTrigger?.x || 0;\n    const spaceFromTriggerY = spaceFromTrigger?.y || 0;\n    const parentRect = parentRef?.current?.getBoundingClientRect() ?? defaultParentRect;\n    const x = parentRect.x || parentRect.left;\n    const y = parentRect.y || parentRect.top;\n    const reactionStyle = {\n      top: y,\n      left: x,\n    };\n    if (!reactionRef?.current) {\n      setReactionStyle(reactionStyle);\n    } else {\n      const rect = reactionRef?.current?.getBoundingClientRect();\n      if (reactionStyle.top < rect.height) {\n        reactionStyle.top += parentRect.height;\n        reactionStyle.top += spaceFromTriggerY;\n      } else {\n        reactionStyle.top -= rect.height;\n        reactionStyle.top -= spaceFromTriggerY;\n      }\n      reactionStyle.left -= rect.width / 2;\n      reactionStyle.left += (parentRect.height / 2) - 2;\n      reactionStyle.left += spaceFromTriggerX;\n      const maximumLeft = window.innerWidth - rect.width;\n      if (maximumLeft < reactionStyle.left) {\n        reactionStyle.left = maximumLeft;\n      }\n      if (reactionStyle.left < 0) {\n        reactionStyle.left = 0;\n      }\n      setReactionStyle(reactionStyle);\n    }\n  }, []);\n\n  const rootElement = document.getElementById('sendbird-emoji-list-portal');\n  if (rootElement) {\n    return (\n      createPortal(\n        <>\n          <div className=\"sendbird-dropdown__menu-backdrop\" />\n          <ul\n            className=\"sendbird-dropdown__reaction-bar\"\n            ref={reactionRef}\n            style={{\n              display: 'inline-block',\n              position: 'fixed',\n              left: `${Math.round(reactionStyle.left)}px`,\n              top: `${Math.round(reactionStyle.top)}px`,\n            }}\n          >\n            <SortByRow\n              className=\"sendbird-dropdown__reaction-bar__row\"\n              maxItemCount={8}\n              itemWidth={44}\n              itemHeight={40}\n            >\n              {children}\n            </SortByRow>\n          </ul>\n        </>,\n        rootElement,\n      )\n    );\n  }\n  return null;\n};\n\nexport default EmojiListItems;\n", "import React, { ReactElement, MouseEvent, useState, ReactNode } from 'react';\nimport './index.scss';\n\nimport _MenuItems from './MenuItems';\nimport _EmojiListItems from './EmojiListItems';\n\nimport { getClassName } from '../../utils';\nimport Label, { LabelTypography, LabelColors } from '../Label';\n\nconst ENTER_KEY = 13;\n\nexport const MenuItems = _MenuItems;\nexport const EmojiListItems = _EmojiListItems;\n\nexport interface MenuItemProps {\n  className?: string | Array<string>;\n  children: ReactElement | ReactElement[] | ReactNode;\n  onClick?: (e: MouseEvent<HTMLLIElement>) => void;\n  disable?: boolean;\n  dataSbId?: string;\n}\nexport const MenuItem = ({\n  className = '',\n  children,\n  onClick,\n  disable = false,\n  dataSbId = '',\n}: MenuItemProps): ReactElement => {\n  const handleClickEvent = (e) => {\n    if (!disable && onClick) {\n      onClick?.(e);\n    }\n  };\n  return (\n    <li\n      className={getClassName([className, 'sendbird-dropdown__menu-item', disable ? 'disable' : ''])}\n      role=\"menuitem\"\n      aria-disabled={disable ? true : false}\n      onClick={handleClickEvent}\n      onKeyPress={(e) => { if (e.keyCode === ENTER_KEY) handleClickEvent(e); }}\n      tabIndex={0}\n      data-sb-id={dataSbId}\n    >\n      <Label\n        className=\"sendbird-dropdown__menu-item__text\"\n        type={LabelTypography.SUBTITLE_2}\n        color={disable ? LabelColors.ONBACKGROUND_4 : LabelColors.ONBACKGROUND_1}\n      >\n        {children}\n      </Label>\n    </li>\n  );\n};\n\nexport const MenuRoot = (): ReactElement => (\n  <div\n    id=\"sendbird-dropdown-portal\"\n    className=\"sendbird-dropdown-portal\"\n  />\n);\n\n// For the test environment\nexport const EmojiReactionListRoot = (): ReactElement => <div id=\"sendbird-emoji-list-portal\" />;\n\ntype MenuDisplayingFunc = () => void;\nexport interface ContextMenuProps {\n  menuTrigger?: (func: MenuDisplayingFunc) => ReactElement;\n  menuItems: (func: MenuDisplayingFunc) => ReactElement;\n  isOpen?: boolean;\n  onClick?: (...args: any[]) => void;\n}\nexport default function ContextMenu({\n  menuTrigger,\n  menuItems,\n  isOpen,\n  onClick,\n}: ContextMenuProps): ReactElement {\n  const [showMenu, setShowMenu] = useState(false);\n  return (\n    <div\n      className=\"sendbird-context-menu\"\n      style={{ display: 'inline' }}\n      onClick={onClick}\n    >\n      {menuTrigger?.(() => setShowMenu(!showMenu))}\n      {(showMenu || isOpen) && menuItems(() => setShowMenu(false))}\n    </div>\n  );\n}\n", "import React, { ChangeEvent, MutableRefObject, ReactElement, useContext } from 'react';\nimport { User } from '@sendbird/chat';\nimport { Member } from '@sendbird/chat/groupChannel';\nimport './index.scss';\n\nimport { UserProfileContext } from '../../lib/UserProfileContext';\nimport { LocalizationContext } from '../../lib/LocalizationContext';\nimport Avatar from '../Avatar/index';\nimport MutedAvatarOverlay from '../Avatar/MutedAvatarOverlay';\nimport Checkbox from '../Checkbox';\nimport UserProfile from '../UserProfile';\nimport ContextMenu, { MenuItems } from '../ContextMenu';\nimport Label, { LabelTypography, LabelColors } from '../Label';\n\nexport interface UserListItemProps {\n  user: User;\n  className?: string;\n  checked?: boolean;\n  checkBox?: boolean;\n  isOperator?: boolean;\n  disabled?: boolean;\n  disableMessaging?: boolean;\n  currentUser?: string;\n  action?({ actionRef, parentRef }: {\n    actionRef: MutableRefObject<any>,\n    parentRef?: MutableRefObject<any>,\n  }): ReactElement;\n  onChange?(e: ChangeEvent<HTMLInputElement>): void;\n  avatarSize?: string;\n  onClick?(): void,\n}\n\nexport default function UserListItem({\n  user,\n  className,\n  checked,\n  checkBox,\n  isOperator,\n  disabled,\n  disableMessaging,\n  currentUser,\n  action,\n  onChange,\n  avatarSize = '40px',\n  onClick,\n}: UserListItemProps): ReactElement {\n  const uniqueKey = user.userId;\n  const actionRef = React.useRef(null);\n  const parentRef = React.useRef(null);\n  const avatarRef = React.useRef(null);\n  const { disableUserProfile, renderUserProfile } = useContext(UserProfileContext);\n  const { stringSet } = useContext(LocalizationContext);\n  return (\n    <div\n      className={[\n        ...(Array.isArray(className) ? className : [className]),\n        'sendbird-user-list-item',\n      ].join(' ')}\n      ref={parentRef}\n    >\n      {\n        (user as Member)?.isMuted && (\n          <MutedAvatarOverlay height={40} width={40} />\n        )\n      }\n      <ContextMenu\n        menuTrigger={(toggleDropdown) => (\n          <Avatar\n            className=\"sendbird-user-list-item__avatar\"\n            ref={avatarRef}\n            src={user.profileUrl}\n            width={avatarSize}\n            height={avatarSize}\n            onClick={() => {\n              if (!disableUserProfile) {\n                toggleDropdown();\n                onClick?.();\n              }\n            }}\n          />\n        )}\n        menuItems={(closeDropdown) => (\n          <MenuItems\n            openLeft\n            parentRef={avatarRef}\n            // for catching location(x, y) of MenuItems\n            parentContainRef={avatarRef}\n            // for toggling more options(menus & reactions)\n            closeDropdown={closeDropdown}\n            style={{ paddingTop: '0px', paddingBottom: '0px' }}\n          >\n            {\n              renderUserProfile\n                ? renderUserProfile({\n                  user,\n                  currentUserId: currentUser,\n                  close: closeDropdown,\n                })\n                : (\n                  <UserProfile\n                    disableMessaging={disableMessaging}\n                    user={user}\n                    currentUserId={currentUser}\n                    onSuccess={closeDropdown}\n                  />\n                )\n            }\n          </MenuItems>\n        )}\n      />\n      <Label\n        className=\"sendbird-user-list-item__title\"\n        type={LabelTypography.SUBTITLE_1}\n        color={LabelColors.ONBACKGROUND_1}\n      >\n        {user.nickname || stringSet.NO_NAME}\n        {\n          (currentUser === user.userId) && (\n            ' (You)'\n          )\n        }\n      </Label>\n      { // if there is now nickname, display userId\n        !user.nickname && (\n          <Label\n            className=\"sendbird-user-list-item__subtitle\"\n            type={LabelTypography.CAPTION_3}\n            color={LabelColors.ONBACKGROUND_2}\n          >\n            {user.userId}\n          </Label>\n        )\n      }\n      {\n        checkBox && (\n          <label\n            className=\"sendbird-user-list-item__checkbox\"\n            htmlFor={uniqueKey}\n          >\n            <Checkbox\n              id={uniqueKey}\n              checked={checked}\n              disabled={disabled}\n              onChange={(event) => onChange(event)}\n            />\n          </label>\n        )\n      }\n      {\n        isOperator && (\n          <Label\n            className={[\n              'sendbird-user-list-item__operator',\n              checkBox ? 'checkbox' : '',\n            ].join(' ')}\n            type={LabelTypography.SUBTITLE_2}\n            color={LabelColors.ONBACKGROUND_2}\n          >\n            Operator\n          </Label>\n        )\n      }\n      {\n        action && (\n          <div\n            className=\"sendbird-user-list-item__action\"\n            ref={actionRef}\n          >\n            {action({ actionRef, parentRef })}\n          </div>\n        )\n      }\n    </div>\n  );\n}\n", "import type { GroupChannel } from '@sendbird/chat/groupChannel';\nimport type { OpenChannel } from '@sendbird/chat/openChannel';\n\nexport const DEFAULT_URL_PREFIX = 'https://static.sendbird.com/sample/cover/cover_';\n\nexport const getOpenChannelAvatar = (channel: OpenChannel): string => {\n  if (channel?.coverUrl) {\n    return channel.coverUrl;\n  }\n};\n\nexport const getChannelAvatarSource = (channel: GroupChannel, currentUserId: string): string | Array<string> => {\n  if (channel?.coverUrl) {\n    if (!(new RegExp(`^${DEFAULT_URL_PREFIX}`).test(channel.coverUrl))) {\n      return channel.coverUrl;\n    }\n  }\n  return (channel?.members || [])\n    .filter((member) => member.userId !== currentUserId)\n    .map(({ profileUrl }) => profileUrl);\n};\n\nexport const generateDefaultAvatar = (channel: GroupChannel): boolean => {\n  if (channel?.coverUrl) {\n    if (new RegExp(`^${DEFAULT_URL_PREFIX}`).test(channel.coverUrl)) {\n      return true;\n    }\n    return false;\n  }\n  return true;\n};\n", "import './index.scss';\nimport React, { useMemo } from 'react';\n\nimport type { GroupChannel } from '@sendbird/chat/groupChannel';\n\nimport Avatar from '../Avatar/index';\nimport Icon, { IconTypes, IconColors } from '../Icon';\n\nimport * as utils from './utils';\n\ninterface Props {\n  channel: GroupChannel;\n  userId: string;\n  theme: string;\n  width?: number,\n  height?: number,\n}\n\nfunction ChannelAvatar({\n  channel,\n  userId,\n  theme,\n  width = 56,\n  height = 56,\n}: Props): JSX.Element {\n  const isBroadcast = channel?.isBroadcast;\n  const memoizedAvatar = useMemo(() => (\n    isBroadcast\n      ? (\n        utils.generateDefaultAvatar(channel)\n          ? (\n            <div\n              className=\"sendbird-chat-header--default-avatar\"\n              style={{\n                width,\n                height,\n                display: 'flex',\n                justifyContent: 'center',\n                alignItems: 'center',\n              }}\n            >\n              <Icon\n                type={IconTypes.BROADCAST}\n                fillColor={IconColors.CONTENT}\n                width={width * 0.575}\n                height={height * 0.575}\n              />\n            </div>\n          )\n          : (\n            <Avatar\n              className=\"sendbird-chat-header--avatar--broadcast-channel\"\n              src={utils.getChannelAvatarSource(channel, userId)}\n              width={width}\n              height={height}\n              alt={channel?.name}\n            />\n          )\n      )\n      : (\n        <Avatar\n          className=\"sendbird-chat-header--avatar--group-channel\"\n          src={utils.getChannelAvatarSource(channel, userId)}\n          width={`${width}px`}\n          height={`${height}px`}\n          alt={channel?.name}\n        />\n      )\n  ), [channel?.members, channel?.coverUrl, theme]);\n  return (\n    <>{ memoizedAvatar }</>\n  );\n}\n\nexport default ChannelAvatar;\n", "export default function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, _typeof(o);\n}", "export default function requiredArgs(required, args) {\n  if (args.length < required) {\n    throw new TypeError(required + ' argument' + (required > 1 ? 's' : '') + ' required, but only ' + args.length + ' present');\n  }\n}", "import _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name toDate\n * @category Common Helpers\n * @summary Convert the given argument to an instance of Date.\n *\n * @description\n * Convert the given argument to an instance of Date.\n *\n * If the argument is an instance of Date, the function returns its clone.\n *\n * If the argument is a number, it is treated as a timestamp.\n *\n * If the argument is none of the above, the function returns Invalid Date.\n *\n * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.\n *\n * @param {Date|Number} argument - the value to convert\n * @returns {Date} the parsed date in the local time zone\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Clone the date:\n * const result = toDate(new Date(2014, 1, 11, 11, 30, 30))\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert the timestamp to date:\n * const result = toDate(1392098430000)\n * //=> Tue Feb 11 2014 11:30:30\n */\nexport default function toDate(argument) {\n  requiredArgs(1, arguments);\n  var argStr = Object.prototype.toString.call(argument);\n\n  // Clone the date\n  if (argument instanceof Date || _typeof(argument) === 'object' && argStr === '[object Date]') {\n    // Prevent the date to lose the milliseconds when passed to new Date() in IE10\n    return new Date(argument.getTime());\n  } else if (typeof argument === 'number' || argStr === '[object Number]') {\n    return new Date(argument);\n  } else {\n    if ((typeof argument === 'string' || argStr === '[object String]') && typeof console !== 'undefined') {\n      // eslint-disable-next-line no-console\n      console.warn(\"Starting with v2.0.0-beta.1 date-fns doesn't accept strings as date arguments. Please use `parseISO` to parse strings. See: https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#string-arguments\");\n      // eslint-disable-next-line no-console\n      console.warn(new Error().stack);\n    }\n    return new Date(NaN);\n  }\n}", "import _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isDate\n * @category Common Helpers\n * @summary Is the given value a date?\n *\n * @description\n * Returns true if the given value is an instance of Date. The function works for dates transferred across iframes.\n *\n * @param {*} value - the value to check\n * @returns {boolean} true if the given value is a date\n * @throws {TypeError} 1 arguments required\n *\n * @example\n * // For a valid date:\n * const result = isDate(new Date())\n * //=> true\n *\n * @example\n * // For an invalid date:\n * const result = isDate(new Date(NaN))\n * //=> true\n *\n * @example\n * // For some value:\n * const result = isDate('2014-02-31')\n * //=> false\n *\n * @example\n * // For an object:\n * const result = isDate({})\n * //=> false\n */\nexport default function isDate(value) {\n  requiredArgs(1, arguments);\n  return value instanceof Date || _typeof(value) === 'object' && Object.prototype.toString.call(value) === '[object Date]';\n}", "import isDate from \"../isDate/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isValid\n * @category Common Helpers\n * @summary Is the given date valid?\n *\n * @description\n * Returns false if argument is Invalid Date and true otherwise.\n * Argument is converted to Date using `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}\n * Invalid Date is a Date, whose time value is NaN.\n *\n * Time value of Date: http://es5.github.io/#x15.9.1.1\n *\n * @param {*} date - the date to check\n * @returns {Boolean} the date is valid\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // For the valid date:\n * const result = isValid(new Date(2014, 1, 31))\n * //=> true\n *\n * @example\n * // For the value, convertable into a date:\n * const result = isValid(1393804800000)\n * //=> true\n *\n * @example\n * // For the invalid date:\n * const result = isValid(new Date(''))\n * //=> false\n */\nexport default function isValid(dirtyDate) {\n  requiredArgs(1, arguments);\n  if (!isDate(dirtyDate) && typeof dirtyDate !== 'number') {\n    return false;\n  }\n  var date = toDate(dirtyDate);\n  return !isNaN(Number(date));\n}", "export default function toInteger(dirtyNumber) {\n  if (dirtyNumber === null || dirtyNumber === true || dirtyNumber === false) {\n    return NaN;\n  }\n  var number = Number(dirtyNumber);\n  if (isNaN(number)) {\n    return number;\n  }\n  return number < 0 ? Math.ceil(number) : Math.floor(number);\n}", "import toInteger from \"../_lib/toInteger/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name addMilliseconds\n * @category Millisecond Helpers\n * @summary Add the specified number of milliseconds to the given date.\n *\n * @description\n * Add the specified number of milliseconds to the given date.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of milliseconds to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the milliseconds added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 750 milliseconds to 10 July 2014 12:45:30.000:\n * const result = addMilliseconds(new Date(2014, 6, 10, 12, 45, 30, 0), 750)\n * //=> Thu Jul 10 2014 12:45:30.750\n */\nexport default function addMilliseconds(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var timestamp = toDate(dirtyDate).getTime();\n  var amount = toInteger(dirtyAmount);\n  return new Date(timestamp + amount);\n}", "import addMilliseconds from \"../addMilliseconds/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\n/**\n * @name subMilliseconds\n * @category Millisecond Helpers\n * @summary Subtract the specified number of milliseconds from the given date.\n *\n * @description\n * Subtract the specified number of milliseconds from the given date.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of milliseconds to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the milliseconds subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 750 milliseconds from 10 July 2014 12:45:30.000:\n * const result = subMilliseconds(new Date(2014, 6, 10, 12, 45, 30, 0), 750)\n * //=> Thu Jul 10 2014 12:45:29.250\n */\nexport default function subMilliseconds(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addMilliseconds(dirtyDate, -amount);\n}", "import toDate from \"../../toDate/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nvar MILLISECONDS_IN_DAY = 86400000;\nexport default function getUTCDayOfYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var timestamp = date.getTime();\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n  var startOfYearTimestamp = date.getTime();\n  var difference = timestamp - startOfYearTimestamp;\n  return Math.floor(difference / MILLISECONDS_IN_DAY) + 1;\n}", "import toDate from \"../../toDate/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nexport default function startOfUTCISOWeek(dirtyDate) {\n  requiredArgs(1, arguments);\n  var weekStartsOn = 1;\n  var date = toDate(dirtyDate);\n  var day = date.getUTCDay();\n  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n  date.setUTCDate(date.getUTCDate() - diff);\n  date.setUTCHours(0, 0, 0, 0);\n  return date;\n}", "import toDate from \"../../toDate/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nimport startOfUTCISOWeek from \"../startOfUTCISOWeek/index.js\";\nexport default function getUTCISOWeekYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var year = date.getUTCFullYear();\n  var fourthOfJanuaryOfNextYear = new Date(0);\n  fourthOfJanuaryOfNextYear.setUTCFullYear(year + 1, 0, 4);\n  fourthOfJanuaryOfNextYear.setUTCHours(0, 0, 0, 0);\n  var startOfNextYear = startOfUTCISOWeek(fourthOfJanuaryOfNextYear);\n  var fourthOfJanuaryOfThisYear = new Date(0);\n  fourthOfJanuaryOfThisYear.setUTCFullYear(year, 0, 4);\n  fourthOfJanuaryOfThisYear.setUTCHours(0, 0, 0, 0);\n  var startOfThisYear = startOfUTCISOWeek(fourthOfJanuaryOfThisYear);\n  if (date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}", "import getUTCISOWeekYear from \"../getUTCISOWeekYear/index.js\";\nimport startOfUTCISOWeek from \"../startOfUTCISOWeek/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nexport default function startOfUTCISOWeekYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var year = getUTCISOWeekYear(dirtyDate);\n  var fourthOfJanuary = new Date(0);\n  fourthOfJanuary.setUTCFullYear(year, 0, 4);\n  fourthOfJanuary.setUTCHours(0, 0, 0, 0);\n  var date = startOfUTCISOWeek(fourthOfJanuary);\n  return date;\n}", "import toDate from \"../../toDate/index.js\";\nimport startOfUTCISOWeek from \"../startOfUTCISOWeek/index.js\";\nimport startOfUTCISOWeekYear from \"../startOfUTCISOWeekYear/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nvar MILLISECONDS_IN_WEEK = 604800000;\nexport default function getUTCISOWeek(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var diff = startOfUTCISOWeek(date).getTime() - startOfUTCISOWeekYear(date).getTime();\n\n  // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n  return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;\n}", "var defaultOptions = {};\nexport function getDefaultOptions() {\n  return defaultOptions;\n}\nexport function setDefaultOptions(newOptions) {\n  defaultOptions = newOptions;\n}", "import toDate from \"../../toDate/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nimport toInteger from \"../toInteger/index.js\";\nimport { getDefaultOptions } from \"../defaultOptions/index.js\";\nexport default function startOfUTCWeek(dirtyDate, options) {\n  var _ref, _ref2, _ref3, _options$weekStartsOn, _options$locale, _options$locale$optio, _defaultOptions$local, _defaultOptions$local2;\n  requiredArgs(1, arguments);\n  var defaultOptions = getDefaultOptions();\n  var weekStartsOn = toInteger((_ref = (_ref2 = (_ref3 = (_options$weekStartsOn = options === null || options === void 0 ? void 0 : options.weekStartsOn) !== null && _options$weekStartsOn !== void 0 ? _options$weekStartsOn : options === null || options === void 0 ? void 0 : (_options$locale = options.locale) === null || _options$locale === void 0 ? void 0 : (_options$locale$optio = _options$locale.options) === null || _options$locale$optio === void 0 ? void 0 : _options$locale$optio.weekStartsOn) !== null && _ref3 !== void 0 ? _ref3 : defaultOptions.weekStartsOn) !== null && _ref2 !== void 0 ? _ref2 : (_defaultOptions$local = defaultOptions.locale) === null || _defaultOptions$local === void 0 ? void 0 : (_defaultOptions$local2 = _defaultOptions$local.options) === null || _defaultOptions$local2 === void 0 ? void 0 : _defaultOptions$local2.weekStartsOn) !== null && _ref !== void 0 ? _ref : 0);\n\n  // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n  var date = toDate(dirtyDate);\n  var day = date.getUTCDay();\n  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n  date.setUTCDate(date.getUTCDate() - diff);\n  date.setUTCHours(0, 0, 0, 0);\n  return date;\n}", "import toDate from \"../../toDate/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nimport startOfUTCWeek from \"../startOfUTCWeek/index.js\";\nimport toInteger from \"../toInteger/index.js\";\nimport { getDefaultOptions } from \"../defaultOptions/index.js\";\nexport default function getUTCWeekYear(dirtyDate, options) {\n  var _ref, _ref2, _ref3, _options$firstWeekCon, _options$locale, _options$locale$optio, _defaultOptions$local, _defaultOptions$local2;\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var year = date.getUTCFullYear();\n  var defaultOptions = getDefaultOptions();\n  var firstWeekContainsDate = toInteger((_ref = (_ref2 = (_ref3 = (_options$firstWeekCon = options === null || options === void 0 ? void 0 : options.firstWeekContainsDate) !== null && _options$firstWeekCon !== void 0 ? _options$firstWeekCon : options === null || options === void 0 ? void 0 : (_options$locale = options.locale) === null || _options$locale === void 0 ? void 0 : (_options$locale$optio = _options$locale.options) === null || _options$locale$optio === void 0 ? void 0 : _options$locale$optio.firstWeekContainsDate) !== null && _ref3 !== void 0 ? _ref3 : defaultOptions.firstWeekContainsDate) !== null && _ref2 !== void 0 ? _ref2 : (_defaultOptions$local = defaultOptions.locale) === null || _defaultOptions$local === void 0 ? void 0 : (_defaultOptions$local2 = _defaultOptions$local.options) === null || _defaultOptions$local2 === void 0 ? void 0 : _defaultOptions$local2.firstWeekContainsDate) !== null && _ref !== void 0 ? _ref : 1);\n\n  // Test if weekStartsOn is between 1 and 7 _and_ is not NaN\n  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {\n    throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');\n  }\n  var firstWeekOfNextYear = new Date(0);\n  firstWeekOfNextYear.setUTCFullYear(year + 1, 0, firstWeekContainsDate);\n  firstWeekOfNextYear.setUTCHours(0, 0, 0, 0);\n  var startOfNextYear = startOfUTCWeek(firstWeekOfNextYear, options);\n  var firstWeekOfThisYear = new Date(0);\n  firstWeekOfThisYear.setUTCFullYear(year, 0, firstWeekContainsDate);\n  firstWeekOfThisYear.setUTCHours(0, 0, 0, 0);\n  var startOfThisYear = startOfUTCWeek(firstWeekOfThisYear, options);\n  if (date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}", "import getUTCWeekYear from \"../getUTCWeekYear/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nimport startOfUTCWeek from \"../startOfUTCWeek/index.js\";\nimport toInteger from \"../toInteger/index.js\";\nimport { getDefaultOptions } from \"../defaultOptions/index.js\";\nexport default function startOfUTCWeekYear(dirtyDate, options) {\n  var _ref, _ref2, _ref3, _options$firstWeekCon, _options$locale, _options$locale$optio, _defaultOptions$local, _defaultOptions$local2;\n  requiredArgs(1, arguments);\n  var defaultOptions = getDefaultOptions();\n  var firstWeekContainsDate = toInteger((_ref = (_ref2 = (_ref3 = (_options$firstWeekCon = options === null || options === void 0 ? void 0 : options.firstWeekContainsDate) !== null && _options$firstWeekCon !== void 0 ? _options$firstWeekCon : options === null || options === void 0 ? void 0 : (_options$locale = options.locale) === null || _options$locale === void 0 ? void 0 : (_options$locale$optio = _options$locale.options) === null || _options$locale$optio === void 0 ? void 0 : _options$locale$optio.firstWeekContainsDate) !== null && _ref3 !== void 0 ? _ref3 : defaultOptions.firstWeekContainsDate) !== null && _ref2 !== void 0 ? _ref2 : (_defaultOptions$local = defaultOptions.locale) === null || _defaultOptions$local === void 0 ? void 0 : (_defaultOptions$local2 = _defaultOptions$local.options) === null || _defaultOptions$local2 === void 0 ? void 0 : _defaultOptions$local2.firstWeekContainsDate) !== null && _ref !== void 0 ? _ref : 1);\n  var year = getUTCWeekYear(dirtyDate, options);\n  var firstWeek = new Date(0);\n  firstWeek.setUTCFullYear(year, 0, firstWeekContainsDate);\n  firstWeek.setUTCHours(0, 0, 0, 0);\n  var date = startOfUTCWeek(firstWeek, options);\n  return date;\n}", "import toDate from \"../../toDate/index.js\";\nimport startOfUTCWeek from \"../startOfUTCWeek/index.js\";\nimport startOfUTCWeekYear from \"../startOfUTCWeekYear/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nvar MILLISECONDS_IN_WEEK = 604800000;\nexport default function getUTCWeek(dirtyDate, options) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var diff = startOfUTCWeek(date, options).getTime() - startOfUTCWeekYear(date, options).getTime();\n\n  // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n  return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;\n}", "export default function addLeadingZeros(number, targetLength) {\n  var sign = number < 0 ? '-' : '';\n  var output = Math.abs(number).toString();\n  while (output.length < targetLength) {\n    output = '0' + output;\n  }\n  return sign + output;\n}", "import addLeadingZeros from \"../../addLeadingZeros/index.js\";\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* |                                |\n * |  d  | Day of month                   |  D  |                                |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  m  | Minute                         |  M  | Month                          |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  y  | Year (abs)                     |  Y  |                                |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n */\nvar formatters = {\n  // Year\n  y: function y(date, token) {\n    // From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_tokens\n    // | Year     |     y | yy |   yyy |  yyyy | yyyyy |\n    // |----------|-------|----|-------|-------|-------|\n    // | AD 1     |     1 | 01 |   001 |  0001 | 00001 |\n    // | AD 12    |    12 | 12 |   012 |  0012 | 00012 |\n    // | AD 123   |   123 | 23 |   123 |  0123 | 00123 |\n    // | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |\n    // | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |\n\n    var signedYear = date.getUTCFullYear();\n    // Returns 1 for 1 BC (which is year 0 in JavaScript)\n    var year = signedYear > 0 ? signedYear : 1 - signedYear;\n    return addLeadingZeros(token === 'yy' ? year % 100 : year, token.length);\n  },\n  // Month\n  M: function M(date, token) {\n    var month = date.getUTCMonth();\n    return token === 'M' ? String(month + 1) : addLeadingZeros(month + 1, 2);\n  },\n  // Day of the month\n  d: function d(date, token) {\n    return addLeadingZeros(date.getUTCDate(), token.length);\n  },\n  // AM or PM\n  a: function a(date, token) {\n    var dayPeriodEnumValue = date.getUTCHours() / 12 >= 1 ? 'pm' : 'am';\n    switch (token) {\n      case 'a':\n      case 'aa':\n        return dayPeriodEnumValue.toUpperCase();\n      case 'aaa':\n        return dayPeriodEnumValue;\n      case 'aaaaa':\n        return dayPeriodEnumValue[0];\n      case 'aaaa':\n      default:\n        return dayPeriodEnumValue === 'am' ? 'a.m.' : 'p.m.';\n    }\n  },\n  // Hour [1-12]\n  h: function h(date, token) {\n    return addLeadingZeros(date.getUTCHours() % 12 || 12, token.length);\n  },\n  // Hour [0-23]\n  H: function H(date, token) {\n    return addLeadingZeros(date.getUTCHours(), token.length);\n  },\n  // Minute\n  m: function m(date, token) {\n    return addLeadingZeros(date.getUTCMinutes(), token.length);\n  },\n  // Second\n  s: function s(date, token) {\n    return addLeadingZeros(date.getUTCSeconds(), token.length);\n  },\n  // Fraction of second\n  S: function S(date, token) {\n    var numberOfDigits = token.length;\n    var milliseconds = date.getUTCMilliseconds();\n    var fractionalSeconds = Math.floor(milliseconds * Math.pow(10, numberOfDigits - 3));\n    return addLeadingZeros(fractionalSeconds, token.length);\n  }\n};\nexport default formatters;", "import getUTCDayOfYear from \"../../../_lib/getUTCDayOfYear/index.js\";\nimport getUTCISOWeek from \"../../../_lib/getUTCISOWeek/index.js\";\nimport getUTCISOWeekYear from \"../../../_lib/getUTCISOWeekYear/index.js\";\nimport getUTCWeek from \"../../../_lib/getUTCWeek/index.js\";\nimport getUTCWeekYear from \"../../../_lib/getUTCWeekYear/index.js\";\nimport addLeadingZeros from \"../../addLeadingZeros/index.js\";\nimport lightFormatters from \"../lightFormatters/index.js\";\nvar dayPeriodEnum = {\n  am: 'am',\n  pm: 'pm',\n  midnight: 'midnight',\n  noon: 'noon',\n  morning: 'morning',\n  afternoon: 'afternoon',\n  evening: 'evening',\n  night: 'night'\n};\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* | Milliseconds in day            |\n * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |\n * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |\n * |  d  | Day of month                   |  D  | Day of year                    |\n * |  e  | Local day of week              |  E  | Day of week                    |\n * |  f  |                                |  F* | Day of week in month           |\n * |  g* | Modified Julian day            |  G  | Era                            |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  i! | ISO day of week                |  I! | ISO week of year               |\n * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |\n * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |\n * |  l* | (deprecated)                   |  L  | Stand-alone month              |\n * |  m  | Minute                         |  M  | Month                          |\n * |  n  |                                |  N  |                                |\n * |  o! | Ordinal number modifier        |  O  | Timezone (GMT)                 |\n * |  p! | Long localized time            |  P! | Long localized date            |\n * |  q  | Stand-alone quarter            |  Q  | Quarter                        |\n * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |\n * |  u  | Extended year                  |  U* | Cyclic year                    |\n * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |\n * |  w  | Local week of year             |  W* | Week of month                  |\n * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |\n * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |\n * |  z  | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n *\n * Letters marked by ! are non-standard, but implemented by date-fns:\n * - `o` modifies the previous token to turn it into an ordinal (see `format` docs)\n * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,\n *   i.e. 7 for Sunday, 1 for Monday, etc.\n * - `I` is ISO week of year, as opposed to `w` which is local week of year.\n * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.\n *   `R` is supposed to be used in conjunction with `I` and `i`\n *   for universal ISO week-numbering date, whereas\n *   `Y` is supposed to be used in conjunction with `w` and `e`\n *   for week-numbering date specific to the locale.\n * - `P` is long localized date format\n * - `p` is long localized time format\n */\n\nvar formatters = {\n  // Era\n  G: function G(date, token, localize) {\n    var era = date.getUTCFullYear() > 0 ? 1 : 0;\n    switch (token) {\n      // AD, BC\n      case 'G':\n      case 'GG':\n      case 'GGG':\n        return localize.era(era, {\n          width: 'abbreviated'\n        });\n      // A, B\n      case 'GGGGG':\n        return localize.era(era, {\n          width: 'narrow'\n        });\n      // Anno Domini, Before Christ\n      case 'GGGG':\n      default:\n        return localize.era(era, {\n          width: 'wide'\n        });\n    }\n  },\n  // Year\n  y: function y(date, token, localize) {\n    // Ordinal number\n    if (token === 'yo') {\n      var signedYear = date.getUTCFullYear();\n      // Returns 1 for 1 BC (which is year 0 in JavaScript)\n      var year = signedYear > 0 ? signedYear : 1 - signedYear;\n      return localize.ordinalNumber(year, {\n        unit: 'year'\n      });\n    }\n    return lightFormatters.y(date, token);\n  },\n  // Local week-numbering year\n  Y: function Y(date, token, localize, options) {\n    var signedWeekYear = getUTCWeekYear(date, options);\n    // Returns 1 for 1 BC (which is year 0 in JavaScript)\n    var weekYear = signedWeekYear > 0 ? signedWeekYear : 1 - signedWeekYear;\n\n    // Two digit year\n    if (token === 'YY') {\n      var twoDigitYear = weekYear % 100;\n      return addLeadingZeros(twoDigitYear, 2);\n    }\n\n    // Ordinal number\n    if (token === 'Yo') {\n      return localize.ordinalNumber(weekYear, {\n        unit: 'year'\n      });\n    }\n\n    // Padding\n    return addLeadingZeros(weekYear, token.length);\n  },\n  // ISO week-numbering year\n  R: function R(date, token) {\n    var isoWeekYear = getUTCISOWeekYear(date);\n\n    // Padding\n    return addLeadingZeros(isoWeekYear, token.length);\n  },\n  // Extended year. This is a single number designating the year of this calendar system.\n  // The main difference between `y` and `u` localizers are B.C. years:\n  // | Year | `y` | `u` |\n  // |------|-----|-----|\n  // | AC 1 |   1 |   1 |\n  // | BC 1 |   1 |   0 |\n  // | BC 2 |   2 |  -1 |\n  // Also `yy` always returns the last two digits of a year,\n  // while `uu` pads single digit years to 2 characters and returns other years unchanged.\n  u: function u(date, token) {\n    var year = date.getUTCFullYear();\n    return addLeadingZeros(year, token.length);\n  },\n  // Quarter\n  Q: function Q(date, token, localize) {\n    var quarter = Math.ceil((date.getUTCMonth() + 1) / 3);\n    switch (token) {\n      // 1, 2, 3, 4\n      case 'Q':\n        return String(quarter);\n      // 01, 02, 03, 04\n      case 'QQ':\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n      case 'Qo':\n        return localize.ordinalNumber(quarter, {\n          unit: 'quarter'\n        });\n      // Q1, Q2, Q3, Q4\n      case 'QQQ':\n        return localize.quarter(quarter, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n      case 'QQQQQ':\n        return localize.quarter(quarter, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // 1st quarter, 2nd quarter, ...\n      case 'QQQQ':\n      default:\n        return localize.quarter(quarter, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Stand-alone quarter\n  q: function q(date, token, localize) {\n    var quarter = Math.ceil((date.getUTCMonth() + 1) / 3);\n    switch (token) {\n      // 1, 2, 3, 4\n      case 'q':\n        return String(quarter);\n      // 01, 02, 03, 04\n      case 'qq':\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n      case 'qo':\n        return localize.ordinalNumber(quarter, {\n          unit: 'quarter'\n        });\n      // Q1, Q2, Q3, Q4\n      case 'qqq':\n        return localize.quarter(quarter, {\n          width: 'abbreviated',\n          context: 'standalone'\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n      case 'qqqqq':\n        return localize.quarter(quarter, {\n          width: 'narrow',\n          context: 'standalone'\n        });\n      // 1st quarter, 2nd quarter, ...\n      case 'qqqq':\n      default:\n        return localize.quarter(quarter, {\n          width: 'wide',\n          context: 'standalone'\n        });\n    }\n  },\n  // Month\n  M: function M(date, token, localize) {\n    var month = date.getUTCMonth();\n    switch (token) {\n      case 'M':\n      case 'MM':\n        return lightFormatters.M(date, token);\n      // 1st, 2nd, ..., 12th\n      case 'Mo':\n        return localize.ordinalNumber(month + 1, {\n          unit: 'month'\n        });\n      // Jan, Feb, ..., Dec\n      case 'MMM':\n        return localize.month(month, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // J, F, ..., D\n      case 'MMMMM':\n        return localize.month(month, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // January, February, ..., December\n      case 'MMMM':\n      default:\n        return localize.month(month, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Stand-alone month\n  L: function L(date, token, localize) {\n    var month = date.getUTCMonth();\n    switch (token) {\n      // 1, 2, ..., 12\n      case 'L':\n        return String(month + 1);\n      // 01, 02, ..., 12\n      case 'LL':\n        return addLeadingZeros(month + 1, 2);\n      // 1st, 2nd, ..., 12th\n      case 'Lo':\n        return localize.ordinalNumber(month + 1, {\n          unit: 'month'\n        });\n      // Jan, Feb, ..., Dec\n      case 'LLL':\n        return localize.month(month, {\n          width: 'abbreviated',\n          context: 'standalone'\n        });\n      // J, F, ..., D\n      case 'LLLLL':\n        return localize.month(month, {\n          width: 'narrow',\n          context: 'standalone'\n        });\n      // January, February, ..., December\n      case 'LLLL':\n      default:\n        return localize.month(month, {\n          width: 'wide',\n          context: 'standalone'\n        });\n    }\n  },\n  // Local week of year\n  w: function w(date, token, localize, options) {\n    var week = getUTCWeek(date, options);\n    if (token === 'wo') {\n      return localize.ordinalNumber(week, {\n        unit: 'week'\n      });\n    }\n    return addLeadingZeros(week, token.length);\n  },\n  // ISO week of year\n  I: function I(date, token, localize) {\n    var isoWeek = getUTCISOWeek(date);\n    if (token === 'Io') {\n      return localize.ordinalNumber(isoWeek, {\n        unit: 'week'\n      });\n    }\n    return addLeadingZeros(isoWeek, token.length);\n  },\n  // Day of the month\n  d: function d(date, token, localize) {\n    if (token === 'do') {\n      return localize.ordinalNumber(date.getUTCDate(), {\n        unit: 'date'\n      });\n    }\n    return lightFormatters.d(date, token);\n  },\n  // Day of year\n  D: function D(date, token, localize) {\n    var dayOfYear = getUTCDayOfYear(date);\n    if (token === 'Do') {\n      return localize.ordinalNumber(dayOfYear, {\n        unit: 'dayOfYear'\n      });\n    }\n    return addLeadingZeros(dayOfYear, token.length);\n  },\n  // Day of week\n  E: function E(date, token, localize) {\n    var dayOfWeek = date.getUTCDay();\n    switch (token) {\n      // Tue\n      case 'E':\n      case 'EE':\n      case 'EEE':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // T\n      case 'EEEEE':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // Tu\n      case 'EEEEEE':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'formatting'\n        });\n      // Tuesday\n      case 'EEEE':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Local day of week\n  e: function e(date, token, localize, options) {\n    var dayOfWeek = date.getUTCDay();\n    var localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n    switch (token) {\n      // Numerical value (Nth day of week with current locale or weekStartsOn)\n      case 'e':\n        return String(localDayOfWeek);\n      // Padded numerical value\n      case 'ee':\n        return addLeadingZeros(localDayOfWeek, 2);\n      // 1st, 2nd, ..., 7th\n      case 'eo':\n        return localize.ordinalNumber(localDayOfWeek, {\n          unit: 'day'\n        });\n      case 'eee':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // T\n      case 'eeeee':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // Tu\n      case 'eeeeee':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'formatting'\n        });\n      // Tuesday\n      case 'eeee':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Stand-alone local day of week\n  c: function c(date, token, localize, options) {\n    var dayOfWeek = date.getUTCDay();\n    var localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n    switch (token) {\n      // Numerical value (same as in `e`)\n      case 'c':\n        return String(localDayOfWeek);\n      // Padded numerical value\n      case 'cc':\n        return addLeadingZeros(localDayOfWeek, token.length);\n      // 1st, 2nd, ..., 7th\n      case 'co':\n        return localize.ordinalNumber(localDayOfWeek, {\n          unit: 'day'\n        });\n      case 'ccc':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'standalone'\n        });\n      // T\n      case 'ccccc':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'standalone'\n        });\n      // Tu\n      case 'cccccc':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'standalone'\n        });\n      // Tuesday\n      case 'cccc':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'standalone'\n        });\n    }\n  },\n  // ISO day of week\n  i: function i(date, token, localize) {\n    var dayOfWeek = date.getUTCDay();\n    var isoDayOfWeek = dayOfWeek === 0 ? 7 : dayOfWeek;\n    switch (token) {\n      // 2\n      case 'i':\n        return String(isoDayOfWeek);\n      // 02\n      case 'ii':\n        return addLeadingZeros(isoDayOfWeek, token.length);\n      // 2nd\n      case 'io':\n        return localize.ordinalNumber(isoDayOfWeek, {\n          unit: 'day'\n        });\n      // Tue\n      case 'iii':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // T\n      case 'iiiii':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // Tu\n      case 'iiiiii':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'formatting'\n        });\n      // Tuesday\n      case 'iiii':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // AM or PM\n  a: function a(date, token, localize) {\n    var hours = date.getUTCHours();\n    var dayPeriodEnumValue = hours / 12 >= 1 ? 'pm' : 'am';\n    switch (token) {\n      case 'a':\n      case 'aa':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      case 'aaa':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        }).toLowerCase();\n      case 'aaaaa':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      case 'aaaa':\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // AM, PM, midnight, noon\n  b: function b(date, token, localize) {\n    var hours = date.getUTCHours();\n    var dayPeriodEnumValue;\n    if (hours === 12) {\n      dayPeriodEnumValue = dayPeriodEnum.noon;\n    } else if (hours === 0) {\n      dayPeriodEnumValue = dayPeriodEnum.midnight;\n    } else {\n      dayPeriodEnumValue = hours / 12 >= 1 ? 'pm' : 'am';\n    }\n    switch (token) {\n      case 'b':\n      case 'bb':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      case 'bbb':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        }).toLowerCase();\n      case 'bbbbb':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      case 'bbbb':\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // in the morning, in the afternoon, in the evening, at night\n  B: function B(date, token, localize) {\n    var hours = date.getUTCHours();\n    var dayPeriodEnumValue;\n    if (hours >= 17) {\n      dayPeriodEnumValue = dayPeriodEnum.evening;\n    } else if (hours >= 12) {\n      dayPeriodEnumValue = dayPeriodEnum.afternoon;\n    } else if (hours >= 4) {\n      dayPeriodEnumValue = dayPeriodEnum.morning;\n    } else {\n      dayPeriodEnumValue = dayPeriodEnum.night;\n    }\n    switch (token) {\n      case 'B':\n      case 'BB':\n      case 'BBB':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      case 'BBBBB':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      case 'BBBB':\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Hour [1-12]\n  h: function h(date, token, localize) {\n    if (token === 'ho') {\n      var hours = date.getUTCHours() % 12;\n      if (hours === 0) hours = 12;\n      return localize.ordinalNumber(hours, {\n        unit: 'hour'\n      });\n    }\n    return lightFormatters.h(date, token);\n  },\n  // Hour [0-23]\n  H: function H(date, token, localize) {\n    if (token === 'Ho') {\n      return localize.ordinalNumber(date.getUTCHours(), {\n        unit: 'hour'\n      });\n    }\n    return lightFormatters.H(date, token);\n  },\n  // Hour [0-11]\n  K: function K(date, token, localize) {\n    var hours = date.getUTCHours() % 12;\n    if (token === 'Ko') {\n      return localize.ordinalNumber(hours, {\n        unit: 'hour'\n      });\n    }\n    return addLeadingZeros(hours, token.length);\n  },\n  // Hour [1-24]\n  k: function k(date, token, localize) {\n    var hours = date.getUTCHours();\n    if (hours === 0) hours = 24;\n    if (token === 'ko') {\n      return localize.ordinalNumber(hours, {\n        unit: 'hour'\n      });\n    }\n    return addLeadingZeros(hours, token.length);\n  },\n  // Minute\n  m: function m(date, token, localize) {\n    if (token === 'mo') {\n      return localize.ordinalNumber(date.getUTCMinutes(), {\n        unit: 'minute'\n      });\n    }\n    return lightFormatters.m(date, token);\n  },\n  // Second\n  s: function s(date, token, localize) {\n    if (token === 'so') {\n      return localize.ordinalNumber(date.getUTCSeconds(), {\n        unit: 'second'\n      });\n    }\n    return lightFormatters.s(date, token);\n  },\n  // Fraction of second\n  S: function S(date, token) {\n    return lightFormatters.S(date, token);\n  },\n  // Timezone (ISO-8601. If offset is 0, output is always `'Z'`)\n  X: function X(date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n    if (timezoneOffset === 0) {\n      return 'Z';\n    }\n    switch (token) {\n      // Hours and optional minutes\n      case 'X':\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XX`\n      case 'XXXX':\n      case 'XX':\n        // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XXX`\n      case 'XXXXX':\n      case 'XXX': // Hours and minutes with `:` delimiter\n      default:\n        return formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Timezone (ISO-8601. If offset is 0, output is `'+00:00'` or equivalent)\n  x: function x(date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n    switch (token) {\n      // Hours and optional minutes\n      case 'x':\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xx`\n      case 'xxxx':\n      case 'xx':\n        // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xxx`\n      case 'xxxxx':\n      case 'xxx': // Hours and minutes with `:` delimiter\n      default:\n        return formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Timezone (GMT)\n  O: function O(date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n    switch (token) {\n      // Short\n      case 'O':\n      case 'OO':\n      case 'OOO':\n        return 'GMT' + formatTimezoneShort(timezoneOffset, ':');\n      // Long\n      case 'OOOO':\n      default:\n        return 'GMT' + formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Timezone (specific non-location)\n  z: function z(date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n    switch (token) {\n      // Short\n      case 'z':\n      case 'zz':\n      case 'zzz':\n        return 'GMT' + formatTimezoneShort(timezoneOffset, ':');\n      // Long\n      case 'zzzz':\n      default:\n        return 'GMT' + formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Seconds timestamp\n  t: function t(date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timestamp = Math.floor(originalDate.getTime() / 1000);\n    return addLeadingZeros(timestamp, token.length);\n  },\n  // Milliseconds timestamp\n  T: function T(date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timestamp = originalDate.getTime();\n    return addLeadingZeros(timestamp, token.length);\n  }\n};\nfunction formatTimezoneShort(offset, dirtyDelimiter) {\n  var sign = offset > 0 ? '-' : '+';\n  var absOffset = Math.abs(offset);\n  var hours = Math.floor(absOffset / 60);\n  var minutes = absOffset % 60;\n  if (minutes === 0) {\n    return sign + String(hours);\n  }\n  var delimiter = dirtyDelimiter || '';\n  return sign + String(hours) + delimiter + addLeadingZeros(minutes, 2);\n}\nfunction formatTimezoneWithOptionalMinutes(offset, dirtyDelimiter) {\n  if (offset % 60 === 0) {\n    var sign = offset > 0 ? '-' : '+';\n    return sign + addLeadingZeros(Math.abs(offset) / 60, 2);\n  }\n  return formatTimezone(offset, dirtyDelimiter);\n}\nfunction formatTimezone(offset, dirtyDelimiter) {\n  var delimiter = dirtyDelimiter || '';\n  var sign = offset > 0 ? '-' : '+';\n  var absOffset = Math.abs(offset);\n  var hours = addLeadingZeros(Math.floor(absOffset / 60), 2);\n  var minutes = addLeadingZeros(absOffset % 60, 2);\n  return sign + hours + delimiter + minutes;\n}\nexport default formatters;", "var dateLongFormatter = function dateLongFormatter(pattern, formatLong) {\n  switch (pattern) {\n    case 'P':\n      return formatLong.date({\n        width: 'short'\n      });\n    case 'PP':\n      return formatLong.date({\n        width: 'medium'\n      });\n    case 'PPP':\n      return formatLong.date({\n        width: 'long'\n      });\n    case 'PPPP':\n    default:\n      return formatLong.date({\n        width: 'full'\n      });\n  }\n};\nvar timeLongFormatter = function timeLongFormatter(pattern, formatLong) {\n  switch (pattern) {\n    case 'p':\n      return formatLong.time({\n        width: 'short'\n      });\n    case 'pp':\n      return formatLong.time({\n        width: 'medium'\n      });\n    case 'ppp':\n      return formatLong.time({\n        width: 'long'\n      });\n    case 'pppp':\n    default:\n      return formatLong.time({\n        width: 'full'\n      });\n  }\n};\nvar dateTimeLongFormatter = function dateTimeLongFormatter(pattern, formatLong) {\n  var matchResult = pattern.match(/(P+)(p+)?/) || [];\n  var datePattern = matchResult[1];\n  var timePattern = matchResult[2];\n  if (!timePattern) {\n    return dateLongFormatter(pattern, formatLong);\n  }\n  var dateTimeFormat;\n  switch (datePattern) {\n    case 'P':\n      dateTimeFormat = formatLong.dateTime({\n        width: 'short'\n      });\n      break;\n    case 'PP':\n      dateTimeFormat = formatLong.dateTime({\n        width: 'medium'\n      });\n      break;\n    case 'PPP':\n      dateTimeFormat = formatLong.dateTime({\n        width: 'long'\n      });\n      break;\n    case 'PPPP':\n    default:\n      dateTimeFormat = formatLong.dateTime({\n        width: 'full'\n      });\n      break;\n  }\n  return dateTimeFormat.replace('{{date}}', dateLongFormatter(datePattern, formatLong)).replace('{{time}}', timeLongFormatter(timePattern, formatLong));\n};\nvar longFormatters = {\n  p: timeLongFormatter,\n  P: dateTimeLongFormatter\n};\nexport default longFormatters;", "/**\n * Google Chrome as of 67.0.3396.87 introduced timezones with offset that includes seconds.\n * They usually appear for dates that denote time before the timezones were introduced\n * (e.g. for 'Europe/Prague' timezone the offset is GMT+00:57:44 before 1 October 1891\n * and GMT+01:00:00 after that date)\n *\n * Date#getTimezoneOffset returns the offset in minutes and would return 57 for the example above,\n * which would lead to incorrect calculations.\n *\n * This function returns the timezone offset in milliseconds that takes seconds in account.\n */\nexport default function getTimezoneOffsetInMilliseconds(date) {\n  var utcDate = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds(), date.getMilliseconds()));\n  utcDate.setUTCFullYear(date.getFullYear());\n  return date.getTime() - utcDate.getTime();\n}", "var protectedDayOfYearTokens = ['D', 'DD'];\nvar protectedWeekYearTokens = ['YY', 'YYYY'];\nexport function isProtectedDayOfYearToken(token) {\n  return protectedDayOfYearTokens.indexOf(token) !== -1;\n}\nexport function isProtectedWeekYearToken(token) {\n  return protectedWeekYearTokens.indexOf(token) !== -1;\n}\nexport function throwProtectedError(token, format, input) {\n  if (token === 'YYYY') {\n    throw new RangeError(\"Use `yyyy` instead of `YYYY` (in `\".concat(format, \"`) for formatting years to the input `\").concat(input, \"`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\"));\n  } else if (token === 'YY') {\n    throw new RangeError(\"Use `yy` instead of `YY` (in `\".concat(format, \"`) for formatting years to the input `\").concat(input, \"`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\"));\n  } else if (token === 'D') {\n    throw new RangeError(\"Use `d` instead of `D` (in `\".concat(format, \"`) for formatting days of the month to the input `\").concat(input, \"`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\"));\n  } else if (token === 'DD') {\n    throw new RangeError(\"Use `dd` instead of `DD` (in `\".concat(format, \"`) for formatting days of the month to the input `\").concat(input, \"`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\"));\n  }\n}", "import isValid from \"../isValid/index.js\";\nimport subMilliseconds from \"../subMilliseconds/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport formatters from \"../_lib/format/formatters/index.js\";\nimport longFormatters from \"../_lib/format/longFormatters/index.js\";\nimport getTimezoneOffsetInMilliseconds from \"../_lib/getTimezoneOffsetInMilliseconds/index.js\";\nimport { isProtectedDayOfYearToken, isProtectedWeekYearToken, throwProtectedError } from \"../_lib/protectedTokens/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport { getDefaultOptions } from \"../_lib/defaultOptions/index.js\";\nimport defaultLocale from \"../_lib/defaultLocale/index.js\"; // This RegExp consists of three parts separated by `|`:\n// - [yYQqMLwIdDecihHKkms]o matches any available ordinal number token\n//   (one of the certain letters followed by `o`)\n// - (\\w)\\1* matches any sequences of the same letter\n// - '' matches two quote characters in a row\n// - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),\n//   except a single quote symbol, which ends the sequence.\n//   Two quote characters do not end the sequence.\n//   If there is no matching single quote\n//   then the sequence will continue until the end of the string.\n// - . matches any single character unmatched by previous parts of the RegExps\nvar formattingTokensRegExp = /[yYQqMLwIdDecihHKkms]o|(\\w)\\1*|''|'(''|[^'])+('|$)|./g;\n\n// This RegExp catches symbols escaped by quotes, and also\n// sequences of symbols P, p, and the combinations like `PPPPPPPppppp`\nvar longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;\nvar escapedStringRegExp = /^'([^]*?)'?$/;\nvar doubleQuoteRegExp = /''/g;\nvar unescapedLatinCharacterRegExp = /[a-zA-Z]/;\n\n/**\n * @name format\n * @category Common Helpers\n * @summary Format the date.\n *\n * @description\n * Return the formatted date string in the given format. The result may vary by locale.\n *\n * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.\n * > See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * The characters wrapped between two single quotes characters (') are escaped.\n * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.\n * (see the last example)\n *\n * Format of the string is based on Unicode Technical Standard #35:\n * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * with a few additions (see note 7 below the table).\n *\n * Accepted patterns:\n * | Unit                            | Pattern | Result examples                   | Notes |\n * |---------------------------------|---------|-----------------------------------|-------|\n * | Era                             | G..GGG  | AD, BC                            |       |\n * |                                 | GGGG    | Anno Domini, Before Christ        | 2     |\n * |                                 | GGGGG   | A, B                              |       |\n * | Calendar year                   | y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | yo      | 44th, 1st, 0th, 17th              | 5,7   |\n * |                                 | yy      | 44, 01, 00, 17                    | 5     |\n * |                                 | yyy     | 044, 001, 1900, 2017              | 5     |\n * |                                 | yyyy    | 0044, 0001, 1900, 2017            | 5     |\n * |                                 | yyyyy   | ...                               | 3,5   |\n * | Local week-numbering year       | Y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | Yo      | 44th, 1st, 1900th, 2017th         | 5,7   |\n * |                                 | YY      | 44, 01, 00, 17                    | 5,8   |\n * |                                 | YYY     | 044, 001, 1900, 2017              | 5     |\n * |                                 | YYYY    | 0044, 0001, 1900, 2017            | 5,8   |\n * |                                 | YYYYY   | ...                               | 3,5   |\n * | ISO week-numbering year         | R       | -43, 0, 1, 1900, 2017             | 5,7   |\n * |                                 | RR      | -43, 00, 01, 1900, 2017           | 5,7   |\n * |                                 | RRR     | -043, 000, 001, 1900, 2017        | 5,7   |\n * |                                 | RRRR    | -0043, 0000, 0001, 1900, 2017     | 5,7   |\n * |                                 | RRRRR   | ...                               | 3,5,7 |\n * | Extended year                   | u       | -43, 0, 1, 1900, 2017             | 5     |\n * |                                 | uu      | -43, 01, 1900, 2017               | 5     |\n * |                                 | uuu     | -043, 001, 1900, 2017             | 5     |\n * |                                 | uuuu    | -0043, 0001, 1900, 2017           | 5     |\n * |                                 | uuuuu   | ...                               | 3,5   |\n * | Quarter (formatting)            | Q       | 1, 2, 3, 4                        |       |\n * |                                 | Qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | QQ      | 01, 02, 03, 04                    |       |\n * |                                 | QQQ     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | QQQQQ   | 1, 2, 3, 4                        | 4     |\n * | Quarter (stand-alone)           | q       | 1, 2, 3, 4                        |       |\n * |                                 | qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | qq      | 01, 02, 03, 04                    |       |\n * |                                 | qqq     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | qqqqq   | 1, 2, 3, 4                        | 4     |\n * | Month (formatting)              | M       | 1, 2, ..., 12                     |       |\n * |                                 | Mo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | MM      | 01, 02, ..., 12                   |       |\n * |                                 | MMM     | Jan, Feb, ..., Dec                |       |\n * |                                 | MMMM    | January, February, ..., December  | 2     |\n * |                                 | MMMMM   | J, F, ..., D                      |       |\n * | Month (stand-alone)             | L       | 1, 2, ..., 12                     |       |\n * |                                 | Lo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | LL      | 01, 02, ..., 12                   |       |\n * |                                 | LLL     | Jan, Feb, ..., Dec                |       |\n * |                                 | LLLL    | January, February, ..., December  | 2     |\n * |                                 | LLLLL   | J, F, ..., D                      |       |\n * | Local week of year              | w       | 1, 2, ..., 53                     |       |\n * |                                 | wo      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | ww      | 01, 02, ..., 53                   |       |\n * | ISO week of year                | I       | 1, 2, ..., 53                     | 7     |\n * |                                 | Io      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | II      | 01, 02, ..., 53                   | 7     |\n * | Day of month                    | d       | 1, 2, ..., 31                     |       |\n * |                                 | do      | 1st, 2nd, ..., 31st               | 7     |\n * |                                 | dd      | 01, 02, ..., 31                   |       |\n * | Day of year                     | D       | 1, 2, ..., 365, 366               | 9     |\n * |                                 | Do      | 1st, 2nd, ..., 365th, 366th       | 7     |\n * |                                 | DD      | 01, 02, ..., 365, 366             | 9     |\n * |                                 | DDD     | 001, 002, ..., 365, 366           |       |\n * |                                 | DDDD    | ...                               | 3     |\n * | Day of week (formatting)        | E..EEE  | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | EEEEE   | M, T, W, T, F, S, S               |       |\n * |                                 | EEEEEE  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | ISO day of week (formatting)    | i       | 1, 2, 3, ..., 7                   | 7     |\n * |                                 | io      | 1st, 2nd, ..., 7th                | 7     |\n * |                                 | ii      | 01, 02, ..., 07                   | 7     |\n * |                                 | iii     | Mon, Tue, Wed, ..., Sun           | 7     |\n * |                                 | iiii    | Monday, Tuesday, ..., Sunday      | 2,7   |\n * |                                 | iiiii   | M, T, W, T, F, S, S               | 7     |\n * |                                 | iiiiii  | Mo, Tu, We, Th, Fr, Sa, Su        | 7     |\n * | Local day of week (formatting)  | e       | 2, 3, 4, ..., 1                   |       |\n * |                                 | eo      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | ee      | 02, 03, ..., 01                   |       |\n * |                                 | eee     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | eeee    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | eeeee   | M, T, W, T, F, S, S               |       |\n * |                                 | eeeeee  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | Local day of week (stand-alone) | c       | 2, 3, 4, ..., 1                   |       |\n * |                                 | co      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | cc      | 02, 03, ..., 01                   |       |\n * |                                 | ccc     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | cccc    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | ccccc   | M, T, W, T, F, S, S               |       |\n * |                                 | cccccc  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | AM, PM                          | a..aa   | AM, PM                            |       |\n * |                                 | aaa     | am, pm                            |       |\n * |                                 | aaaa    | a.m., p.m.                        | 2     |\n * |                                 | aaaaa   | a, p                              |       |\n * | AM, PM, noon, midnight          | b..bb   | AM, PM, noon, midnight            |       |\n * |                                 | bbb     | am, pm, noon, midnight            |       |\n * |                                 | bbbb    | a.m., p.m., noon, midnight        | 2     |\n * |                                 | bbbbb   | a, p, n, mi                       |       |\n * | Flexible day period             | B..BBB  | at night, in the morning, ...     |       |\n * |                                 | BBBB    | at night, in the morning, ...     | 2     |\n * |                                 | BBBBB   | at night, in the morning, ...     |       |\n * | Hour [1-12]                     | h       | 1, 2, ..., 11, 12                 |       |\n * |                                 | ho      | 1st, 2nd, ..., 11th, 12th         | 7     |\n * |                                 | hh      | 01, 02, ..., 11, 12               |       |\n * | Hour [0-23]                     | H       | 0, 1, 2, ..., 23                  |       |\n * |                                 | Ho      | 0th, 1st, 2nd, ..., 23rd          | 7     |\n * |                                 | HH      | 00, 01, 02, ..., 23               |       |\n * | Hour [0-11]                     | K       | 1, 2, ..., 11, 0                  |       |\n * |                                 | Ko      | 1st, 2nd, ..., 11th, 0th          | 7     |\n * |                                 | KK      | 01, 02, ..., 11, 00               |       |\n * | Hour [1-24]                     | k       | 24, 1, 2, ..., 23                 |       |\n * |                                 | ko      | 24th, 1st, 2nd, ..., 23rd         | 7     |\n * |                                 | kk      | 24, 01, 02, ..., 23               |       |\n * | Minute                          | m       | 0, 1, ..., 59                     |       |\n * |                                 | mo      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | mm      | 00, 01, ..., 59                   |       |\n * | Second                          | s       | 0, 1, ..., 59                     |       |\n * |                                 | so      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | ss      | 00, 01, ..., 59                   |       |\n * | Fraction of second              | S       | 0, 1, ..., 9                      |       |\n * |                                 | SS      | 00, 01, ..., 99                   |       |\n * |                                 | SSS     | 000, 001, ..., 999                |       |\n * |                                 | SSSS    | ...                               | 3     |\n * | Timezone (ISO-8601 w/ Z)        | X       | -08, +0530, Z                     |       |\n * |                                 | XX      | -0800, +0530, Z                   |       |\n * |                                 | XXX     | -08:00, +05:30, Z                 |       |\n * |                                 | XXXX    | -0800, +0530, Z, +123456          | 2     |\n * |                                 | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |\n * | Timezone (ISO-8601 w/o Z)       | x       | -08, +0530, +00                   |       |\n * |                                 | xx      | -0800, +0530, +0000               |       |\n * |                                 | xxx     | -08:00, +05:30, +00:00            | 2     |\n * |                                 | xxxx    | -0800, +0530, +0000, +123456      |       |\n * |                                 | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |\n * | Timezone (GMT)                  | O...OOO | GMT-8, GMT+5:30, GMT+0            |       |\n * |                                 | OOOO    | GMT-08:00, GMT+05:30, GMT+00:00   | 2     |\n * | Timezone (specific non-locat.)  | z...zzz | GMT-8, GMT+5:30, GMT+0            | 6     |\n * |                                 | zzzz    | GMT-08:00, GMT+05:30, GMT+00:00   | 2,6   |\n * | Seconds timestamp               | t       | 512969520                         | 7     |\n * |                                 | tt      | ...                               | 3,7   |\n * | Milliseconds timestamp          | T       | 512969520900                      | 7     |\n * |                                 | TT      | ...                               | 3,7   |\n * | Long localized date             | P       | 04/29/1453                        | 7     |\n * |                                 | PP      | Apr 29, 1453                      | 7     |\n * |                                 | PPP     | April 29th, 1453                  | 7     |\n * |                                 | PPPP    | Friday, April 29th, 1453          | 2,7   |\n * | Long localized time             | p       | 12:00 AM                          | 7     |\n * |                                 | pp      | 12:00:00 AM                       | 7     |\n * |                                 | ppp     | 12:00:00 AM GMT+2                 | 7     |\n * |                                 | pppp    | 12:00:00 AM GMT+02:00             | 2,7   |\n * | Combination of date and time    | Pp      | 04/29/1453, 12:00 AM              | 7     |\n * |                                 | PPpp    | Apr 29, 1453, 12:00:00 AM         | 7     |\n * |                                 | PPPppp  | April 29th, 1453 at ...           | 7     |\n * |                                 | PPPPpppp| Friday, April 29th, 1453 at ...   | 2,7   |\n * Notes:\n * 1. \"Formatting\" units (e.g. formatting quarter) in the default en-US locale\n *    are the same as \"stand-alone\" units, but are different in some languages.\n *    \"Formatting\" units are declined according to the rules of the language\n *    in the context of a date. \"Stand-alone\" units are always nominative singular:\n *\n *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`\n *\n *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`\n *\n * 2. Any sequence of the identical letters is a pattern, unless it is escaped by\n *    the single quote characters (see below).\n *    If the sequence is longer than listed in table (e.g. `EEEEEEEEEEE`)\n *    the output will be the same as default pattern for this unit, usually\n *    the longest one (in case of ISO weekdays, `EEEE`). Default patterns for units\n *    are marked with \"2\" in the last column of the table.\n *\n *    `format(new Date(2017, 10, 6), 'MMM') //=> 'Nov'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMM') //=> 'N'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMMM') //=> 'November'`\n *\n * 3. Some patterns could be unlimited length (such as `yyyyyyyy`).\n *    The output will be padded with zeros to match the length of the pattern.\n *\n *    `format(new Date(2017, 10, 6), 'yyyyyyyy') //=> '00002017'`\n *\n * 4. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.\n *    These tokens represent the shortest form of the quarter.\n *\n * 5. The main difference between `y` and `u` patterns are B.C. years:\n *\n *    | Year | `y` | `u` |\n *    |------|-----|-----|\n *    | AC 1 |   1 |   1 |\n *    | BC 1 |   1 |   0 |\n *    | BC 2 |   2 |  -1 |\n *\n *    Also `yy` always returns the last two digits of a year,\n *    while `uu` pads single digit years to 2 characters and returns other years unchanged:\n *\n *    | Year | `yy` | `uu` |\n *    |------|------|------|\n *    | 1    |   01 |   01 |\n *    | 14   |   14 |   14 |\n *    | 376  |   76 |  376 |\n *    | 1453 |   53 | 1453 |\n *\n *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),\n *    except local week-numbering years are dependent on `options.weekStartsOn`\n *    and `options.firstWeekContainsDate` (compare [getISOWeekYear]{@link https://date-fns.org/docs/getISOWeekYear}\n *    and [getWeekYear]{@link https://date-fns.org/docs/getWeekYear}).\n *\n * 6. Specific non-location timezones are currently unavailable in `date-fns`,\n *    so right now these tokens fall back to GMT timezones.\n *\n * 7. These patterns are not in the Unicode Technical Standard #35:\n *    - `i`: ISO day of week\n *    - `I`: ISO week of year\n *    - `R`: ISO week-numbering year\n *    - `t`: seconds timestamp\n *    - `T`: milliseconds timestamp\n *    - `o`: ordinal number modifier\n *    - `P`: long localized date\n *    - `p`: long localized time\n *\n * 8. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.\n *    You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * 9. `D` and `DD` tokens represent days of the year but they are often confused with days of the month.\n *    You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * @param {Date|Number} date - the original date\n * @param {String} format - the string of tokens\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @param {Number} [options.firstWeekContainsDate=1] - the day of January, which is\n * @param {Boolean} [options.useAdditionalWeekYearTokens=false] - if true, allows usage of the week-numbering year tokens `YY` and `YYYY`;\n *   see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @param {Boolean} [options.useAdditionalDayOfYearTokens=false] - if true, allows usage of the day of year tokens `D` and `DD`;\n *   see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @returns {String} the formatted date string\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `date` must not be Invalid Date\n * @throws {RangeError} `options.locale` must contain `localize` property\n * @throws {RangeError} `options.locale` must contain `formatLong` property\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7\n * @throws {RangeError} use `yyyy` instead of `YYYY` for formatting years using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws {RangeError} use `yy` instead of `YY` for formatting years using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws {RangeError} use `d` instead of `D` for formatting days of the month using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws {RangeError} use `dd` instead of `DD` for formatting days of the month using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws {RangeError} format string contains an unescaped latin alphabet character\n *\n * @example\n * // Represent 11 February 2014 in middle-endian format:\n * const result = format(new Date(2014, 1, 11), 'MM/dd/yyyy')\n * //=> '02/11/2014'\n *\n * @example\n * // Represent 2 July 2014 in Esperanto:\n * import { eoLocale } from 'date-fns/locale/eo'\n * const result = format(new Date(2014, 6, 2), \"do 'de' MMMM yyyy\", {\n *   locale: eoLocale\n * })\n * //=> '2-a de julio 2014'\n *\n * @example\n * // Escape string by single quote characters:\n * const result = format(new Date(2014, 6, 2, 15), \"h 'o''clock'\")\n * //=> \"3 o'clock\"\n */\n\nexport default function format(dirtyDate, dirtyFormatStr, options) {\n  var _ref, _options$locale, _ref2, _ref3, _ref4, _options$firstWeekCon, _options$locale2, _options$locale2$opti, _defaultOptions$local, _defaultOptions$local2, _ref5, _ref6, _ref7, _options$weekStartsOn, _options$locale3, _options$locale3$opti, _defaultOptions$local3, _defaultOptions$local4;\n  requiredArgs(2, arguments);\n  var formatStr = String(dirtyFormatStr);\n  var defaultOptions = getDefaultOptions();\n  var locale = (_ref = (_options$locale = options === null || options === void 0 ? void 0 : options.locale) !== null && _options$locale !== void 0 ? _options$locale : defaultOptions.locale) !== null && _ref !== void 0 ? _ref : defaultLocale;\n  var firstWeekContainsDate = toInteger((_ref2 = (_ref3 = (_ref4 = (_options$firstWeekCon = options === null || options === void 0 ? void 0 : options.firstWeekContainsDate) !== null && _options$firstWeekCon !== void 0 ? _options$firstWeekCon : options === null || options === void 0 ? void 0 : (_options$locale2 = options.locale) === null || _options$locale2 === void 0 ? void 0 : (_options$locale2$opti = _options$locale2.options) === null || _options$locale2$opti === void 0 ? void 0 : _options$locale2$opti.firstWeekContainsDate) !== null && _ref4 !== void 0 ? _ref4 : defaultOptions.firstWeekContainsDate) !== null && _ref3 !== void 0 ? _ref3 : (_defaultOptions$local = defaultOptions.locale) === null || _defaultOptions$local === void 0 ? void 0 : (_defaultOptions$local2 = _defaultOptions$local.options) === null || _defaultOptions$local2 === void 0 ? void 0 : _defaultOptions$local2.firstWeekContainsDate) !== null && _ref2 !== void 0 ? _ref2 : 1);\n\n  // Test if weekStartsOn is between 1 and 7 _and_ is not NaN\n  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {\n    throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');\n  }\n  var weekStartsOn = toInteger((_ref5 = (_ref6 = (_ref7 = (_options$weekStartsOn = options === null || options === void 0 ? void 0 : options.weekStartsOn) !== null && _options$weekStartsOn !== void 0 ? _options$weekStartsOn : options === null || options === void 0 ? void 0 : (_options$locale3 = options.locale) === null || _options$locale3 === void 0 ? void 0 : (_options$locale3$opti = _options$locale3.options) === null || _options$locale3$opti === void 0 ? void 0 : _options$locale3$opti.weekStartsOn) !== null && _ref7 !== void 0 ? _ref7 : defaultOptions.weekStartsOn) !== null && _ref6 !== void 0 ? _ref6 : (_defaultOptions$local3 = defaultOptions.locale) === null || _defaultOptions$local3 === void 0 ? void 0 : (_defaultOptions$local4 = _defaultOptions$local3.options) === null || _defaultOptions$local4 === void 0 ? void 0 : _defaultOptions$local4.weekStartsOn) !== null && _ref5 !== void 0 ? _ref5 : 0);\n\n  // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n  if (!locale.localize) {\n    throw new RangeError('locale must contain localize property');\n  }\n  if (!locale.formatLong) {\n    throw new RangeError('locale must contain formatLong property');\n  }\n  var originalDate = toDate(dirtyDate);\n  if (!isValid(originalDate)) {\n    throw new RangeError('Invalid time value');\n  }\n\n  // Convert the date in system timezone to the same date in UTC+00:00 timezone.\n  // This ensures that when UTC functions will be implemented, locales will be compatible with them.\n  // See an issue about UTC functions: https://github.com/date-fns/date-fns/issues/376\n  var timezoneOffset = getTimezoneOffsetInMilliseconds(originalDate);\n  var utcDate = subMilliseconds(originalDate, timezoneOffset);\n  var formatterOptions = {\n    firstWeekContainsDate: firstWeekContainsDate,\n    weekStartsOn: weekStartsOn,\n    locale: locale,\n    _originalDate: originalDate\n  };\n  var result = formatStr.match(longFormattingTokensRegExp).map(function (substring) {\n    var firstCharacter = substring[0];\n    if (firstCharacter === 'p' || firstCharacter === 'P') {\n      var longFormatter = longFormatters[firstCharacter];\n      return longFormatter(substring, locale.formatLong);\n    }\n    return substring;\n  }).join('').match(formattingTokensRegExp).map(function (substring) {\n    // Replace two single quote characters with one single quote character\n    if (substring === \"''\") {\n      return \"'\";\n    }\n    var firstCharacter = substring[0];\n    if (firstCharacter === \"'\") {\n      return cleanEscapedString(substring);\n    }\n    var formatter = formatters[firstCharacter];\n    if (formatter) {\n      if (!(options !== null && options !== void 0 && options.useAdditionalWeekYearTokens) && isProtectedWeekYearToken(substring)) {\n        throwProtectedError(substring, dirtyFormatStr, String(dirtyDate));\n      }\n      if (!(options !== null && options !== void 0 && options.useAdditionalDayOfYearTokens) && isProtectedDayOfYearToken(substring)) {\n        throwProtectedError(substring, dirtyFormatStr, String(dirtyDate));\n      }\n      return formatter(utcDate, substring, locale.localize, formatterOptions);\n    }\n    if (firstCharacter.match(unescapedLatinCharacterRegExp)) {\n      throw new RangeError('Format string contains an unescaped latin alphabet character `' + firstCharacter + '`');\n    }\n    return substring;\n  }).join('');\n  return result;\n}\nfunction cleanEscapedString(input) {\n  var matched = input.match(escapedStringRegExp);\n  if (!matched) {\n    return input;\n  }\n  return matched[1].replace(doubleQuoteRegExp, \"'\");\n}", "import React, { ReactElement } from 'react';\n\nimport './index.scss';\n\nimport Icon, { IconTypes } from '../Icon';\n\nexport interface LoaderProps {\n  className?: string | Array<string>;\n  width?: string | number;\n  height?: string | number;\n  children?: ReactElement;\n}\n\nexport default function Loader({\n  className = '',\n  width = '26px',\n  height = '26px',\n  children,\n}: LoaderProps): ReactElement {\n  return (\n    <div\n      className={[\n        ...(Array.isArray(className) ? className : [className]),\n        'sendbird-loader',\n      ].join(' ')}\n      style={{\n        width: typeof width === 'string' ? width : `${width}px`,\n        height: typeof height === 'string' ? height : `${height}px`,\n      }}\n    >\n      {\n        children\n        || (\n          <Icon\n            type={IconTypes.SPINNER}\n            width=\"26px\"\n            height=\"26px\"\n          />\n        )\n      }\n    </div>\n  );\n}\n", "import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name startOfDay\n * @category Day Helpers\n * @summary Return the start of a day for the given date.\n *\n * @description\n * Return the start of a day for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the start of a day\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The start of a day for 2 September 2014 11:55:00:\n * const result = startOfDay(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 02 2014 00:00:00\n */\nexport default function startOfDay(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}", "import startOfDay from \"../startOfDay/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isSameDay\n * @category Day Helpers\n * @summary Are the given dates in the same day (and year and month)?\n *\n * @description\n * Are the given dates in the same day (and year and month)?\n *\n * @param {Date|Number} dateLeft - the first date to check\n * @param {Date|Number} dateRight - the second date to check\n * @returns {Boolean} the dates are in the same day (and year and month)\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Are 4 September 06:00:00 and 4 September 18:00:00 in the same day?\n * const result = isSameDay(new Date(2014, 8, 4, 6, 0), new Date(2014, 8, 4, 18, 0))\n * //=> true\n *\n * @example\n * // Are 4 September and 4 October in the same day?\n * const result = isSameDay(new Date(2014, 8, 4), new Date(2014, 9, 4))\n * //=> false\n *\n * @example\n * // Are 4 September, 2014 and 4 September, 2015 in the same day?\n * const result = isSameDay(new Date(2014, 8, 4), new Date(2015, 8, 4))\n * //=> false\n */\nexport default function isSameDay(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeftStartOfDay = startOfDay(dirtyDateLeft);\n  var dateRightStartOfDay = startOfDay(dirtyDateRight);\n  return dateLeftStartOfDay.getTime() === dateRightStartOfDay.getTime();\n}", "import isSameDay from \"../isSameDay/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isToday\n * @category Day Helpers\n * @summary Is the given date today?\n * @pure false\n *\n * @description\n * Is the given date today?\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is today\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // If today is 6 October 2014, is 6 October 14:00:00 today?\n * const result = isToday(new Date(2014, 9, 6, 14, 0))\n * //=> true\n */\nexport default function isToday(dirtyDate) {\n  requiredArgs(1, arguments);\n  return isSameDay(dirtyDate, Date.now());\n}", "import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isSameYear\n * @category Year Helpers\n * @summary Are the given dates in the same year?\n *\n * @description\n * Are the given dates in the same year?\n *\n * @param {Date|Number} dateLeft - the first date to check\n * @param {Date|Number} dateRight - the second date to check\n * @returns {Boolean} the dates are in the same year\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Are 2 September 2014 and 25 September 2014 in the same year?\n * const result = isSameYear(new Date(2014, 8, 2), new Date(2014, 8, 25))\n * //=> true\n */\nexport default function isSameYear(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  return dateLeft.getFullYear() === dateRight.getFullYear();\n}", "import isSameYear from \"../isSameYear/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isThisYear\n * @category Year Helpers\n * @summary Is the given date in the same year as the current date?\n * @pure false\n *\n * @description\n * Is the given date in the same year as the current date?\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is in this year\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // If today is 25 September 2014, is 2 July 2014 in this year?\n * const result = isThisYear(new Date(2014, 6, 2))\n * //=> true\n */\nexport default function isThisYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  return isSameYear(dirtyDate, Date.now());\n}", "import toInteger from \"../_lib/toInteger/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name addDays\n * @category Day Helpers\n * @summary Add the specified number of days to the given date.\n *\n * @description\n * Add the specified number of days to the given date.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of days to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} - the new date with the days added\n * @throws {TypeError} - 2 arguments required\n *\n * @example\n * // Add 10 days to 1 September 2014:\n * const result = addDays(new Date(2014, 8, 1), 10)\n * //=> Thu Sep 11 2014 00:00:00\n */\nexport default function addDays(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var amount = toInteger(dirtyAmount);\n  if (isNaN(amount)) {\n    return new Date(NaN);\n  }\n  if (!amount) {\n    // If 0 days, no-op to avoid changing times in the hour before end of DST\n    return date;\n  }\n  date.setDate(date.getDate() + amount);\n  return date;\n}", "import addDays from \"../addDays/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\n/**\n * @name subDays\n * @category Day Helpers\n * @summary Subtract the specified number of days from the given date.\n *\n * @description\n * Subtract the specified number of days from the given date.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of days to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the days subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 10 days from 1 September 2014:\n * const result = subDays(new Date(2014, 8, 1), 10)\n * //=> Fri Aug 22 2014 00:00:00\n */\nexport default function subDays(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addDays(dirtyDate, -amount);\n}", "import isSameDay from \"../isSameDay/index.js\";\nimport subDays from \"../subDays/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isYesterday\n * @category Day Helpers\n * @summary Is the given date yesterday?\n * @pure false\n *\n * @description\n * Is the given date yesterday?\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is yesterday\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // If today is 6 October 2014, is 5 October 14:00:00 yesterday?\n * const result = isYesterday(new Date(2014, 9, 5, 14, 0))\n * //=> true\n */\nexport default function isYesterday(dirtyDate) {\n  requiredArgs(1, arguments);\n  return isSameDay(dirtyDate, subDays(Date.now(), 1));\n}", "import type { GroupChannel } from '@sendbird/chat/groupChannel';\nimport isToday from 'date-fns/isToday';\nimport format from 'date-fns/format';\nimport isThisYear from 'date-fns/isThisYear';\nimport isYesterday from 'date-fns/isYesterday';\nimport { isAudio, isGif, isImage, isVideo, isVoiceMessageMimeType } from '../../../../utils';\nimport { LabelStringSet } from '../../../../ui/Label';\n\nexport const getChannelTitle = (channel?: GroupChannel, currentUserId?: string, stringSet = LabelStringSet) => {\n  if (!channel?.name && !channel?.members) {\n    return stringSet.NO_TITLE;\n  }\n  if (channel?.name && channel.name !== 'Group Channel') {\n    return channel.name;\n  }\n  if (channel?.members?.length === 1) {\n    return stringSet.NO_MEMBERS;\n  }\n  return (channel?.members || [])\n    .filter(({ userId }) => userId !== currentUserId)\n    .map(({ nickname }) => nickname || stringSet.NO_NAME)\n    .join(', ');\n};\n\nexport const getLastMessageCreatedAt = ({ channel, locale, stringSet = LabelStringSet }) => {\n  const createdAt = channel?.lastMessage?.createdAt;\n  const optionalParam = locale ? { locale } : null;\n  if (!createdAt) {\n    return '';\n  }\n  if (isToday(createdAt)) {\n    return format(createdAt, 'p', optionalParam);\n  }\n  if (isYesterday(createdAt)) {\n    return stringSet.MESSAGE_STATUS__YESTERDAY || 'Yesterday';\n  }\n  if (isThisYear(createdAt)) {\n    return format(createdAt, 'MMM d', optionalParam);\n  }\n  return format(createdAt, 'yyyy/M/d', optionalParam);\n};\n\nexport const getTotalMembers = (channel?: GroupChannel) => (channel?.memberCount ? channel.memberCount : 0);\n\nconst getChannelPreviewFileDisplayString = (mimeType: string, stringSet = LabelStringSet) => {\n  if (isGif(mimeType)) {\n    return stringSet?.CHANNEL_PREVIEW_LAST_MESSAGE_FILE_TYPE_GIF ?? '';\n  }\n  if (isImage(mimeType)) {\n    return stringSet?.CHANNEL_PREVIEW_LAST_MESSAGE_FILE_TYPE_PHOTO ?? '';\n  }\n  if (isVideo(mimeType)) {\n    return stringSet?.CHANNEL_PREVIEW_LAST_MESSAGE_FILE_TYPE_VIDEO ?? '';\n  }\n  if (isAudio(mimeType)) {\n    return stringSet?.CHANNEL_PREVIEW_LAST_MESSAGE_FILE_TYPE_AUDIO ?? '';\n  }\n  if (isVoiceMessageMimeType(mimeType)) {\n    return stringSet?.CHANNEL_PREVIEW_LAST_MESSAGE_FILE_TYPE_VOICE_MESSAGE ?? '';\n  }\n  return stringSet?.CHANNEL_PREVIEW_LAST_MESSAGE_FILE_TYPE_GENERAL ?? '';\n};\n\nconst getPrettyLastMessage = (message = null, stringSet = LabelStringSet) => {\n  if (!message) return '';\n  if (message.isFileMessage()) {\n    return getChannelPreviewFileDisplayString(message.type, stringSet);\n  }\n  if (message.isMultipleFilesMessage()) {\n    const mimeType = message.fileInfoList?.[0]?.mimeType;\n    if (isImage(mimeType) || isGif(mimeType)) {\n      return stringSet?.CHANNEL_PREVIEW_LAST_MESSAGE_FILE_TYPE_PHOTO ?? '';\n    }\n    return getChannelPreviewFileDisplayString(mimeType, stringSet);\n  }\n  return message.message ?? '';\n};\n\nexport const getLastMessage = (channel?: GroupChannel, stringSet = LabelStringSet) => channel?.lastMessage ? getPrettyLastMessage(channel?.lastMessage, stringSet) : '';\n\nexport const getChannelUnreadMessageCount = (channel?: GroupChannel) => channel?.unreadMessageCount ? channel.unreadMessageCount : 0;\n", "import './index.scss';\nimport React from 'react';\nimport format from 'date-fns/format';\nimport { GroupChannel } from '@sendbird/chat/groupChannel';\nimport Icon, { IconTypes, IconColors } from '../Icon';\nimport Label, { LabelColors, LabelTypography } from '../Label';\nimport Loader from '../Loader';\nimport { CoreMessageType, isSentStatus } from '../../utils';\nimport {\n  getOutgoingMessageState,\n  OutgoingMessageStates,\n} from '../../utils/exports/getOutgoingMessageState';\nimport { getLastMessageCreatedAt } from '../../modules/ChannelList/components/ChannelPreview/utils';\nimport { useLocalization } from '../../lib/LocalizationContext';\nimport { Nullable } from '../../types';\n\nexport const MessageStatusTypes = OutgoingMessageStates;\n\ninterface MessageStatusProps {\n  className?: string;\n  message?: CoreMessageType | null;\n  channel: Nullable<GroupChannel>;\n  isDateSeparatorConsidered?: boolean;\n}\n\nexport default function MessageStatus({\n  className,\n  message,\n  channel,\n  isDateSeparatorConsidered = true,\n}: MessageStatusProps): React.ReactElement {\n  const { stringSet, dateLocale } = useLocalization();\n  const status = getOutgoingMessageState(channel, message);\n  const hideMessageStatusIcon = channel?.isGroupChannel?.() && (\n    (channel.isSuper || channel.isPublic || channel.isBroadcast)\n    && !(status === OutgoingMessageStates.PENDING || status === OutgoingMessageStates.FAILED)\n  );\n  const iconType = {\n    [OutgoingMessageStates.SENT]: IconTypes.DONE,\n    [OutgoingMessageStates.DELIVERED]: IconTypes.DONE_ALL,\n    [OutgoingMessageStates.READ]: IconTypes.DONE_ALL,\n    [OutgoingMessageStates.FAILED]: IconTypes.ERROR,\n  };\n  const iconColor = {\n    [OutgoingMessageStates.SENT]: IconColors.SENT,\n    [OutgoingMessageStates.DELIVERED]: IconColors.SENT,\n    [OutgoingMessageStates.READ]: IconColors.READ,\n    [OutgoingMessageStates.FAILED]: IconColors.ERROR,\n  };\n\n  return (\n    <div\n      className={[\n        ...(Array.isArray(className) ? className : [className]),\n        'sendbird-message-status',\n      ].join(' ')}\n    >\n      {(status === OutgoingMessageStates.PENDING) ? (\n        <Loader\n          className=\"sendbird-message-status__icon\"\n          width=\"16px\"\n          height=\"16px\"\n        >\n          <Icon\n            type={IconTypes.SPINNER}\n            fillColor={IconColors.PRIMARY}\n            width=\"16px\"\n            height=\"16px\"\n          />\n        </Loader>\n      ) : (\n        <Icon\n          className={`sendbird-message-status__icon ${hideMessageStatusIcon ? 'hide-icon' : ''} ${status === OutgoingMessageStates.FAILED ? '' : 'sendbird-message-status--sent'\n          }`}\n          type={iconType[status] || IconTypes.ERROR}\n          fillColor={iconColor[status]}\n          width=\"16px\"\n          height=\"16px\"\n        />\n      )}\n      {isSentStatus(status) && (\n        <Label\n          className=\"sendbird-message-status__text\"\n          type={LabelTypography.CAPTION_3}\n          color={LabelColors.ONBACKGROUND_2}\n        >\n          {\n            isDateSeparatorConsidered\n              ? format(message?.createdAt || 0, 'p', { locale: dateLocale })\n              : getLastMessageCreatedAt({ channel, locale: dateLocale, stringSet })\n          }\n        </Label>\n      )}\n    </div>\n  );\n}\n", "export const MENTION_USER_LABEL_CLASSNAME = 'sendbird-mention-user-label';\n", "import './color.scss';\n\nexport enum Colors {\n  ONBACKGROUND_1 = 'ONBACKGROUND_1',\n  ONBACKGROUND_2 = 'ONBACKGROUND_2',\n  ONBACKGROUND_3 = 'ONBACKGROUND_3',\n  ONBACKGROUND_4 = 'ONBACKGROUND_4',\n  ONCONTENT_1 = 'ONCONTENT_1',\n  ONCONTENT_2 = 'ONCONTENT_2',\n  PRIMARY = 'PRIMARY',\n  ERROR = 'ERROR',\n}\n\nexport const changeColorToClassName = (color: Colors): string => {\n  switch (color) {\n    case Colors.ONBACKGROUND_1: return 'sendbird-color--onbackground-1';\n    case Colors.ONBACKGROUND_2: return 'sendbird-color--onbackground-2';\n    case Colors.ONBACKGROUND_3: return 'sendbird-color--onbackground-3';\n    case Colors.ONBACKGROUND_4: return 'sendbird-color--onbackground-4';\n    case Colors.ONCONTENT_1: return 'sendbird-color--oncontent-1';\n    case Colors.PRIMARY: return 'sendbird-color--primary';\n    case Colors.ERROR: return 'sendbird-color--error';\n    default: return null;\n  }\n};\n", "import React, { MouseEvent, KeyboardEvent, ReactElement } from 'react';\n\nimport './index.scss';\n\nimport {\n  Colors,\n  changeColorToClassName,\n} from '../../utils/color';\n\nexport interface TextButtonProps {\n  className?: string | Array<string>;\n  color?: Colors;\n  disabled?: boolean;\n  disableUnderline?: boolean;\n  onClick?: (e: (MouseEvent<HTMLDivElement> | KeyboardEvent<HTMLDivElement>)) => void;\n  children: ReactElement;\n}\n\nconst TextButton = ({\n  className = '',\n  color = Colors.ONBACKGROUND_1,\n  disabled = false,\n  disableUnderline = false,\n  onClick = () => { /* noop */ },\n  children,\n}: TextButtonProps): ReactElement => {\n  return (\n    <div\n      className={[\n        ...(Array.isArray(className) ? className : [className]),\n        changeColorToClassName(color),\n        disableUnderline ? 'sendbird-textbutton--not-underline' : 'sendbird-textbutton',\n        disabled ? 'sendbird-textbutton--disabled' : '',\n      ].join(' ')}\n      role=\"button\"\n      tabIndex={0}\n      onClick={(e) => onClick(e)}\n      onKeyPress={(e) => onClick(e)}\n    >\n      {children}\n    </div>\n  );\n};\n\nexport default TextButton;\n", "export const PREV_RESULT_SIZE = 30;\nexport const NEXT_RESULT_SIZE = 15;\n\nexport const MAX_USER_MENTION_COUNT = 10;\nexport const MAX_USER_SUGGESTION_COUNT = 15;\nexport const USER_MENTION_TEMP_CHAR = '@';\n\nexport enum ThreadReplySelectType {\n  PARENT = 'PARENT',\n  THREAD = 'THREAD',\n}\n", "import React from 'react';\nimport { EmojiContainer } from '@sendbird/chat';\nimport { GroupChannel, Member } from '@sendbird/chat/groupChannel';\nimport format from 'date-fns/format';\n\nimport { CoreMessageType, isReadMessage, SendableMessageType } from '../../../utils';\nimport { BaseMessage, SendingStatus } from '@sendbird/chat/message';\n\nexport const scrollToRenderedMessage = (\n  scrollRef: React.MutableRefObject<HTMLElement>,\n  initialTimeStamp: number,\n  setIsScrolled?: (val: boolean) => void,\n) => {\n  try {\n    const container = scrollRef.current;\n    // scroll into the message with initialTimeStamp\n    const element = container.querySelectorAll(`[data-sb-created-at=\"${initialTimeStamp}\"]`)?.[0];\n    if (element instanceof HTMLElement) {\n      // Calculate the offset of the element from the top of the container\n      const containerHeight = container.offsetHeight;\n      const elementHeight = element.offsetHeight;\n      const elementOffset = (containerHeight - elementHeight) / 2;\n      // Set the scroll position of the container to bring the element to the middle\n      container.scrollTop = element.offsetTop - elementOffset;\n    }\n  } catch {\n    // do nothing\n  } finally {\n    setIsScrolled?.(true);\n  }\n};\n\n/* eslint-disable default-param-last */\nexport const scrollIntoLast = (\n  initialTry = 0,\n  scrollRef: React.MutableRefObject<HTMLElement>,\n  setIsScrolled?: (val: boolean) => void,\n) => {\n  const MAX_TRIES = 10;\n  const currentTry = initialTry;\n  if (currentTry > MAX_TRIES) {\n    setIsScrolled?.(true);\n    return;\n  }\n  try {\n    const scrollDOM = scrollRef?.current || document.querySelector('.sendbird-conversation__messages-padding');\n    scrollDOM.scrollTop = scrollDOM.scrollHeight;\n    setIsScrolled?.(true);\n  } catch (error) {\n    setTimeout(() => {\n      scrollIntoLast(currentTry + 1, scrollRef, setIsScrolled);\n    }, 500 * currentTry);\n  }\n};\n\nexport const isOperator = (groupChannel?: GroupChannel) => {\n  const myRole = groupChannel?.myRole;\n  return myRole === 'operator';\n};\n\nexport const isDisabledBecauseFrozen = (groupChannel?: GroupChannel) => {\n  const isFrozen = groupChannel?.isFrozen;\n  return isFrozen && !isOperator(groupChannel);\n};\n\nexport const isDisabledBecauseMuted = (groupChannel?: GroupChannel) => {\n  const myMutedState = groupChannel?.myMutedState;\n  return myMutedState === 'muted';\n};\n\nexport const getAllEmojisMapFromEmojiContainer = (emojiContainer: EmojiContainer) => {\n  const { emojiCategories = [] } = emojiContainer;\n  const allEmojisMap = new Map();\n\n  for (let categoryIndex = 0; categoryIndex < emojiCategories.length; categoryIndex += 1) {\n    const { emojis } = emojiCategories[categoryIndex];\n    for (let emojiIndex = 0; emojiIndex < emojis.length; emojiIndex += 1) {\n      const { key, url } = emojis[emojiIndex];\n      allEmojisMap.set(key, url);\n    }\n  }\n  return allEmojisMap;\n};\n\nexport const getNicknamesMapFromMembers = (members: Member[] = []) => {\n  const nicknamesMap = new Map<string, string>();\n  for (let memberIndex = 0; memberIndex < members.length; memberIndex += 1) {\n    const { userId, nickname } = members[memberIndex];\n    nicknamesMap.set(userId, nickname);\n  }\n  return nicknamesMap;\n};\n\nconst getUniqueListBy = <T>(arr: T[], key: keyof T): T[] => {\n  const entries = arr.map((item) => [item[key], item] as [T[keyof T], T]);\n  return Array.from(new Map(entries).values());\n};\nconst getUniqueListByMessageId = (arr: BaseMessage[]) => {\n  return getUniqueListBy(arr, 'messageId');\n};\nconst sortByCreatedAt = (messages: BaseMessage[]) => {\n  return messages.sort((a, b) => a.createdAt - b.createdAt);\n};\n\nexport const mergeAndSortMessages = (oldMessages: BaseMessage[], newMessages: BaseMessage[]) => {\n  const lastOldMessage = oldMessages[oldMessages.length - 1];\n  const firstNewMessage = newMessages[0];\n  // If the last message of oldMessages is older than the first message of newMessages,\n  // then we can safely append newMessages to oldMessages.\n  if (lastOldMessage?.createdAt < firstNewMessage?.createdAt) {\n    return [...oldMessages, ...newMessages];\n  }\n\n  // todo: optimize this\n  // If the last message of oldMessages is newer than the first message of newMessages,\n  // then we need to merge the two arrays and sort them by createdAt.\n  const mergedMessages = [...oldMessages, ...newMessages];\n  const unique = getUniqueListByMessageId(mergedMessages);\n  return sortByCreatedAt(unique);\n};\n\nexport const getMessageCreatedAt = (message: BaseMessage) => format(message.createdAt, 'p');\n\nexport const isSameGroup = (\n  message: SendableMessageType | BaseMessage,\n  comparingMessage: SendableMessageType | BaseMessage,\n  currentChannel: GroupChannel,\n) => {\n  if (\n    !(\n      message\n      && comparingMessage\n      && message.messageType\n      && message.messageType !== 'admin'\n      && comparingMessage.messageType\n      && comparingMessage?.messageType !== 'admin'\n      && 'sender' in message\n      && 'sender' in comparingMessage\n      && message.createdAt\n      && comparingMessage.createdAt\n      && message.sender.userId\n      && comparingMessage.sender.userId\n    )\n  ) {\n    return false;\n  }\n  return (\n    message?.sendingStatus === comparingMessage?.sendingStatus\n    && message?.sender?.userId === comparingMessage?.sender?.userId\n    && getMessageCreatedAt(message) === getMessageCreatedAt(comparingMessage)\n    && isReadMessage(currentChannel, message) === isReadMessage(currentChannel, comparingMessage)\n  );\n};\n\nexport const passUnsuccessfullMessages = (\n  allMessages: (CoreMessageType | SendableMessageType)[],\n  newMessage: CoreMessageType | SendableMessageType,\n) => {\n  if (\n    'sendingStatus' in newMessage\n    && (newMessage.sendingStatus === SendingStatus.SUCCEEDED || newMessage.sendingStatus === SendingStatus.PENDING)\n  ) {\n    const lastIndexOfSucceededMessage = allMessages\n      .map((message) => {\n        if ('sendingStatus' in message && message.sendingStatus) return message.sendingStatus;\n        return message.isAdminMessage() ? SendingStatus.SUCCEEDED : null;\n      })\n      .lastIndexOf(SendingStatus.SUCCEEDED);\n\n    if (lastIndexOfSucceededMessage + 1 < allMessages.length) {\n      const messages = [...allMessages];\n      messages.splice(lastIndexOfSucceededMessage + 1, 0, newMessage);\n      return messages;\n    }\n  }\n  return [...allMessages, newMessage];\n};\n\nexport const pxToNumber = (px: string | number) => {\n  if (typeof px === 'number') {\n    return px;\n  }\n  if (typeof px === 'string') {\n    const parsed = Number.parseFloat(px);\n    if (!Number.isNaN(parsed)) {\n      return parsed;\n    }\n  }\n  return null;\n};\n\nexport const isAboutSame = (a: number, b: number, px: number) => {\n  return Math.abs(a - b) <= px;\n};\n", "import { CreateAction } from '../../../../utils/typeHelpers/reducers/createAction';\nimport { GroupChannel } from '@sendbird/chat/groupChannel';\nimport { CoreMessageType, SendableMessageType } from '../../../../utils';\nimport { EmojiContainer } from '@sendbird/chat';\nimport { ReactionEvent, UploadableFileInfo } from '@sendbird/chat/message';\nimport { MessageListParams } from '../ChannelProvider';\n\nexport const RESET_MESSAGES = 'RESET_MESSAGES';\nexport const FETCH_INITIAL_MESSAGES_START = 'FETCH_INITIAL_MESSAGES_START';\nexport const FETCH_INITIAL_MESSAGES_SUCCESS = 'FETCH_INITIAL_MESSAGES_SUCCESS';\nexport const FETCH_INITIAL_MESSAGES_FAILURE = 'FETCH_INITIAL_MESSAGES_FAILURE';\nexport const FETCH_PREV_MESSAGES_SUCCESS = 'FETCH_PREV_MESSAGES_SUCCESS';\nexport const FETCH_PREV_MESSAGES_FAILURE = 'FETCH_PREV_MESSAGES_FAILURE';\nexport const FETCH_NEXT_MESSAGES_SUCCESS = 'FETCH_NEXT_MESSAGES_SUCCESS';\nexport const FETCH_NEXT_MESSAGES_FAILURE = 'FETCH_NEXT_MESSAGES_FAILURE';\nexport const SEND_MESSAGE_START = 'SEND_MESSAGE_START';\nexport const SEND_MESSAGE_SUCCESS = 'SEND_MESSAGE_SUCCESS';\nexport const SEND_MESSAGE_FAILURE = 'SEND_MESSAGE_FAILURE';\nexport const RESEND_MESSAGE_START = 'RESEND_MESSAGE_START';\nexport const ON_MESSAGE_RECEIVED = 'ON_MESSAGE_RECEIVED';\nexport const ON_MESSAGE_UPDATED = 'ON_MESSAGE_UPDATED';\nexport const ON_MESSAGE_THREAD_INFO_UPDATED = 'ON_MESSAGE_THREAD_INFO_UPDATED';\nexport const ON_MESSAGE_DELETED = 'ON_MESSAGE_DELETED';\nexport const ON_MESSAGE_DELETED_BY_REQ_ID = 'ON_MESSAGE_DELETED_BY_REQ_ID';\nexport const SET_CURRENT_CHANNEL = 'SET_CURRENT_CHANNEL';\nexport const SET_CHANNEL_INVALID = 'SET_CHANNEL_INVALID';\nexport const MARK_AS_READ = 'MARK_AS_READ';\nexport const ON_REACTION_UPDATED = 'ON_REACTION_UPDATED';\nexport const SET_EMOJI_CONTAINER = 'SET_EMOJI_CONTAINER';\nexport const MESSAGE_LIST_PARAMS_CHANGED = 'MESSAGE_LIST_PARAMS_CHANGED';\nexport const ON_FILE_INFO_UPLOADED = 'ON_FILE_INFO_UPLOADED';\n\ntype CHANNEL_PAYLOAD_TYPES = {\n  [RESET_MESSAGES]: null;\n  [FETCH_INITIAL_MESSAGES_START]: null;\n  [FETCH_INITIAL_MESSAGES_SUCCESS]: {\n    currentGroupChannel: null | GroupChannel;\n    messages: CoreMessageType[];\n  };\n  [FETCH_PREV_MESSAGES_SUCCESS]: {\n    currentGroupChannel: null | GroupChannel;\n    messages: CoreMessageType[];\n  };\n  [FETCH_NEXT_MESSAGES_SUCCESS]: {\n    currentGroupChannel: null | GroupChannel;\n    messages: CoreMessageType[];\n  };\n  [FETCH_INITIAL_MESSAGES_FAILURE]: {\n    currentGroupChannel: null | GroupChannel;\n  };\n  [FETCH_PREV_MESSAGES_FAILURE]: {\n    currentGroupChannel: null | GroupChannel;\n  };\n  [FETCH_NEXT_MESSAGES_FAILURE]: {\n    currentGroupChannel: null | GroupChannel;\n  };\n  [SEND_MESSAGE_START]: SendableMessageType;\n  [SEND_MESSAGE_SUCCESS]: SendableMessageType;\n  [SEND_MESSAGE_FAILURE]: SendableMessageType;\n  [SET_CURRENT_CHANNEL]: null | GroupChannel;\n  [SET_CHANNEL_INVALID]: null;\n  [ON_MESSAGE_RECEIVED]: {\n    channel: GroupChannel;\n    message: SendableMessageType;\n  };\n  [ON_MESSAGE_UPDATED]: {\n    channel: GroupChannel;\n    message: SendableMessageType;\n  };\n  [ON_MESSAGE_THREAD_INFO_UPDATED]: {\n    channel: GroupChannel;\n    event: any;\n  };\n  [RESEND_MESSAGE_START]: {\n    reqId: number;\n  };\n  [MARK_AS_READ]: {\n    channel: null | GroupChannel;\n  };\n  [ON_MESSAGE_DELETED]: MessageId;\n  [ON_MESSAGE_DELETED_BY_REQ_ID]: RequestId;\n  [SET_EMOJI_CONTAINER]: EmojiContainer;\n  [ON_REACTION_UPDATED]: ReactionEvent;\n  [MESSAGE_LIST_PARAMS_CHANGED]: MessageListParams;\n  [ON_FILE_INFO_UPLOADED]: {\n    channelUrl: string;\n    requestId: number;\n    index: number;\n    uploadableFileInfo: UploadableFileInfo;\n    error?: unknown;\n  };\n};\n\ntype MessageId = number;\ntype RequestId = string;\n\nexport type ChannelActionTypes = CreateAction<CHANNEL_PAYLOAD_TYPES>;\n", "export enum PublishingModuleType {\n  CHANNEL = 'CHANNEL',\n  THREAD = 'THREAD',\n}\n", "import format from 'date-fns/format';\nimport { GroupChannel } from '@sendbird/chat/groupChannel';\nimport { BaseMessage } from '@sendbird/chat/message';\nimport { getOutgoingMessageState, OutgoingMessageStates } from '../../../utils/exports/getOutgoingMessageState';\nimport { SendableMessageType } from '../../../utils';\n\nexport const getNicknamesMapFromMembers = (members = []): Map<string, string> => {\n  const nicknamesMap = new Map();\n  for (let memberIndex = 0; memberIndex < members.length; memberIndex += 1) {\n    const { userId, nickname } = members[memberIndex];\n    nicknamesMap.set(userId, nickname);\n  }\n  return nicknamesMap;\n};\n\nexport const getParentMessageFrom = (message: SendableMessageType | null): SendableMessageType | BaseMessage => {\n  if (!message) {\n    return null;\n  }\n  if (isParentMessage(message)) {\n    return message;\n  }\n  if (isThreadMessage(message)) {\n    return message?.parentMessage || null;\n  }\n  return null;\n};\n\nexport const isParentMessage = (message: SendableMessageType): boolean => {\n  return (\n    message?.parentMessage === null\n    && typeof message?.parentMessageId === 'number'\n    && !message?.parentMessageId\n  );\n};\n\nexport const isThreadMessage = (message: SendableMessageType): boolean => {\n  return (\n    message?.parentMessage !== null\n    && typeof message?.parentMessageId === 'number'\n    && message?.parentMessageId > 0\n    && message?.threadInfo === null\n  );\n};\n\nexport const isAboutSame = (a: number, b: number, px: number): boolean => (Math.abs(a - b) <= px);\n\nexport const isEmpty = (val: unknown): boolean => (val === null || val === undefined);\n\n// Some Ids return string and number inconsistently\n// only use to comapre IDs\nexport function compareIds(a: number | string, b: number | string): boolean {\n  if (isEmpty(a) || isEmpty(b)) {\n    return false;\n  }\n  const aString = a.toString();\n  const bString = b.toString();\n  return aString === bString;\n}\n\nexport const getMessageCreatedAt = (message: SendableMessageType): string => format(message.createdAt, 'p');\nexport const isReadMessage = (channel: GroupChannel, message: SendableMessageType): boolean => (\n  getOutgoingMessageState(channel, message) === OutgoingMessageStates.READ\n);\nexport const isSameGroup = (\n  message: SendableMessageType,\n  comparingMessage: SendableMessageType,\n  currentChannel: GroupChannel,\n): boolean => {\n  if (!(message\n    && comparingMessage\n    && message.messageType\n    && message.messageType !== 'admin'\n    && comparingMessage.messageType\n    && comparingMessage?.messageType !== 'admin'\n    && message?.sender\n    && comparingMessage?.sender\n    && message?.createdAt\n    && comparingMessage?.createdAt\n    && message?.sender?.userId\n    && comparingMessage?.sender?.userId\n  )) {\n    return false;\n  }\n  return (\n    message?.sendingStatus === comparingMessage?.sendingStatus\n    && message?.sender?.userId === comparingMessage?.sender?.userId\n    && getMessageCreatedAt(message) === getMessageCreatedAt(comparingMessage)\n    && isReadMessage(currentChannel, message) === isReadMessage(currentChannel, comparingMessage)\n  );\n};\n\nexport const compareMessagesForGrouping = (\n  prevMessage: SendableMessageType,\n  currMessage: SendableMessageType,\n  nextMessage: SendableMessageType,\n  currentChannel: GroupChannel,\n  replyType: string,\n): [boolean, boolean] => {\n  if (replyType === 'THREAD' && currMessage?.threadInfo) {\n    return [false, false];\n  }\n  const sendingStatus = currMessage?.sendingStatus || '';\n  const isAcceptable = sendingStatus !== 'pending' && sendingStatus !== 'failed';\n  return [\n    isSameGroup(prevMessage, currMessage, currentChannel) && isAcceptable,\n    isSameGroup(currMessage, nextMessage, currentChannel) && isAcceptable,\n  ];\n};\n\nexport const scrollIntoLast = (intialTry = 0): void => {\n  const MAX_TRIES = 10;\n  const currentTry = intialTry;\n  if (currentTry > MAX_TRIES) {\n    return;\n  }\n  try {\n    const scrollDOM = document.querySelector('.sendbird-thread-ui--scroll');\n    // eslint-disable-next-line no-multi-assign\n    scrollDOM.scrollTop = scrollDOM.scrollHeight;\n  } catch (error) {\n    setTimeout(() => {\n      scrollIntoLast(currentTry + 1);\n    }, 500 * currentTry);\n  }\n};\n", "import { useCallback } from 'react';\nimport type { GroupChannel } from '@sendbird/chat/groupChannel';\nimport type { MultipleFilesMessageCreateParams, UploadableFileInfo } from '@sendbird/chat/message';\nimport { MultipleFilesMessage } from '@sendbird/chat/message';\n\nimport type { Logger } from '../../../../lib/SendbirdState';\nimport type { Nullable } from '../../../../types';\nimport PUBSUB_TOPICS from '../../../../lib/pubSub/topics';\nimport { scrollIntoLast as scrollIntoLastForChannel } from '../utils';\nimport { SendableMessageType } from '../../../../utils';\nimport { PublishingModuleType } from '../../../internalInterfaces';\nimport { scrollIntoLast as scrollIntoLastForThread } from '../../../Thread/context/utils';\n\nexport type OnBeforeSendMFMType = (\n  files: Array<File>,\n  quoteMessage?: SendableMessageType,\n) => MultipleFilesMessageCreateParams;\n\nexport interface UseSendMFMDynamicParams {\n  currentChannel: Nullable<GroupChannel>;\n  onBeforeSendMultipleFilesMessage?: OnBeforeSendMFMType;\n  publishingModules: PublishingModuleType[];\n}\nexport interface UseSendMFMStaticParams {\n  logger: Logger,\n  pubSub: any,\n  scrollRef?: React.RefObject<HTMLDivElement>;\n}\nexport interface FileUploadedPayload {\n  channelUrl: string,\n  requestId: string,\n  index: number,\n  uploadableFileInfo: UploadableFileInfo,\n  error: Error,\n}\nexport type SendMFMFunctionType = (files: Array<File>, quoteMessage?: SendableMessageType) => Promise<MultipleFilesMessage>;\n\n/**\n * pubSub is used instead of messagesDispatcher to avoid redundantly calling\n * because this useSendMultipleFilesMessage is used in the Channel and Thread both\n */\nexport const useSendMultipleFilesMessage = ({\n  currentChannel,\n  onBeforeSendMultipleFilesMessage,\n  publishingModules,\n}: UseSendMFMDynamicParams, {\n  logger,\n  pubSub,\n  scrollRef,\n}: UseSendMFMStaticParams): Array<SendMFMFunctionType> => {\n  const sendMessage = useCallback((\n    files: Array<File>,\n    quoteMessage?: SendableMessageType,\n  ): Promise<MultipleFilesMessage> => {\n    return new Promise((resolve, reject) => {\n      if (!currentChannel) {\n        logger.warning('Channel: Sending MFm failed, because currentChannel is null.', { currentChannel });\n        reject();\n      }\n      if (files.length <= 1) {\n        logger.warning('Channel: Sending MFM failed, because there are no multiple files.', { files });\n        reject();\n      }\n      let messageParams: MultipleFilesMessageCreateParams = {\n        fileInfoList: files.map((file: File): UploadableFileInfo => ({\n          file,\n          fileName: file.name,\n          fileSize: file.size,\n          mimeType: file.type,\n        })),\n      };\n      if (quoteMessage) {\n        messageParams.isReplyToChannel = true;\n        messageParams.parentMessageId = quoteMessage.messageId;\n      }\n      if (typeof onBeforeSendMultipleFilesMessage === 'function') {\n        messageParams = onBeforeSendMultipleFilesMessage(files, quoteMessage);\n      }\n      logger.info('Channel: Start sending MFM', { messageParams });\n      try {\n        currentChannel.sendMultipleFilesMessage(messageParams)\n          /**\n           * We don't operate the onFileUploaded event for now\n           * until we will add UI/UX for it\n           */\n          .onFileUploaded((requestId, index, uploadableFileInfo: UploadableFileInfo, error) => {\n            logger.info('Channel: onFileUploaded during sending MFM', {\n              requestId,\n              index,\n              error,\n              uploadableFileInfo,\n            });\n            pubSub.publish(PUBSUB_TOPICS.ON_FILE_INFO_UPLOADED, {\n              response: {\n                channelUrl: currentChannel.url,\n                requestId,\n                index,\n                uploadableFileInfo,\n                error,\n              },\n              publishingModules,\n            });\n          })\n          .onPending((pendingMessage: MultipleFilesMessage) => {\n            logger.info('Channel: in progress of sending MFM', { pendingMessage, fileInfoList: messageParams.fileInfoList });\n            pubSub.publish(PUBSUB_TOPICS.SEND_MESSAGE_START, {\n              message: pendingMessage,\n              channel: currentChannel,\n              publishingModules,\n            });\n            // We need this delay because rendering MFM takes time due to large image files.\n            setTimeout(() => {\n              if (scrollRef && publishingModules.includes(PublishingModuleType.CHANNEL)) {\n                scrollIntoLastForChannel(0, scrollRef);\n              }\n              if (publishingModules.includes(PublishingModuleType.THREAD)) {\n                scrollIntoLastForThread(0);\n              }\n            }, 100);\n          })\n          .onFailed((error, failedMessage: MultipleFilesMessage) => {\n            logger.error('Channel: Sending MFM failed.', { error, failedMessage });\n            pubSub.publish(PUBSUB_TOPICS.SEND_MESSAGE_FAILED, {\n              channel: currentChannel,\n              message: failedMessage,\n              publishingModules,\n            });\n            reject(error);\n          })\n          .onSucceeded((succeededMessage: MultipleFilesMessage) => {\n            logger.info('Channel: Sending voice message success!', { succeededMessage });\n            pubSub.publish(PUBSUB_TOPICS.SEND_FILE_MESSAGE, {\n              channel: currentChannel,\n              message: succeededMessage,\n              publishingModules,\n            });\n            // We need this delay because rendering MFM takes time due to large image files.\n            setTimeout(() => {\n              if (scrollRef && publishingModules.includes(PublishingModuleType.CHANNEL)) {\n                scrollIntoLastForChannel(0, scrollRef);\n              }\n              if (publishingModules.includes(PublishingModuleType.THREAD)) {\n                scrollIntoLastForThread(0);\n              }\n            }, 100);\n            resolve(succeededMessage);\n          });\n      } catch (error) {\n        logger.error('Channel: Sending MFM failed.', { error });\n        reject(error);\n      }\n    });\n  }, [\n    currentChannel,\n    onBeforeSendMultipleFilesMessage,\n    publishingModules,\n  ]);\n  return [sendMessage];\n};\n", "const isEmpty = <T>(val: T | undefined | null): val is undefined | null => (val === null || val === undefined);\n\n// Some Ids return string and number inconsistently\n// only use to compare IDs\nexport default function compareIds(a?: number | string, b?: number | string) {\n  if (isEmpty(a) || isEmpty(b)) {\n    return false;\n  }\n  const aString = a.toString();\n  const bString = b.toString();\n  return aString === bString;\n}\n", "/**\n * This function helps consider the every condition\n * related to enabling emoji reaction feature.\n */\n\nexport interface IsReactionEnabledProps {\n  isBroadcast?: boolean;\n  isSuper?: boolean;\n  globalLevel?: boolean;\n  moduleLevel?: boolean;\n}\n\nexport function getIsReactionEnabled({\n  isBroadcast = false,\n  isSuper = false,\n  globalLevel = true,\n  moduleLevel,\n}: IsReactionEnabledProps): boolean {\n  return !(isBroadcast || isSuper) && (moduleLevel ?? globalLevel);\n}\n", "import { CoreMessageType, SendableMessageType } from '../../../../utils';\nimport { GroupChannel } from '@sendbird/chat/groupChannel';\nimport { EmojiContainer } from '@sendbird/chat';\nimport type { MessageListParams as MessageListParamsInternal } from '../ChannelProvider';\n\nexport interface ChannelInitialStateType {\n  allMessages: (SendableMessageType | CoreMessageType)[];\n  localMessages: (SendableMessageType | CoreMessageType)[];\n  loading: boolean;\n  initialized: boolean;\n  unreadSince: string;\n  isInvalid: boolean;\n  currentGroupChannel: GroupChannel | null;\n  hasMorePrev: boolean;\n  oldestMessageTimeStamp: number;\n  hasMoreNext: boolean;\n  latestMessageTimeStamp: number;\n  emojiContainer: EmojiContainer;\n  readStatus: any;\n  messageListParams: null | MessageListParamsInternal;\n}\n\nconst initialState: ChannelInitialStateType = {\n  initialized: false,\n  loading: true,\n  allMessages: [],\n  /**\n   * localMessages: pending & failed messages\n   */\n  localMessages: [],\n  currentGroupChannel: null,\n  // for scrollup\n  hasMorePrev: false,\n  oldestMessageTimeStamp: 0,\n  // for scroll down\n  // onScrollDownCallback is added for navigation to different timestamps on messageSearch\n  // hasMorePrev, onScrollCallback -> scroll up(default behavior)\n  // hasMoreNext, onScrollDownCallback -> scroll down\n  hasMoreNext: false,\n  latestMessageTimeStamp: 0,\n  emojiContainer: { emojiCategories: [], emojiHash: '' },\n  unreadSince: null,\n  /**\n   * unreadSince is a formatted date information string\n   * It's used only for the {unreadSince && <UnreadCount time={unreadSince} />}\n   */\n  isInvalid: false,\n  readStatus: null,\n  messageListParams: null,\n};\n\nexport default initialState;\n", "import format from 'date-fns/format';\nimport {\n  MessageListParams,\n  MultipleFilesMessage,\n  SendingStatus,\n} from '@sendbird/chat/message';\nimport { match, P } from 'ts-pattern';\n\nimport * as channelActions from './actionTypes';\nimport type { ChannelActionTypes } from './actionTypes';\nimport compareIds from '../../../../utils/compareIds';\nimport { PREV_RESULT_SIZE, NEXT_RESULT_SIZE } from '../const';\nimport { passUnsuccessfullMessages, mergeAndSortMessages } from '../utils';\nimport {\n  CoreMessageType,\n  filterMessageListParams,\n  isSendableMessage,\n} from '../../../../utils';\nimport { ChannelInitialStateType } from './initialState';\n\nconst getOldestMessageTimeStamp = (messages: CoreMessageType[] = []) => {\n  const oldestMessage = messages[0];\n  return (oldestMessage && oldestMessage.createdAt) || null;\n};\nconst getLatestMessageTimeStamp = (messages: CoreMessageType[] = []) => {\n  const latestMessage = messages[messages.length - 1];\n  return (latestMessage && latestMessage.createdAt) || null;\n};\n\nfunction hasReqId<T extends object>(\n  message: T,\n): message is T & { reqId: string } {\n  return 'reqId' in message;\n}\n\nexport default function channelReducer(\n  state: ChannelInitialStateType,\n  action: ChannelActionTypes,\n): ChannelInitialStateType {\n  return match(action)\n    .with({ type: channelActions.RESET_MESSAGES }, () => {\n      return {\n        ...state,\n        // when user switches channel, if the previous channel `hasMorePrev`\n        // the onScroll gets called twice, setting hasMorePrev false prevents this\n        hasMorePrev: false,\n        hasMoreNext: false,\n        allMessages: [],\n      };\n    })\n    .with({ type: channelActions.FETCH_INITIAL_MESSAGES_START }, () => {\n      return {\n        ...state,\n        loading: true,\n        allMessages: state.allMessages.filter((m) => isSendableMessage(m)\n          ? m.sendingStatus !== SendingStatus.SUCCEEDED\n          : true,\n        ),\n      };\n    })\n    .with({ type: channelActions.FETCH_INITIAL_MESSAGES_SUCCESS }, (action) => {\n      const { currentGroupChannel, messages } = action.payload;\n      if (!(currentGroupChannel?.url === state.currentGroupChannel?.url)) {\n        return state;\n      }\n      const oldestMessageTimeStamp = getOldestMessageTimeStamp(messages);\n      const latestMessageTimeStamp = getLatestMessageTimeStamp(messages);\n      return {\n        ...state,\n        loading: false,\n        initialized: true,\n        hasMorePrev: true,\n        hasMoreNext: true,\n        oldestMessageTimeStamp,\n        latestMessageTimeStamp,\n        allMessages: [...messages],\n      };\n    })\n    .with({ type: channelActions.FETCH_PREV_MESSAGES_SUCCESS }, (action) => {\n      const { currentGroupChannel, messages } = action.payload;\n      if (!(currentGroupChannel?.url === state.currentGroupChannel?.url)) {\n        return state;\n      }\n      const hasMorePrev = (messages?.length ?? 0)\n        >= (state?.messageListParams?.prevResultSize ?? PREV_RESULT_SIZE) + 1;\n      const oldestMessageTimeStamp = getOldestMessageTimeStamp(messages);\n\n      // Remove duplicated messages\n      const duplicatedMessageIds = [];\n      const updatedOldMessages = state.allMessages.map((msg) => {\n        const duplicatedMessage = messages.find(({ messageId }) => compareIds(messageId, msg.messageId),\n        );\n        if (!duplicatedMessage) {\n          return msg;\n        }\n        duplicatedMessageIds.push(duplicatedMessage.messageId);\n        return duplicatedMessage.updatedAt > msg.updatedAt\n          ? duplicatedMessage\n          : msg;\n      });\n      const filteredNewMessages = duplicatedMessageIds.length > 0\n        ? messages.filter(\n          (msg) => !duplicatedMessageIds.find((messageId) => compareIds(messageId, msg.messageId),\n          ),\n        )\n        : messages;\n\n      return {\n        ...state,\n        hasMorePrev,\n        oldestMessageTimeStamp,\n        allMessages: [...filteredNewMessages, ...updatedOldMessages],\n      };\n    })\n    .with({ type: channelActions.FETCH_NEXT_MESSAGES_SUCCESS }, (action) => {\n      const { currentGroupChannel, messages } = action.payload;\n      if (!(currentGroupChannel?.url === state.currentGroupChannel?.url)) {\n        return state;\n      }\n      const hasMoreNext = (messages?.length ?? 0)\n        === (state?.messageListParams?.nextResultSize ?? NEXT_RESULT_SIZE) + 1;\n      const latestMessageTimeStamp = getLatestMessageTimeStamp(messages);\n\n      // sort ~\n      const sortedMessages = mergeAndSortMessages(state.allMessages, messages);\n\n      return {\n        ...state,\n        hasMoreNext,\n        latestMessageTimeStamp,\n        allMessages: sortedMessages,\n      };\n    })\n    .with(\n      {\n        type: P.union(\n          channelActions.FETCH_INITIAL_MESSAGES_FAILURE,\n          channelActions.FETCH_PREV_MESSAGES_FAILURE,\n          channelActions.FETCH_NEXT_MESSAGES_FAILURE,\n        ),\n      },\n      (action) => {\n        const { currentGroupChannel } = action.payload;\n        if (currentGroupChannel?.url !== state?.currentGroupChannel?.url) {\n          return state;\n        }\n        return {\n          ...state,\n          loading: false,\n          initialized: false,\n          allMessages: [],\n          hasMorePrev: false,\n          hasMoreNext: false,\n          oldestMessageTimeStamp: null,\n          latestMessageTimeStamp: null,\n        };\n      },\n    )\n    .with({ type: channelActions.SEND_MESSAGE_START }, (action) => {\n      // Message should not be spread here\n      // it will loose some methods like `isUserMessage`\n      return {\n        ...state,\n        localMessages: [...state.localMessages, action.payload],\n      };\n    })\n    .with({ type: channelActions.SEND_MESSAGE_SUCCESS }, (action) => {\n      const message = action.payload;\n      const filteredMessages = state.allMessages.filter(\n        (m) => hasReqId(m) && m?.reqId !== message?.reqId,\n      );\n      // [Policy] Pending messages and failed messages\n      // must always be at the end of the message list\n      return {\n        ...state,\n        allMessages: [...filteredMessages, message],\n        localMessages: state.localMessages.filter(\n          (m) => hasReqId(m) && m?.reqId !== message?.reqId,\n        ),\n      };\n    })\n    .with({ type: channelActions.SEND_MESSAGE_FAILURE }, (action) => {\n      // @ts-ignore\n      action.payload.failed = true;\n      return {\n        ...state,\n        localMessages: state.localMessages.map((m) => compareIds(hasReqId(m) && m.reqId, action.payload.reqId)\n          ? action.payload\n          : m,\n        ),\n      };\n    })\n    .with({ type: channelActions.SET_CURRENT_CHANNEL }, (action) => {\n      return {\n        ...state,\n        currentGroupChannel: action.payload,\n        isInvalid: false,\n      };\n    })\n    .with({ type: channelActions.SET_CHANNEL_INVALID }, () => {\n      return {\n        ...state,\n        currentGroupChannel: null,\n        isInvalid: true,\n      };\n    })\n    .with({ type: channelActions.ON_MESSAGE_RECEIVED }, (action) => {\n      const { channel, message } = action.payload;\n      const { members } = channel;\n      const { sender } = message;\n      const { currentGroupChannel, unreadSince } = state;\n\n      const currentGroupChannelUrl = currentGroupChannel?.url;\n\n      if (!compareIds(channel?.url, currentGroupChannelUrl)) {\n        return state;\n      }\n      // Excluded overlapping messages\n      if (\n        state.allMessages.some((msg) => msg.messageId === message.messageId)\n      ) {\n        return state;\n      }\n      // Filter by userFilledQuery\n      if (\n        state.messageListParams\n        && !filterMessageListParams(\n          state.messageListParams as MessageListParams,\n          message,\n        )\n      ) {\n        return state;\n      }\n\n      if (message.isAdminMessage && message.isAdminMessage()) {\n        return {\n          ...state,\n          allMessages: passUnsuccessfullMessages(state.allMessages, message),\n        };\n      }\n\n      // Update members when sender profileUrl, nickname, friendName has been changed\n      const senderMember = members?.find((m) => m?.userId === sender?.userId);\n      if (\n        senderMember?.profileUrl !== sender?.profileUrl\n        || senderMember?.friendName !== sender?.friendName\n        || senderMember?.nickname !== sender?.nickname\n      ) {\n        // @ts-ignore\n        channel.members = members.map((member) => {\n          if (member.userId === sender.userId) {\n            return sender;\n          }\n          return member;\n        });\n      }\n      return {\n        ...state,\n        currentGroupChannel: channel,\n        unreadSince: state?.unreadSince\n          ? unreadSince\n          : format(new Date(), 'p MMM dd'),\n        allMessages: passUnsuccessfullMessages(state.allMessages, message),\n      };\n    })\n    .with({ type: channelActions.ON_MESSAGE_UPDATED }, (action) => {\n      const { channel, message } = action.payload;\n      const currentGroupChannelUrl = state?.currentGroupChannel?.url || '';\n      if (!compareIds(channel?.url, currentGroupChannelUrl)) {\n        return state; // Ignore event when it is not for the current channel\n      }\n      if (\n        state.messageListParams\n        && !filterMessageListParams(\n          state.messageListParams as MessageListParams,\n          message,\n        )\n      ) {\n        // Delete the message if it doesn't match to the params anymore\n        return {\n          ...state,\n          allMessages: state.allMessages.filter(\n            (m) => !compareIds(m.messageId, message?.messageId),\n          ),\n        };\n      }\n      return {\n        ...state,\n        allMessages: state.allMessages.map((m) => {\n          if (compareIds(m.messageId, message.messageId)) {\n            return message;\n          }\n          if (compareIds(m.parentMessageId, message.messageId)) {\n            m.parentMessage = message; // eslint-disable-line no-param-reassign\n          }\n          return m;\n        }),\n      };\n    })\n    .with({ type: channelActions.ON_MESSAGE_THREAD_INFO_UPDATED }, (action) => {\n      const { channel, event } = action.payload;\n      const { channelUrl, threadInfo, targetMessageId } = event;\n      const currentGroupChannelUrl = state?.currentGroupChannel?.url || '';\n      if (\n        !compareIds(channel?.url, currentGroupChannelUrl)\n        || !compareIds(channel?.url, channelUrl)\n      ) {\n        return state; // Ignore event when it is not for the current channel\n      }\n      return {\n        ...state,\n        allMessages: state.allMessages.map((m) => {\n          if (compareIds(m.messageId, targetMessageId)) {\n            // eslint-disable-next-line no-param-reassign\n            m.threadInfo = threadInfo; // Upsert threadInfo to the target message\n          }\n          return m;\n        }),\n      };\n    })\n    .with({ type: channelActions.RESEND_MESSAGE_START }, (action) => {\n      return {\n        ...state,\n        allMessages: state.allMessages.map((m) => compareIds(hasReqId(m) && m.reqId, action.payload.reqId)\n          ? action.payload\n          : m,\n        ),\n      };\n    })\n    .with({ type: channelActions.MARK_AS_READ }, (action) => {\n      if (state.currentGroupChannel?.url !== action.payload?.channel?.url) {\n        return state;\n      }\n      return {\n        ...state,\n        unreadSince: null,\n      };\n    })\n    .with({ type: channelActions.ON_MESSAGE_DELETED }, (action) => {\n      return {\n        ...state,\n        allMessages: state.allMessages.filter(\n          (m) => !compareIds(m.messageId, action.payload),\n        ),\n      };\n    })\n    .with({ type: channelActions.ON_MESSAGE_DELETED_BY_REQ_ID }, (action) => {\n      return {\n        ...state,\n        localMessages: state.localMessages.filter(\n          (m) => !compareIds(hasReqId(m) && m.reqId, action.payload),\n        ),\n      };\n    })\n    .with({ type: channelActions.SET_EMOJI_CONTAINER }, (action) => {\n      return {\n        ...state,\n        emojiContainer: action.payload,\n      };\n    })\n    .with({ type: channelActions.ON_REACTION_UPDATED }, (action) => {\n      return {\n        ...state,\n        allMessages: state.allMessages.map((m) => {\n          if (compareIds(m.messageId, action.payload.messageId)) {\n            if (\n              m.applyReactionEvent\n              && typeof m.applyReactionEvent === 'function'\n            ) {\n              m.applyReactionEvent(action.payload);\n            }\n            return m;\n          }\n          return m;\n        }),\n      };\n    })\n    .with({ type: channelActions.MESSAGE_LIST_PARAMS_CHANGED }, (action) => {\n      return {\n        ...state,\n        messageListParams: action.payload,\n      };\n    })\n    .with({ type: channelActions.ON_FILE_INFO_UPLOADED }, (action) => {\n      const { channelUrl, requestId, index, uploadableFileInfo, error } = action.payload;\n      if (!compareIds(channelUrl, state?.currentGroupChannel?.url)) {\n        return state;\n      }\n      /**\n       * We don't have to do anything here because\n       * onFailed() will be called so handle error there instead.\n       */\n      if (error) return state;\n      const { localMessages } = state;\n      const messageToUpdate = localMessages.find((message) => compareIds(hasReqId(message) && message.reqId, requestId),\n      );\n      const fileInfoList = (messageToUpdate as MultipleFilesMessage)\n        .messageParams?.fileInfoList;\n      if (Array.isArray(fileInfoList)) {\n        fileInfoList[index] = uploadableFileInfo;\n      }\n      return {\n        ...state,\n        localMessages,\n      };\n    })\n    .otherwise(() => state);\n}\n", "import { useEffect } from 'react';\nimport { GroupChannel, GroupChannelHandler, SendbirdGroupChat } from '@sendbird/chat/groupChannel';\n\nimport { scrollIntoLast } from '../utils';\n\nimport { CustomUseReducerDispatcher, Logger } from '../../../../lib/SendbirdState';\nimport uuidv4 from '../../../../utils/uuid';\nimport compareIds from '../../../../utils/compareIds';\nimport * as messageActions from '../dux/actionTypes';\nimport useSendbirdStateContext from '../../../../hooks/useSendbirdStateContext';\nimport { SendableMessageType } from '../../../../utils';\n\n/**\n * Handles ChannelEvents and send values to dispatcher using messagesDispatcher\n * messagesDispatcher: Dispatcher\n * sdk: sdkInstance\n * logger: loggerInstance\n * channelUrl: string\n * sdkInit: bool\n */\ninterface DynamicParams {\n  sdkInit: boolean;\n  currentUserId: string;\n  currentGroupChannel: GroupChannel;\n  disableMarkAsRead: boolean;\n}\ninterface StaticParams {\n  sdk: SendbirdGroupChat;\n  logger: Logger;\n  scrollRef: React.RefObject<HTMLDivElement>;\n  setQuoteMessage: React.Dispatch<React.SetStateAction<SendableMessageType>>;\n  messagesDispatcher: CustomUseReducerDispatcher;\n}\n\nconst DELIVERY_RECIPT = 'delivery_receipt';\n\nfunction useHandleChannelEvents({\n  sdkInit,\n  currentUserId,\n  currentGroupChannel,\n  disableMarkAsRead,\n}: DynamicParams, {\n  sdk,\n  logger,\n  scrollRef,\n  setQuoteMessage,\n  messagesDispatcher,\n}: StaticParams): void {\n  const store = useSendbirdStateContext();\n  const {\n    markAsReadScheduler,\n    markAsDeliveredScheduler,\n    disableMarkAsDelivered,\n  } = store.config;\n  const canSetMarkAsDelivered = store.stores.sdkStore.sdk?.appInfo?.premiumFeatureList\n    ?.find((feature) => (feature === DELIVERY_RECIPT));\n\n  useEffect(() => {\n    const channelUrl = currentGroupChannel?.url;\n    const channelHandlerId = uuidv4();\n    if (channelUrl && sdkInit) {\n      const channelHandler: GroupChannelHandler = {\n        onMessageReceived: (channel, message) => {\n          if (compareIds(channel?.url, channelUrl)) {\n            let scrollToEnd = false;\n            try {\n              const { current } = scrollRef;\n              scrollToEnd = current.offsetHeight + current.scrollTop >= current.scrollHeight - 10;\n              // 10 is a buffer\n            } catch (error) {\n              //\n            }\n\n            logger.info('Channel | useHandleChannelEvents: onMessageReceived', message);\n            messagesDispatcher({\n              type: messageActions.ON_MESSAGE_RECEIVED,\n              payload: { channel, message },\n            });\n            if (scrollToEnd\n              && document.getElementById('sendbird-dropdown-portal')?.childElementCount === 0\n              && document.getElementById('sendbird-emoji-list-portal')?.childElementCount === 0\n            ) {\n              // and !openContextMenu\n              try {\n                setTimeout(() => {\n                  scrollIntoLast(0, scrollRef);\n                });\n                if (!disableMarkAsRead) {\n                  markAsReadScheduler.push(currentGroupChannel);\n                }\n                if (canSetMarkAsDelivered && !disableMarkAsDelivered) {\n                  markAsDeliveredScheduler.push(currentGroupChannel);\n                }\n              } catch (error) {\n                logger.warning('Channel | onMessageReceived | scroll to end failed');\n              }\n            }\n          }\n        },\n        onUnreadMemberStatusUpdated: (channel) => {\n          logger.info('Channel | useHandleChannelEvents: onUnreadMemberStatusUpdated', channel);\n          if (compareIds(channel?.url, channelUrl)) {\n            messagesDispatcher({\n              type: messageActions.SET_CURRENT_CHANNEL,\n              payload: channel,\n            });\n          }\n        },\n        // before(onDeliveryReceiptUpdated)\n        onUndeliveredMemberStatusUpdated: (channel) => {\n          if (compareIds(channel?.url, channelUrl)) {\n            logger.info('Channel | useHandleChannelEvents: onDeliveryReceiptUpdated', channel);\n            messagesDispatcher({\n              type: messageActions.SET_CURRENT_CHANNEL,\n              payload: channel,\n            });\n          }\n        },\n        onMessageUpdated: (channel, message) => {\n          logger.info('Channel | useHandleChannelEvents: onMessageUpdated', message);\n          messagesDispatcher({\n            type: messageActions.ON_MESSAGE_UPDATED,\n            payload: { channel, message },\n          });\n        },\n        onThreadInfoUpdated: (channel, threadInfoUpdateEvent) => {\n          logger.info('Channel | useHandleChannelEvents: onThreadInfoUpdated', { channel, threadInfoUpdateEvent });\n          messagesDispatcher({\n            type: messageActions.ON_MESSAGE_THREAD_INFO_UPDATED,\n            payload: { channel, event: threadInfoUpdateEvent },\n          });\n        },\n        onMessageDeleted: (channel, messageId) => {\n          logger.info('Channel | useHandleChannelEvents: onMessageDeleted', { channel, messageId });\n          setQuoteMessage(null);\n          messagesDispatcher({\n            type: messageActions.ON_MESSAGE_DELETED,\n            payload: messageId,\n          });\n        },\n        onReactionUpdated: (channel, reactionEvent) => {\n          logger.info('Channel | useHandleChannelEvents: onReactionUpdated', { channel, reactionEvent });\n          messagesDispatcher({\n            type: messageActions.ON_REACTION_UPDATED,\n            payload: reactionEvent,\n          });\n        },\n        onChannelChanged: (channel) => {\n          if (compareIds(channel?.url, channelUrl)) {\n            logger.info('Channel | useHandleChannelEvents: onChannelChanged', channel);\n            messagesDispatcher({\n              type: messageActions.SET_CURRENT_CHANNEL,\n              payload: channel,\n            });\n          }\n        },\n        onChannelFrozen: (channel) => {\n          if (compareIds(channel?.url, channelUrl)) {\n            logger.info('Channel | useHandleChannelEvents: onChannelFrozen', channel);\n            messagesDispatcher({\n              type: messageActions.SET_CURRENT_CHANNEL,\n              payload: channel,\n            });\n          }\n        },\n        onChannelUnfrozen: (channel) => {\n          if (compareIds(channel?.url, channelUrl)) {\n            logger.info('Channel | useHandleChannelEvents: onChannelUnFrozen', channel);\n            messagesDispatcher({\n              type: messageActions.SET_CURRENT_CHANNEL,\n              payload: channel,\n            });\n          }\n        },\n        onUserMuted: (channel, user) => {\n          if (compareIds(channel?.url, channelUrl)) {\n            logger.info('Channel | useHandleChannelEvents: onUserMuted', { channel, user });\n            messagesDispatcher({\n              type: messageActions.SET_CURRENT_CHANNEL,\n              payload: channel,\n            });\n          }\n        },\n        onUserUnmuted: (channel, user) => {\n          if (compareIds(channel?.url, channelUrl)) {\n            logger.info('Channel | useHandleChannelEvents: onUserUnmuted', { channel, user });\n            messagesDispatcher({\n              type: messageActions.SET_CURRENT_CHANNEL,\n              payload: channel,\n            });\n          }\n        },\n        onUserBanned: (channel, user) => {\n          if (compareIds(channel?.url, channelUrl) && user?.userId === sdk?.currentUser?.userId) {\n            logger.info('Channel | useHandleChannelEvents: onUserBanned', { channel, user });\n            messagesDispatcher({\n              type: messageActions.SET_CURRENT_CHANNEL,\n              payload: null,\n            });\n          }\n        },\n        onOperatorUpdated: (channel, users) => {\n          if (compareIds(channel?.url, channelUrl)) {\n            logger.info('Channel | useHandleChannelEvents: onOperatorUpdated', { channel, users });\n            messagesDispatcher({\n              type: messageActions.SET_CURRENT_CHANNEL,\n              payload: channel,\n            });\n          }\n        },\n        onUserLeft: (channel, user) => {\n          if (compareIds(channel?.url, channelUrl)) {\n            logger.info('Channel | useHandleChannelEvents: onUserLeft', { channel, user });\n            if (user?.userId === currentUserId) {\n              messagesDispatcher({\n                type: messageActions.SET_CURRENT_CHANNEL,\n                payload: null,\n              });\n            }\n          }\n        },\n      };\n      logger.info('Channel | useHandleChannelEvents: Setup event handler', { channelHandlerId, channelHandler });\n      // Add this group channel handler to the Sendbird chat instance\n      sdk.groupChannel?.addGroupChannelHandler(channelHandlerId, new GroupChannelHandler(channelHandler));\n    }\n    return () => {\n      if (sdk?.groupChannel?.removeGroupChannelHandler) {\n        logger.info('Channel | useHandleChannelEvents: Removing message reciver handler', channelHandlerId);\n        sdk.groupChannel.removeGroupChannelHandler(channelHandlerId);\n      } else if (sdk?.groupChannel) {\n        logger.error('Channel | useHandleChannelEvents: Not found the removeGroupChannelHandler');\n      }\n    };\n  }, [currentGroupChannel?.url, sdkInit]);\n}\n\nexport default useHandleChannelEvents;\n", "import { useEffect } from 'react';\n\nimport * as messageActionTypes from '../dux/actionTypes';\n\nfunction useSetChannel({ channelUrl, sdkInit, disableMarkAsRead }, {\n  messagesDispatcher,\n  sdk,\n  logger,\n  markAsReadScheduler,\n}) {\n  useEffect(() => {\n    if (channelUrl && sdkInit && sdk && sdk.groupChannel) {\n      logger.info('Channel | useSetChannel fetching channel', channelUrl);\n      sdk.groupChannel.getChannel(channelUrl)\n        .then((groupChannel) => {\n          logger.info('Channel | useSetChannel fetched channel', groupChannel);\n          messagesDispatcher({\n            type: messageActionTypes.SET_CURRENT_CHANNEL,\n            payload: groupChannel,\n          });\n\n          logger.info('Channel: Mark as read', groupChannel);\n          if (!disableMarkAsRead) {\n            markAsReadScheduler.push(groupChannel);\n          }\n        })\n        .catch((e) => {\n          logger.warning('Channel | useSetChannel fetch channel failed', { channelUrl, e });\n          messagesDispatcher({\n            type: messageActionTypes.SET_CHANNEL_INVALID,\n          });\n        });\n      sdk.getAllEmoji().then((emojiContainer_) => {\n        logger.info('Channel: Getting emojis success', emojiContainer_);\n        messagesDispatcher({\n          type: messageActionTypes.SET_EMOJI_CONTAINER,\n          payload: emojiContainer_,\n        });\n      }).catch((err) => {\n        logger.error('Channel: Getting emojis failed', err);\n      });\n    }\n  }, [channelUrl, sdkInit]);\n}\n\nexport default useSetChannel;\n", "import React, { useEffect } from 'react';\nimport { MessageListParams, ReplyType } from '@sendbird/chat/message';\n\nimport * as utils from '../utils';\nimport * as messageActionTypes from '../dux/actionTypes';\nimport { PREV_RESULT_SIZE, NEXT_RESULT_SIZE } from '../const';\nimport { CoreMessageType, isMultipleFilesMessage } from '../../../../utils';\nimport { MessageListParams as MessageListParamsInternal } from '../ChannelProvider';\nimport { ReplyType as ReplyTypeInternal } from '../../../../types';\nimport { GroupChannel } from '@sendbird/chat/groupChannel';\nimport { CustomUseReducerDispatcher } from '../../../../lib/SendbirdState';\nimport { LoggerInterface } from '../../../../lib/Logger';\n\ntype UseInitialMessagesFetchOptions = {\n  currentGroupChannel: GroupChannel;\n  initialTimeStamp: number;\n  userFilledMessageListQuery: MessageListParamsInternal;\n  replyType: ReplyTypeInternal;\n  setIsScrolled: (val: boolean) => void;\n};\n\ntype UseInitialMessagesFetchParams = {\n  logger: LoggerInterface\n  messagesDispatcher: CustomUseReducerDispatcher;\n  scrollRef: React.RefObject<HTMLElement>;\n};\n\nfunction useInitialMessagesFetch(\n  {\n    currentGroupChannel,\n    initialTimeStamp,\n    userFilledMessageListQuery,\n    replyType,\n    setIsScrolled,\n  }: UseInitialMessagesFetchOptions,\n  { logger, scrollRef, messagesDispatcher }: UseInitialMessagesFetchParams,\n) {\n  const channelUrl = currentGroupChannel?.url;\n\n  useEffect(() => {\n    logger.info('Channel useInitialMessagesFetch: Setup started', currentGroupChannel);\n    setIsScrolled(false);\n    messagesDispatcher({\n      type: messageActionTypes.RESET_MESSAGES,\n      payload: null,\n    });\n\n    if (currentGroupChannel && currentGroupChannel?.getMessagesByTimestamp) {\n      const messageListParams: MessageListParamsInternal = {\n        prevResultSize: PREV_RESULT_SIZE,\n        isInclusive: true,\n        includeReactions: true,\n        includeMetaArray: true,\n      };\n      if (initialTimeStamp) {\n        messageListParams.nextResultSize = NEXT_RESULT_SIZE;\n      }\n      if (replyType === 'QUOTE_REPLY' || replyType === 'THREAD') {\n        messageListParams.includeThreadInfo = true;\n        messageListParams.includeParentMessageInfo = true;\n        messageListParams.replyType = ReplyType.ONLY_REPLY_TO_CHANNEL;\n      }\n      if (userFilledMessageListQuery) {\n        Object.keys(userFilledMessageListQuery).forEach((key) => {\n          messageListParams[key] = userFilledMessageListQuery[key];\n        });\n      }\n      if (\n        (replyType\n          && (replyType === 'QUOTE_REPLY' || replyType === 'THREAD'))\n        || userFilledMessageListQuery\n      ) {\n        logger.info('Channel useInitialMessagesFetch: Setup messageListParams', messageListParams);\n        messagesDispatcher({\n          type: messageActionTypes.MESSAGE_LIST_PARAMS_CHANGED,\n          payload: messageListParams,\n        });\n      }\n\n      logger.info('Channel: Fetching messages', { currentGroupChannel, userFilledMessageListQuery });\n      messagesDispatcher({\n        type: messageActionTypes.FETCH_INITIAL_MESSAGES_START,\n        payload: null,\n      });\n\n      let multipleFilesMessageCount = 0;\n      currentGroupChannel\n        .getMessagesByTimestamp(\n          initialTimeStamp || new Date().getTime(),\n          messageListParams as MessageListParams,\n        )\n        .then((messages) => {\n          messagesDispatcher({\n            type: messageActionTypes.FETCH_INITIAL_MESSAGES_SUCCESS,\n            payload: {\n              currentGroupChannel,\n              messages,\n            },\n          });\n          multipleFilesMessageCount = messages.filter((message) => isMultipleFilesMessage(message as CoreMessageType),\n          ).length;\n        })\n        .catch((error) => {\n          logger.error('Channel: Fetching messages failed', error);\n          messagesDispatcher({\n            type: messageActionTypes.FETCH_INITIAL_MESSAGES_FAILURE,\n            payload: { currentGroupChannel },\n          });\n        })\n        .finally(() => {\n          if (!initialTimeStamp) {\n            setTimeout(\n              () => utils.scrollIntoLast(0, scrollRef, setIsScrolled),\n              /**\n               * Rendering MFM takes long time so we need this.\n               * But later we should find better solution.\n               */\n              Math.min(multipleFilesMessageCount * 100, 1000),\n            );\n          } else {\n            setTimeout(() => {\n              utils.scrollToRenderedMessage(\n                scrollRef,\n                initialTimeStamp,\n                setIsScrolled,\n              );\n            }, 500);\n          }\n        });\n    }\n  }, [channelUrl, userFilledMessageListQuery, initialTimeStamp]);\n  /**\n   * Note - useEffect(() => {}, [currentGroupChannel])\n   * was buggy, that is why we did\n   * const channelUrl = currentGroupChannel && currentGroupChannel.url;\n   * useEffect(() => {}, [channelUrl])\n   * Again, this hook is supposed to execute when currentGroupChannel changes\n   * The 'channelUrl' here is not the same memory reference from Conversation.props\n   */\n}\n\nexport default useInitialMessagesFetch;\n", "import { useEffect, useState } from 'react';\nimport type { GroupChannel } from '@sendbird/chat/groupChannel';\n\nfunction useReconnectOnIdle(isOnline: boolean, currentGroupChannel: GroupChannel, reconnectOnIdle = true)\n  :{ shouldReconnect: boolean }\n{\n  const [isTabHidden, setIsTabHidden] = useState<boolean>(false);\n  const wasOffline = !isOnline;\n\n  useEffect(() => {\n    const handleVisibilityChange = () => {\n      if (reconnectOnIdle) {\n        setIsTabHidden(document.hidden);\n      }\n    };\n    document.addEventListener('visibilitychange', handleVisibilityChange);\n\n    return () => {\n      document.removeEventListener('visibilitychange', handleVisibilityChange);\n    };\n  }, [reconnectOnIdle, document.hidden]);\n\n  const shouldReconnect = wasOffline && currentGroupChannel?.url != null && !isTabHidden;\n  return { shouldReconnect };\n}\n\nexport default useReconnectOnIdle;\n", "import { useEffect } from 'react';\n\nimport type { GroupChannel, SendbirdGroupChat } from '@sendbird/chat/groupChannel';\nimport { MessageListParams, ReplyType } from '@sendbird/chat/message';\nimport * as utils from '../utils';\nimport { PREV_RESULT_SIZE, NEXT_RESULT_SIZE } from '../const';\nimport * as messageActionTypes from '../dux/actionTypes';\nimport { Logger } from '../../../../lib/SendbirdState';\nimport { MarkAsReadSchedulerType } from '../../../../lib/hooks/useMarkAsReadScheduler';\nimport useReconnectOnIdle from './useReconnectOnIdle';\n\ninterface DynamicParams {\n  isOnline: boolean;\n  replyType?: string;\n  disableMarkAsRead: boolean;\n  reconnectOnIdle: boolean;\n}\n\ninterface StaticParams {\n  logger: Logger;\n  sdk: SendbirdGroupChat;\n  currentGroupChannel: GroupChannel;\n  scrollRef: React.RefObject<HTMLDivElement>;\n  markAsReadScheduler: MarkAsReadSchedulerType;\n  messagesDispatcher: (props: { type: string, payload: any }) => void;\n  userFilledMessageListQuery?: Record<string, any>;\n}\n\nfunction useHandleReconnect(\n  { isOnline, replyType, disableMarkAsRead, reconnectOnIdle }: DynamicParams,\n  {\n    logger,\n    sdk,\n    scrollRef,\n    currentGroupChannel,\n    messagesDispatcher,\n    markAsReadScheduler,\n    userFilledMessageListQuery,\n  }: StaticParams,\n): void {\n  const { shouldReconnect } = useReconnectOnIdle(isOnline, currentGroupChannel, reconnectOnIdle);\n\n  useEffect(() => {\n    return () => {\n      // state changed from offline to online AND tab is visible\n      if (shouldReconnect) {\n        logger.info('Refreshing conversation state');\n        const isReactionEnabled = sdk?.appInfo?.useReaction || false;\n\n        const messageListParams: MessageListParams = {\n          prevResultSize: PREV_RESULT_SIZE,\n          isInclusive: true,\n          includeReactions: isReactionEnabled,\n          nextResultSize: NEXT_RESULT_SIZE,\n        };\n        if (replyType && replyType === 'QUOTE_REPLY') {\n          messageListParams.includeThreadInfo = true;\n          messageListParams.includeParentMessageInfo = true;\n          messageListParams.replyType = ReplyType.ONLY_REPLY_TO_CHANNEL;\n        }\n        if (userFilledMessageListQuery) {\n          Object.keys(userFilledMessageListQuery).forEach((key) => {\n            messageListParams[key] = userFilledMessageListQuery[key];\n          });\n        }\n        logger.info('Channel: Fetching messages', { currentGroupChannel, userFilledMessageListQuery });\n        messagesDispatcher({\n          type: messageActionTypes.FETCH_INITIAL_MESSAGES_START,\n          payload: null,\n        });\n\n        sdk?.groupChannel?.getChannel(currentGroupChannel?.url)\n          .then((groupChannel) => {\n            const lastMessageTime = new Date().getTime();\n\n            groupChannel.getMessagesByTimestamp(\n              lastMessageTime,\n              messageListParams,\n            )\n              .then((messages) => {\n                messagesDispatcher({\n                  type: messageActionTypes.FETCH_INITIAL_MESSAGES_SUCCESS,\n                  payload: {\n                    currentGroupChannel,\n                    messages,\n                  },\n                });\n                setTimeout(() => utils.scrollIntoLast(0, scrollRef));\n              })\n              .catch((error) => {\n                logger.error('Channel: Fetching messages failed', error);\n                messagesDispatcher({\n                  type: messageActionTypes.FETCH_INITIAL_MESSAGES_FAILURE,\n                  payload: { currentGroupChannel },\n                });\n              });\n            if (!disableMarkAsRead) {\n              markAsReadScheduler.push(currentGroupChannel);\n            }\n          });\n      }\n    };\n  }, [shouldReconnect, replyType]);\n}\n\nexport default useHandleReconnect;\n", "import { useCallback } from 'react';\nimport { ReplyType, MessageListParams } from '@sendbird/chat/message';\n\nimport * as messageActionTypes from '../dux/actionTypes';\nimport { ReplyType as ReplyTypeInternal } from '../../../../types';\nimport { PREV_RESULT_SIZE } from '../const';\nimport { GroupChannel, SendbirdGroupChat } from '@sendbird/chat/groupChannel';\nimport { CustomUseReducerDispatcher } from '../../../../lib/SendbirdState';\nimport { MessageListParams as MessageListParamsInternal } from '../ChannelProvider';\nimport { LoggerInterface } from '../../../../lib/Logger';\n\ntype UseScrollCallbackOptions = {\n  currentGroupChannel: GroupChannel;\n  oldestMessageTimeStamp: number;\n  userFilledMessageListQuery: MessageListParamsInternal;\n  replyType: ReplyTypeInternal;\n};\n\ntype UseScrollCallbackParams = {\n  hasMorePrev: boolean;\n  logger: LoggerInterface;\n  messagesDispatcher: CustomUseReducerDispatcher;\n  sdk: SendbirdGroupChat;\n};\n\nfunction useScrollCallback(\n  { currentGroupChannel, oldestMessageTimeStamp, userFilledMessageListQuery, replyType }: UseScrollCallbackOptions,\n  { hasMorePrev, logger, messagesDispatcher, sdk }: UseScrollCallbackParams,\n) {\n  return useCallback(() => {\n    if (!hasMorePrev) {\n      return;\n    }\n\n    const messageListParams: MessageListParamsInternal = {\n      prevResultSize: PREV_RESULT_SIZE,\n      isInclusive: true,\n      includeMetaArray: true,\n      includeReactions: sdk?.appInfo?.useReaction ?? false,\n    };\n\n    if (replyType === 'QUOTE_REPLY' || replyType === 'THREAD') {\n      messageListParams.includeThreadInfo = true;\n      messageListParams.includeParentMessageInfo = true;\n      messageListParams.replyType = ReplyType.ONLY_REPLY_TO_CHANNEL;\n    }\n\n    if (userFilledMessageListQuery) {\n      Object.keys(userFilledMessageListQuery).forEach((key) => {\n        messageListParams[key] = userFilledMessageListQuery[key];\n      });\n    }\n\n    logger.info('Channel: Fetching messages', {\n      currentGroupChannel,\n      userFilledMessageListQuery,\n    });\n\n    currentGroupChannel\n      .getMessagesByTimestamp(oldestMessageTimeStamp || new Date().getTime(), messageListParams as MessageListParams)\n      .then((messages) => {\n        messagesDispatcher({\n          type: messageActionTypes.FETCH_PREV_MESSAGES_SUCCESS,\n          payload: { currentGroupChannel, messages },\n        });\n      })\n      .catch(() => {\n        messagesDispatcher({\n          type: messageActionTypes.FETCH_PREV_MESSAGES_FAILURE,\n          payload: { currentGroupChannel },\n        });\n      });\n  }, [currentGroupChannel, oldestMessageTimeStamp, replyType]);\n}\n\nexport default useScrollCallback;\n", "import { useCallback } from 'react';\nimport { ReplyType } from '@sendbird/chat/message';\n\nimport * as messageActionTypes from '../dux/actionTypes';\nimport { NEXT_RESULT_SIZE } from '../const';\n\nfunction useScrollDownCallback({\n  currentGroupChannel,\n  latestMessageTimeStamp,\n  userFilledMessageListQuery,\n  hasMoreNext,\n  replyType,\n}, {\n  logger,\n  messagesDispatcher,\n  sdk,\n}) {\n  return useCallback((cb) => {\n    if (!hasMoreNext) { return; }\n    const { appInfo = {} } = sdk;\n    const isReactionEnabled = appInfo.useReaction || false;\n    const messageListParams = {\n      nextResultSize: NEXT_RESULT_SIZE,\n      isInclusive: true,\n      includeReactions: isReactionEnabled,\n    };\n    messageListParams.includeMetaArray = true;\n    if (replyType && (replyType === 'QUOTE_REPLY' || replyType === 'THREAD')) {\n      messageListParams.includeThreadInfo = true;\n      messageListParams.includeParentMessageInfo = true;\n      messageListParams.replyType = ReplyType.ONLY_REPLY_TO_CHANNEL;\n    }\n    if (userFilledMessageListQuery) {\n      Object.keys(userFilledMessageListQuery).forEach((key) => {\n        messageListParams[key] = userFilledMessageListQuery[key];\n      });\n    }\n    logger.info('Channel: Fetching later messages', { currentGroupChannel, userFilledMessageListQuery });\n\n    currentGroupChannel.getMessagesByTimestamp(\n      latestMessageTimeStamp || new Date().getTime(),\n      messageListParams,\n    )\n      .then((messages) => {\n        messagesDispatcher({\n          type: messageActionTypes.FETCH_NEXT_MESSAGES_SUCCESS,\n          payload: { currentGroupChannel, messages },\n        });\n        cb([messages, null]);\n      })\n      .catch((error) => {\n        logger.error('Channel: Fetching later messages failed', error);\n        messagesDispatcher({\n          type: messageActionTypes.FETCH_NEXT_MESSAGES_FAILURE,\n          payload: { currentGroupChannel },\n        });\n        cb([null, error]);\n      });\n  }, [currentGroupChannel, latestMessageTimeStamp, hasMoreNext, replyType]);\n}\n\nexport default useScrollDownCallback;\n", "import { useCallback } from 'react';\n\nimport * as messageActionTypes from '../dux/actionTypes';\n\nfunction useDeleteMessageCallback({ currentGroupChannel, messagesDispatcher }, { logger }) {\n  return useCallback((message) => {\n    logger.info('Channel | useDeleteMessageCallback: Deleting message', message);\n    const { sendingStatus } = message;\n    return new Promise((resolve, reject) => {\n      logger.info('Channel | useDeleteMessageCallback: Deleting message requestState:', sendingStatus);\n      // Message is only on local\n      if (sendingStatus === 'failed' || sendingStatus === 'pending') {\n        logger.info('Channel | useDeleteMessageCallback: Deleted message from local:', message);\n        messagesDispatcher({\n          type: messageActionTypes.ON_MESSAGE_DELETED_BY_REQ_ID,\n          payload: message.reqId,\n        });\n        resolve(message);\n      } else {\n        logger.info('Channel | useDeleteMessageCallback: Deleting message from remote:', sendingStatus);\n        currentGroupChannel.deleteMessage(message)\n          .then(() => {\n            logger.info('Channel | useDeleteMessageCallback: Deleting message success!', message);\n            messagesDispatcher({\n              type: messageActionTypes.ON_MESSAGE_DELETED,\n              payload: message.messageId,\n            });\n            resolve(message);\n          })\n          .catch((err) => {\n            logger.warning('Channel | useDeleteMessageCallback: Deleting message failed!', err);\n            reject(err);\n          });\n      }\n    });\n  }, [currentGroupChannel, messagesDispatcher]);\n}\n\nexport default useDeleteMessageCallback;\n", "import { useCallback } from 'react';\n\nimport * as messageActionTypes from '../dux/actionTypes';\nimport topics from '../../../../lib/pubSub/topics';\nimport { PublishingModuleType } from '../../../internalInterfaces';\n\nfunction useUpdateMessageCallback({\n  currentGroupChannel,\n  messagesDispatcher,\n  onBeforeUpdateUserMessage,\n  isMentionEnabled,\n}, {\n  logger,\n  pubSub,\n}) {\n  return useCallback((props, callback) => {\n    const {\n      messageId,\n      message,\n      mentionedUsers,\n      mentionTemplate,\n    } = props;\n    const createParamsDefault = () => {\n      const params = {};\n      params.message = message;\n      if (isMentionEnabled && mentionedUsers?.length > 0) {\n        params.mentionedUsers = mentionedUsers;\n      }\n      if (isMentionEnabled && mentionTemplate) {\n        params.mentionedMessageTemplate = mentionTemplate;\n      } else {\n        params.mentionedMessageTemplate = message;\n      }\n      return params;\n    };\n\n    const createCustomPrams = onBeforeUpdateUserMessage\n      && typeof onBeforeUpdateUserMessage === 'function';\n\n    if (createCustomPrams) {\n      logger.info('Channel: creating params using onBeforeUpdateUserMessage', onBeforeUpdateUserMessage);\n    }\n\n    const params = onBeforeUpdateUserMessage\n      ? onBeforeUpdateUserMessage(message)\n      : createParamsDefault(message);\n\n    logger.info('Channel: Updating message!', params);\n    currentGroupChannel.updateUserMessage(messageId, params).then((msg, err) => {\n      if (callback) {\n        callback(err, msg);\n      }\n\n      logger.info('Channel: Updating message success!', msg);\n      messagesDispatcher({\n        type: messageActionTypes.ON_MESSAGE_UPDATED,\n        payload: {\n          channel: currentGroupChannel,\n          message: msg,\n        },\n      });\n      pubSub.publish(\n        topics.UPDATE_USER_MESSAGE,\n        {\n          message: msg,\n          channel: currentGroupChannel,\n          publishingModules: [PublishingModuleType.CHANNEL],\n        },\n      );\n    });\n  }, [currentGroupChannel?.url, messagesDispatcher, onBeforeUpdateUserMessage]);\n}\n\nexport default useUpdateMessageCallback;\n", "import { useCallback } from 'react';\n\nimport * as messageActionTypes from '../dux/actionTypes';\nimport { isMultipleFilesMessage } from '../../../../utils';\n\nfunction useResendMessageCallback({\n  currentGroupChannel,\n  messagesDispatcher,\n}, {\n  logger,\n}) {\n  return useCallback((failedMessage) => {\n    logger.info('Channel: Resending message has started', failedMessage);\n    const { messageType, file } = failedMessage;\n    if (failedMessage?.isResendable) {\n      // Move the logic setting sendingStatus to pending into the reducer\n      // eslint-disable-next-line no-param-reassign\n      failedMessage.requestState = 'pending';\n      // eslint-disable-next-line no-param-reassign\n      failedMessage.sendingStatus = 'pending';\n      messagesDispatcher({\n        type: messageActionTypes.RESEND_MESSAGE_START,\n        payload: failedMessage,\n      });\n\n      // userMessage\n      if (messageType === 'user') {\n        currentGroupChannel.resendUserMessage(failedMessage)\n          .then((message) => {\n            logger.info('Channel: Resending message success!', message);\n            messagesDispatcher({\n              type: messageActionTypes.SEND_MESSAGE_SUCCESS,\n              payload: message,\n            });\n          })\n          .catch((e) => {\n            logger.warning('Channel: Resending message failed!', e);\n            // eslint-disable-next-line no-param-reassign\n            failedMessage.requestState = 'failed';\n            // eslint-disable-next-line no-param-reassign\n            failedMessage.sendingStatus = 'failed';\n            messagesDispatcher({\n              type: messageActionTypes.SEND_MESSAGE_FAILURE,\n              payload: failedMessage,\n            });\n          });\n\n        // eslint-disable-next-line no-param-reassign\n        failedMessage.requestState = 'pending';\n        // eslint-disable-next-line no-param-reassign\n        failedMessage.sendingStatus = 'pending';\n        messagesDispatcher({\n          type: messageActionTypes.RESEND_MESSAGE_START,\n          payload: failedMessage,\n        });\n        return;\n      }\n\n      if (messageType === 'file') {\n        currentGroupChannel\n          .resendFileMessage(failedMessage, file)\n          .then((message) => {\n            logger.info('Channel: Resending file message success!', message);\n            messagesDispatcher({\n              type: messageActionTypes.SEND_MESSAGE_SUCCESS,\n              payload: message,\n            });\n          })\n          .catch((e) => {\n            logger.warning('Channel: Resending file message failed!', e);\n            // eslint-disable-next-line no-param-reassign\n            failedMessage.requestState = 'failed';\n            // eslint-disable-next-line no-param-reassign\n            failedMessage.sendingStatus = 'failed';\n            messagesDispatcher({\n              type: messageActionTypes.SEND_MESSAGE_FAILURE,\n              payload: failedMessage,\n            });\n          });\n\n        // eslint-disable-next-line no-param-reassign\n        failedMessage.requestState = 'pending';\n        // eslint-disable-next-line no-param-reassign\n        failedMessage.sendingStatus = 'pending';\n        messagesDispatcher({\n          type: messageActionTypes.RESEND_MESSAGE_START,\n          payload: failedMessage,\n        });\n      }\n\n      if (isMultipleFilesMessage(failedMessage)) {\n        currentGroupChannel.resendMessage(failedMessage)\n          .onPending((message) => {\n            messagesDispatcher({\n              type: messageActionTypes.RESEND_MESSAGE_START,\n              payload: message,\n            });\n          })\n          // TODO: Handle on file info upload event.\n          .onSucceeded((message) => {\n            logger.info('Channel: Resending multiple files message success!', message);\n            messagesDispatcher({\n              type: messageActionTypes.SEND_MESSAGE_SUCCESS,\n              payload: message,\n            });\n          })\n          .onFailed((e, message) => {\n            logger.warning('Channel: Resending multiple files message failed!', e);\n            messagesDispatcher({\n              type: messageActionTypes.SEND_MESSAGE_FAILURE,\n              payload: message,\n            });\n          });\n      }\n    } else {\n      // to alert user on console\n      // eslint-disable-next-line no-console\n      console.error('Message is not resendable');\n      logger.warning('Message is not resendable', failedMessage);\n    }\n  }, [currentGroupChannel, messagesDispatcher]);\n}\n\nexport default useResendMessageCallback;\n", "import { useRef, useCallback } from 'react';\n\nimport * as messageActionTypes from '../dux/actionTypes';\nimport * as utils from '../utils';\nimport topics from '../../../../lib/pubSub/topics';\nimport { PublishingModuleType } from '../../../internalInterfaces';\n\nexport default function useSendMessageCallback({\n  isMentionEnabled,\n  currentGroupChannel,\n  onBeforeSendUserMessage,\n}, {\n  logger,\n  pubSub,\n  scrollRef,\n  messagesDispatcher,\n}) {\n  const messageInputRef = useRef(null);\n\n  const sendMessage = useCallback(\n    (props) => {\n      const {\n        quoteMessage = null,\n        message,\n        mentionTemplate,\n        // mentionedUserIds,\n        mentionedUsers,\n      } = props;\n      const createParamsDefault = () => {\n        const params = {};\n        params.message = message;\n        // if (isMentionEnabled && mentionedUserIds?.length > 0) {\n        if (isMentionEnabled && mentionedUsers?.length > 0) {\n          // params.mentionedUserIds = mentionedUserIds;\n          params.mentionedUsers = mentionedUsers;\n        }\n        // if (isMentionEnabled && mentionTemplate && mentionedUserIds?.length > 0) {\n        if (isMentionEnabled && mentionTemplate && mentionedUsers?.length > 0) {\n          params.mentionedMessageTemplate = mentionTemplate;\n        }\n        if (quoteMessage) {\n          params.isReplyToChannel = true;\n          params.parentMessageId = quoteMessage.messageId;\n        }\n        return params;\n      };\n\n      const createCustomPrams = onBeforeSendUserMessage\n        && typeof onBeforeSendUserMessage === 'function';\n\n      if (createCustomPrams) {\n        logger.info('Channel: creating params using onBeforeSendUserMessage', onBeforeSendUserMessage);\n      }\n\n      const params = onBeforeSendUserMessage\n        ? onBeforeSendUserMessage(message, quoteMessage)\n        : createParamsDefault();\n\n      logger.info('Channel: Sending message has started', params);\n      currentGroupChannel.sendUserMessage(params)\n        .onPending((pendingMsg) => {\n          pubSub.publish(topics.SEND_MESSAGE_START, {\n            /* pubSub is used instead of messagesDispatcher\n              to avoid redundantly calling `messageActionTypes.SEND_MESSAGE_START` */\n            message: pendingMsg,\n            channel: currentGroupChannel,\n            publishingModules: [PublishingModuleType.CHANNEL],\n          });\n          setTimeout(() => utils.scrollIntoLast(0, scrollRef));\n        })\n        .onFailed((err, msg) => {\n          logger.warning('Channel: Sending message failed!', { message: msg, error: err });\n          messagesDispatcher({\n            type: messageActionTypes.SEND_MESSAGE_FAILURE,\n            payload: msg,\n          });\n        })\n        .onSucceeded((msg) => {\n          logger.info('Channel: Sending message success!', msg);\n          messagesDispatcher({\n            type: messageActionTypes.SEND_MESSAGE_SUCCESS,\n            payload: msg,\n          });\n        });\n    },\n    [currentGroupChannel, onBeforeSendUserMessage],\n  );\n\n  return [messageInputRef, sendMessage];\n}\n", "import { useCallback } from 'react';\n\nimport * as messageActionTypes from '../dux/actionTypes';\nimport * as utils from '../utils';\nimport topics from '../../../../lib/pubSub/topics';\nimport { PublishingModuleType } from '../../../internalInterfaces';\n\nexport default function useSendFileMessageCallback({\n  currentGroupChannel,\n  onBeforeSendFileMessage,\n  imageCompression = {},\n}, {\n  logger,\n  pubSub,\n  scrollRef,\n  messagesDispatcher,\n}) {\n  const sendMessage = useCallback((\n    file,\n    quoteMessage = null,\n  ) => new Promise((resolve, reject) => {\n    const {\n      compressionRate,\n      resizingWidth,\n      resizingHeight,\n    } = imageCompression;\n    const createCustomParams = onBeforeSendFileMessage && typeof onBeforeSendFileMessage === 'function';\n\n    const compressibleFileType = (file.type === 'image/jpg' || file.type === 'image/png' || file.type === 'image/jpeg');\n    const compressibleRatio = (compressionRate > 0) && (compressionRate < 1);\n    // pxToNumber returns null if values are invalid\n    const compressibleDiamensions = utils.pxToNumber(resizingWidth)\n      || utils.pxToNumber(resizingHeight);\n\n    const canCompressImage = compressibleFileType && (compressibleRatio || compressibleDiamensions);\n\n    const createParamsDefault = (file_) => {\n      const params = {};\n      params.file = file_;\n      if (quoteMessage) {\n        params.isReplyToChannel = true;\n        params.parentMessageId = quoteMessage.messageId;\n      }\n      return params;\n    };\n\n    if (canCompressImage) { // Using image compression\n      try {\n        const image = document.createElement('img');\n        image.src = URL.createObjectURL(file);\n        image.onload = () => {\n          URL.revokeObjectURL(image.src);\n          const canvas = document.createElement('canvas');\n          const imageWdith = image.naturalWidth || image.width;\n          const imageHeight = image.naturalHeight || image.height;\n\n          let targetWidth = utils.pxToNumber(resizingWidth) || imageWdith;\n          let targetHeight = utils.pxToNumber(resizingHeight) || imageHeight;\n\n          // In canvas.toBlob(callback, mimeType, qualityArgument)\n          // qualityArgument doesnt work\n          // so in case compressibleDiamensions are not present, we use ratio\n          if (file.type === 'image/png' && !compressibleDiamensions) {\n            targetWidth *= compressionRate;\n            targetHeight *= compressionRate;\n          }\n\n          canvas.width = targetWidth;\n          canvas.height = targetHeight;\n          const context = canvas.getContext('2d');\n          context.drawImage(image, 0, 0, targetWidth, targetHeight);\n          context.canvas.toBlob(\n            (newImageBlob) => {\n              const compressedFile = new File([newImageBlob], file.name, { type: file.type });\n              if (createCustomParams) {\n                logger.info('Channel: Creating params using onBeforeSendFileMessage', onBeforeSendFileMessage);\n              }\n              const params = createCustomParams\n                ? onBeforeSendFileMessage(compressedFile, quoteMessage)\n                : createParamsDefault(compressedFile);\n              logger.info('Channel: Uploading file message start!', params);\n              currentGroupChannel.sendFileMessage(params)\n                .onPending((pendingMessage) => {\n                  pubSub.publish(topics.SEND_MESSAGE_START, {\n                    /* pubSub is used instead of messagesDispatcher\n                        to avoid redundantly calling `messageActionTypes.SEND_MESSAGE_START` */\n                    message: {\n                      ...pendingMessage,\n                      url: URL.createObjectURL(compressedFile),\n                      // pending thumbnail message seems to be failed\n                      requestState: 'pending',\n                    },\n                    channel: currentGroupChannel,\n                    publishingModules: [PublishingModuleType.CHANNEL],\n                  });\n                  setTimeout(() => utils.scrollIntoLast(0, scrollRef), 1000);\n                })\n                .onFailed((err, failedMessage) => {\n                  logger.error('Channel: Sending file message failed!', { failedMessage, err });\n                  // eslint-disable-next-line no-param-reassign\n                  failedMessage.localUrl = URL.createObjectURL(compressedFile);\n                  // eslint-disable-next-line no-param-reassign\n                  failedMessage.file = compressedFile;\n                  messagesDispatcher({\n                    type: messageActionTypes.SEND_MESSAGE_FAILURE,\n                    payload: failedMessage,\n                  });\n                  reject(err);\n                })\n                .onSucceeded((succeededMessage) => {\n                  logger.info('Channel: Sending file message success!', succeededMessage);\n                  messagesDispatcher({\n                    type: messageActionTypes.SEND_MESSAGE_SUCCESS,\n                    payload: succeededMessage,\n                  });\n                  resolve(succeededMessage);\n                });\n            },\n            file.type,\n            compressionRate,\n          );\n        };\n      } catch (error) {\n        logger.error('Channel: Sending file message failed!', error);\n        reject(error);\n      }\n    } else { // Not using image compression\n      if (createCustomParams) {\n        logger.info('Channel: creating params using onBeforeSendFileMessage', onBeforeSendFileMessage);\n      }\n      const params = onBeforeSendFileMessage\n        ? onBeforeSendFileMessage(file, quoteMessage)\n        : createParamsDefault(file);\n      logger.info('Channel: Uploading file message start!', params);\n\n      currentGroupChannel.sendFileMessage(params)\n        .onPending((pendingMsg) => {\n          pubSub.publish(topics.SEND_MESSAGE_START, {\n            /* pubSub is used instead of messagesDispatcher\n                to avoid redundantly calling `messageActionTypes.SEND_MESSAGE_START` */\n            message: {\n              ...pendingMsg,\n              url: URL.createObjectURL(file),\n              // pending thumbnail message seems to be failed\n              requestState: 'pending',\n            },\n            channel: currentGroupChannel,\n            publishingModules: [PublishingModuleType.CHANNEL],\n          });\n          setTimeout(() => utils.scrollIntoLast(0, scrollRef), 1000);\n        })\n        .onFailed((error, message) => {\n          logger.error('Channel: Sending file message failed!', { message, error });\n          // eslint-disable-next-line no-param-reassign\n          message.localUrl = URL.createObjectURL(file);\n          // eslint-disable-next-line no-param-reassign\n          message.file = file;\n          messagesDispatcher({\n            type: messageActionTypes.SEND_MESSAGE_FAILURE,\n            payload: message,\n          });\n          reject(error);\n        })\n        .onSucceeded((message) => {\n          logger.info('Channel: Sending message success!', message);\n          messagesDispatcher({\n            type: messageActionTypes.SEND_MESSAGE_SUCCESS,\n            payload: message,\n          });\n          resolve(message);\n        });\n    }\n  }), [currentGroupChannel, onBeforeSendFileMessage, imageCompression]);\n  return [sendMessage];\n}\n", "import { useCallback } from 'react';\n\nexport default function useToggleReactionCallback({ currentGroupChannel }, { logger }) {\n  return useCallback((message, key, isReacted) => {\n    if (isReacted) {\n      currentGroupChannel.deleteReaction(message, key)\n        .then((res) => {\n          logger.info('Delete reaction success', res);\n        })\n        .catch((err) => {\n          logger.warning('Delete reaction failed', err);\n        });\n      return;\n    }\n    currentGroupChannel.addReaction(message, key)\n      .then((res) => {\n        logger.info('Add reaction success', res);\n      })\n      .catch((err) => {\n        logger.warning('Add reaction failed', err);\n      });\n  }, [currentGroupChannel]);\n}\n", "import type { BaseMessage } from '@sendbird/chat/message';\nimport { useCallback } from 'react';\n\nimport { scrollToRenderedMessage } from '../utils';\nimport { LoggerInterface } from '../../../../lib/Logger';\n\ninterface DynamicParams {\n  setInitialTimeStamp: React.Dispatch<React.SetStateAction<number>>;\n  setAnimatedMessageId: React.Dispatch<React.SetStateAction<number>>;\n  allMessages: BaseMessage[];\n  scrollRef: React.RefObject<HTMLDivElement>;\n}\n\ninterface StaticParams {\n  logger: LoggerInterface;\n}\n\n// To prevent multiple clicks on the message in the channel while scrolling\nfunction deactivateClick(scrollRef: React.RefObject<HTMLDivElement>) {\n  const element = scrollRef.current;\n  const parentNode = element?.parentNode as HTMLDivElement;\n  if (element && parentNode) {\n    element.style.pointerEvents = 'none';\n    parentNode.style.cursor = 'wait';\n  }\n}\n\nfunction activateClick(scrollRef: React.RefObject<HTMLDivElement>) {\n  const element = scrollRef.current;\n  const parentNode = element?.parentNode as HTMLDivElement;\n  if (element && parentNode) {\n    element.style.pointerEvents = 'auto';\n    parentNode.style.cursor = 'auto';\n  }\n}\n\nfunction useScrollToMessage({\n  setInitialTimeStamp,\n  setAnimatedMessageId,\n  allMessages,\n  scrollRef,\n}: DynamicParams,\n{ logger }: StaticParams,\n): (createdAt: number, messageId: number) => void {\n  return useCallback(\n    (createdAt: number, messageId: number) => {\n      const isPresent = allMessages.find((m) => (\n        m.messageId === messageId\n      ));\n      setAnimatedMessageId(null);\n      setTimeout(() => {\n        try {\n          logger.info('Channel: scroll to message - disabling mouse events');\n          deactivateClick(scrollRef);\n          if (isPresent) {\n            logger.info('Channel: scroll to message - message is present');\n            setAnimatedMessageId(messageId);\n            scrollToRenderedMessage(scrollRef, createdAt);\n          } else {\n            logger.info('Channel: scroll to message - fetching older messages');\n            setInitialTimeStamp(null);\n            setInitialTimeStamp(createdAt);\n            setAnimatedMessageId(messageId);\n          }\n        } finally {\n          logger.info('Channel: scroll to message - enabled mouse events');\n          activateClick(scrollRef);\n        }\n      });\n    }, [\n      setInitialTimeStamp,\n      setAnimatedMessageId,\n      allMessages,\n    ],\n  );\n}\n\nexport default useScrollToMessage;\n", "import { useCallback } from 'react';\nimport { GroupChannel } from '@sendbird/chat/groupChannel';\nimport { FileMessageCreateParams, MessageMetaArray } from '@sendbird/chat/message';\n\nimport type { Logger } from '../../../../lib/SendbirdState';\nimport * as messageActionTypes from '../dux/actionTypes';\nimport * as utils from '../utils';\nimport topics from '../../../../lib/pubSub/topics';\nimport {\n  META_ARRAY_MESSAGE_TYPE_KEY,\n  META_ARRAY_MESSAGE_TYPE_VALUE__VOICE,\n  META_ARRAY_VOICE_DURATION_KEY,\n  VOICE_MESSAGE_FILE_NAME,\n  VOICE_MESSAGE_MIME_TYPE,\n} from '../../../../utils/consts';\nimport type { SendableMessageType } from '../../../../utils';\nimport type { Nullable } from '../../../../types';\nimport { PublishingModuleType } from '../../../internalInterfaces';\n\ninterface DynamicParams {\n  currentGroupChannel: Nullable<GroupChannel>;\n  onBeforeSendVoiceMessage?: (file: File, quoteMessage?: SendableMessageType) => FileMessageCreateParams;\n}\ninterface StaticParams {\n  logger: Logger;\n  pubSub: any;\n  scrollRef: React.RefObject<HTMLDivElement>;\n  messagesDispatcher: (props: { type: string, payload: any }) => void;\n}\ntype FuncType = (file: File, duration: number, quoteMessage: SendableMessageType) => void;\n\nexport const useSendVoiceMessageCallback = ({\n  currentGroupChannel,\n  onBeforeSendVoiceMessage,\n}: DynamicParams,\n{\n  logger,\n  pubSub,\n  scrollRef,\n  messagesDispatcher,\n}: StaticParams): Array<FuncType> => {\n  const sendMessage = useCallback((file: File, duration: number, quoteMessage: SendableMessageType) => {\n    if (!currentGroupChannel) {\n      return;\n    }\n    const messageParams: FileMessageCreateParams = (\n      onBeforeSendVoiceMessage\n      && typeof onBeforeSendVoiceMessage === 'function'\n    )\n      ? onBeforeSendVoiceMessage(file, quoteMessage)\n      : {\n        file,\n        fileName: VOICE_MESSAGE_FILE_NAME,\n        mimeType: VOICE_MESSAGE_MIME_TYPE,\n        metaArrays: [\n          new MessageMetaArray({\n            key: META_ARRAY_VOICE_DURATION_KEY,\n            value: [`${duration}`],\n          }),\n          new MessageMetaArray({\n            key: META_ARRAY_MESSAGE_TYPE_KEY,\n            value: [META_ARRAY_MESSAGE_TYPE_VALUE__VOICE],\n          }),\n        ],\n      };\n    if (quoteMessage) {\n      messageParams.isReplyToChannel = true;\n      messageParams.parentMessageId = quoteMessage.messageId;\n    }\n    logger.info('Channel: Start sending voice message', messageParams);\n    currentGroupChannel.sendFileMessage(messageParams)\n      .onPending((pendingMessage) => {\n        pubSub.publish(topics.SEND_MESSAGE_START, {\n          /* pubSub is used instead of messagesDispatcher\n            to avoid redundantly calling `messageActionTypes.SEND_MESSAGE_START` */\n          message: pendingMessage,\n          channel: currentGroupChannel,\n          publishingModules: [PublishingModuleType.CHANNEL],\n        });\n        setTimeout(() => utils.scrollIntoLast(0, scrollRef), 1000);\n      })\n      .onFailed((err, failedMessage) => {\n        logger.error('Channel: Sending voice message failed!', { failedMessage, err });\n        messagesDispatcher({\n          type: messageActionTypes.SEND_MESSAGE_FAILURE,\n          payload: failedMessage,\n        });\n      })\n      .onSucceeded((succeededMessage) => {\n        logger.info('Channel: Sending voice message success!', succeededMessage);\n        messagesDispatcher({\n          type: messageActionTypes.SEND_MESSAGE_SUCCESS,\n          payload: succeededMessage,\n        });\n      });\n  }, [\n    currentGroupChannel,\n    onBeforeSendVoiceMessage,\n  ]);\n  return [sendMessage];\n};\n\nexport default useSendVoiceMessageCallback;\n", "import { RefObject, useEffect } from 'react';\n\nimport { scrollIntoLast } from '../utils';\nimport * as channelActions from '../dux/actionTypes';\nimport { CustomUseReducerDispatcher } from '../../../../lib/SendbirdState';\nimport { PUBSUB_TOPICS } from '../../../../lib/pubSub/topics';\nimport { GroupChannel } from '@sendbird/chat/groupChannel';\nimport { SendableMessageType } from '../../../../utils';\nimport { FileUploadedPayload } from './useSendMultipleFilesMessage';\nimport { PublishingModuleType } from '../../../internalInterfaces';\n\nexport interface UseHandlePubsubEventsParams {\n  channelUrl: string;\n  sdkInit: boolean;\n  pubSub: any;\n  dispatcher: CustomUseReducerDispatcher;\n  scrollRef: RefObject<HTMLElement>;\n}\n\nexport const useHandleChannelPubsubEvents = ({\n  channelUrl,\n  sdkInit,\n  pubSub,\n  dispatcher,\n  scrollRef,\n}: UseHandlePubsubEventsParams): void => {\n  useEffect(() => {\n    const subscriber = new Map();\n    if (pubSub?.subscribe) {\n      subscriber.set(PUBSUB_TOPICS.SEND_USER_MESSAGE, pubSub.subscribe(PUBSUB_TOPICS.SEND_USER_MESSAGE, (props) => {\n        const { channel, message } = props;\n        scrollIntoLast(0, scrollRef);\n        if (channelUrl === channel?.url) {\n          dispatcher({\n            type: channelActions.SEND_MESSAGE_SUCCESS,\n            payload: message,\n          });\n        }\n      }));\n      subscriber.set(PUBSUB_TOPICS.SEND_MESSAGE_START, pubSub.subscribe(PUBSUB_TOPICS.SEND_MESSAGE_START, (props) => {\n        const {\n          channel,\n          message,\n          publishingModules,\n        } = props as { channel: GroupChannel, message: SendableMessageType, publishingModules: PublishingModuleType[] };\n        if (channelUrl === channel?.url\n          && publishingModules.includes(PublishingModuleType.CHANNEL)\n        ) {\n          dispatcher({\n            type: channelActions.SEND_MESSAGE_START,\n            payload: message,\n          });\n        }\n      }));\n      subscriber.set(PUBSUB_TOPICS.ON_FILE_INFO_UPLOADED, pubSub.subscribe(PUBSUB_TOPICS.ON_FILE_INFO_UPLOADED, (props) => {\n        const {\n          response,\n          publishingModules,\n        } = props as { response: FileUploadedPayload, publishingModules: PublishingModuleType[] };\n        if (channelUrl === response.channelUrl && publishingModules.includes(PublishingModuleType.CHANNEL)) {\n          dispatcher({\n            type: channelActions.ON_FILE_INFO_UPLOADED,\n            payload: response,\n          });\n        }\n      }));\n      subscriber.set(PUBSUB_TOPICS.SEND_MESSAGE_FAILED, pubSub.subscribe(PUBSUB_TOPICS.SEND_MESSAGE_FAILED, (props) => {\n        const {\n          channel,\n          message,\n          publishingModules,\n        } = props as { channel: GroupChannel, message: SendableMessageType, publishingModules: PublishingModuleType[] };\n        if (channelUrl === channel?.url\n          && publishingModules.includes(PublishingModuleType.CHANNEL)\n        ) {\n          dispatcher({\n            type: channelActions.SEND_MESSAGE_FAILURE,\n            payload: message,\n          });\n        }\n      }));\n      subscriber.set(PUBSUB_TOPICS.SEND_FILE_MESSAGE, pubSub.subscribe(PUBSUB_TOPICS.SEND_FILE_MESSAGE, (props) => {\n        const { channel, message } = props;\n        scrollIntoLast(0, scrollRef);\n        if (channelUrl === channel?.url) {\n          dispatcher({\n            type: channelActions.SEND_MESSAGE_SUCCESS,\n            payload: message,\n          });\n        }\n      }));\n      subscriber.set(PUBSUB_TOPICS.UPDATE_USER_MESSAGE, pubSub.subscribe(PUBSUB_TOPICS.UPDATE_USER_MESSAGE, (props) => {\n        const { channel, message, fromSelector } = props;\n        if (fromSelector && (channelUrl === channel?.url)) {\n          dispatcher({\n            type: channelActions.ON_MESSAGE_UPDATED,\n            payload: { channel, message },\n          });\n        }\n      }));\n      subscriber.set(PUBSUB_TOPICS.DELETE_MESSAGE, pubSub.subscribe(PUBSUB_TOPICS.DELETE_MESSAGE, (props) => {\n        const { channel, messageId } = props;\n        if (channelUrl === channel?.url) {\n          dispatcher({\n            type: channelActions.ON_MESSAGE_DELETED,\n            payload: messageId,\n          });\n        }\n      }));\n    }\n    return () => {\n      subscriber.forEach((s) => {\n        try {\n          s.remove();\n        } catch {\n          //\n        }\n      });\n    };\n  }, [\n    channelUrl,\n    sdkInit,\n  ]);\n};\n", "import React, {\n  useEffect,\n  useState,\n  useReducer,\n  useRef,\n  useMemo,\n} from 'react';\n\nimport type { GroupChannel, SendbirdGroupChat } from '@sendbird/chat/groupChannel';\nimport type {\n  BaseMessage,\n  FileMessageCreateParams,\n  MultipleFilesMessageCreateParams,\n  UserMessage,\n  UserMessageCreateParams,\n  UserMessageUpdateParams,\n} from '@sendbird/chat/message';\nimport type { EmojiContainer, SendbirdError, User } from '@sendbird/chat';\n\nimport { ReplyType, RenderUserProfileProps, Nullable } from '../../../types';\nimport { UserProfileProvider } from '../../../lib/UserProfileContext';\nimport useSendbirdStateContext from '../../../hooks/useSendbirdStateContext';\nimport { CoreMessageType, SendableMessageType } from '../../../utils';\nimport { ThreadReplySelectType } from './const';\n\nimport * as utils from './utils';\nimport { getIsReactionEnabled } from '../../../utils/getIsReactionEnabled';\n\nimport messagesInitialState from './dux/initialState';\nimport messagesReducer from './dux/reducers';\nimport * as channelActions from './dux/actionTypes';\n\nimport useHandleChannelEvents from './hooks/useHandleChannelEvents';\nimport useGetChannel from './hooks/useGetChannel';\nimport useInitialMessagesFetch from './hooks/useInitialMessagesFetch';\nimport useHandleReconnect from './hooks/useHandleReconnect';\nimport useScrollCallback from './hooks/useScrollCallback';\nimport useScrollDownCallback from './hooks/useScrollDownCallback';\nimport useDeleteMessageCallback from './hooks/useDeleteMessageCallback';\nimport useUpdateMessageCallback from './hooks/useUpdateMessageCallback';\nimport useResendMessageCallback from './hooks/useResendMessageCallback';\nimport useSendMessageCallback from './hooks/useSendMessageCallback';\nimport useSendFileMessageCallback from './hooks/useSendFileMessageCallback';\nimport useToggleReactionCallback from './hooks/useToggleReactionCallback';\nimport useScrollToMessage from './hooks/useScrollToMessage';\nimport { CustomUseReducerDispatcher } from '../../../lib/SendbirdState';\nimport useSendVoiceMessageCallback from './hooks/useSendVoiceMessageCallback';\nimport { getCaseResolvedThreadReplySelectType } from '../../../lib/utils/resolvedReplyType';\nimport { useSendMultipleFilesMessage } from './hooks/useSendMultipleFilesMessage';\nimport { useHandleChannelPubsubEvents } from './hooks/useHandleChannelPubsubEvents';\nimport { PublishingModuleType } from '../../internalInterfaces';\n\nexport type MessageListParams = {\n  // https://sendbird.github.io/core-sdk-javascript/module-model_params_messageListParams-MessageListParams.html\n  replyType?: string,\n  messageType?: string,\n  prevResultSize?: number,\n  nextResultSize?: number,\n  reverse?: boolean,\n  isInclusive?: boolean,\n  includeMetaArray?: boolean,\n  includeReactions?: boolean,\n  includeThreadInfo?: boolean,\n  includeParentMessageInfo?: boolean,\n  showSubchannelMessagesOnly?: boolean,\n  customTypes?: Array<string>,\n  senderUserIds?: Array<string>,\n};\n\nexport type ChannelQueries = {\n  messageListParams?: MessageListParams;\n};\n\nexport type ChannelContextProps = {\n  children?: React.ReactElement;\n  channelUrl: string;\n  isReactionEnabled?: boolean;\n  isMessageGroupingEnabled?: boolean;\n  isMultipleFilesMessageEnabled?: boolean;\n  showSearchIcon?: boolean;\n  animatedMessage?: number | null;\n  highlightedMessage?: number | null;\n  startingPoint?: number | null;\n  onBeforeSendUserMessage?(text: string, quotedMessage?: SendableMessageType): UserMessageCreateParams;\n  onBeforeSendFileMessage?(file: File, quotedMessage?: SendableMessageType): FileMessageCreateParams;\n  onBeforeUpdateUserMessage?(text: string): UserMessageUpdateParams;\n  onBeforeSendVoiceMessage?: (file: File, quotedMessage?: SendableMessageType) => FileMessageCreateParams;\n  onBeforeSendMultipleFilesMessage?: (files: Array<File>, quotedMessage?: SendableMessageType) => MultipleFilesMessageCreateParams;\n  onChatHeaderActionClick?(event: React.MouseEvent<HTMLElement>): void;\n  onSearchClick?(): void;\n  onBackClick?(): void;\n  replyType?: ReplyType;\n  threadReplySelectType?: ThreadReplySelectType;\n  queries?: ChannelQueries;\n  renderUserProfile?: (props: RenderUserProfileProps) => React.ReactElement;\n  filterMessageList?(messages: BaseMessage): boolean;\n  disableUserProfile?: boolean;\n  disableMarkAsRead?: boolean;\n  onReplyInThread?: (props: { message: SendableMessageType }) => void;\n  onQuoteMessageClick?: (props: { message: SendableMessageType }) => void;\n  onMessageAnimated?: () => void;\n  onMessageHighlighted?: () => void;\n  scrollBehavior?: 'smooth' | 'auto';\n  reconnectOnIdle?: boolean;\n};\n\ninterface MessageStoreInterface {\n  allMessages: CoreMessageType[];\n  localMessages: CoreMessageType[];\n  loading: boolean;\n  initialized: boolean;\n  unreadSince: string;\n  isInvalid: boolean;\n  currentGroupChannel: Nullable<GroupChannel>;\n  hasMorePrev: boolean;\n  oldestMessageTimeStamp: number;\n  hasMoreNext: boolean;\n  latestMessageTimeStamp: number;\n  emojiContainer: EmojiContainer;\n  readStatus: any;\n}\n\ninterface SendMessageParams {\n  message: string;\n  quoteMessage?: SendableMessageType;\n  // mentionedUserIds?: Array<string>;\n  mentionedUsers?: Array<User>;\n  mentionTemplate?: string;\n}\n\ninterface UpdateMessageProps {\n  messageId: string | number;\n  message: string;\n  mentionedUsers?: Array<User>;\n  mentionTemplate?: string;\n}\n\ninterface ChannelProviderInterface extends ChannelContextProps, MessageStoreInterface {\n  scrollToMessage?(createdAt: number, messageId: number): void;\n  isScrolled?: boolean;\n  setIsScrolled?: React.Dispatch<React.SetStateAction<boolean>>;\n  messageActionTypes: typeof channelActions;\n  messagesDispatcher: CustomUseReducerDispatcher;\n  quoteMessage: SendableMessageType | null;\n  setQuoteMessage: React.Dispatch<React.SetStateAction<SendableMessageType | null>>;\n  initialTimeStamp: number;\n  setInitialTimeStamp: React.Dispatch<React.SetStateAction<number>>;\n  animatedMessageId: number;\n  highLightedMessageId: number;\n  nicknamesMap: Map<string, string>;\n  emojiAllMap: any;\n  onScrollCallback: () => void;\n  onScrollDownCallback: any;\n  scrollRef: React.MutableRefObject<HTMLDivElement>;\n  setAnimatedMessageId: React.Dispatch<React.SetStateAction<number>>;\n  setHighLightedMessageId: React.Dispatch<React.SetStateAction<number>>;\n  messageInputRef: React.MutableRefObject<HTMLInputElement>,\n  deleteMessage(message: CoreMessageType): Promise<CoreMessageType>,\n  updateMessage(props: UpdateMessageProps, callback?: (err: SendbirdError, message: UserMessage) => void): Promise<CoreMessageType>,\n  resendMessage(failedMessage: SendableMessageType): Promise<SendableMessageType>,\n  // TODO: Good to change interface to using params / This part need refactoring\n  sendMessage: (props: SendMessageParams) => void,\n  sendFileMessage: (file: File, quoteMessage?: SendableMessageType) => void,\n  sendVoiceMessage: (file: File, duration: number, quoteMessage?: SendableMessageType) => void,\n  sendMultipleFilesMessage: (files: Array<File>, quoteMessage?: SendableMessageType) => void,\n  // sendMessage(messageParams: SendBird.UserMessageParams): Promise<SendBird.UserMessage>,\n  // sendFileMessage(messageParams: SendBird.FileMessageParams): Promise<SendBird.FileMessage>,\n  toggleReaction(message: SendableMessageType, emojiKey: string, isReacted: boolean): void,\n  renderUserMentionItem?: (props: { user: User }) => JSX.Element;\n}\n\nconst ChannelContext = React.createContext<ChannelProviderInterface | null>(undefined);\n\nconst ChannelProvider: React.FC<ChannelContextProps> = (props: ChannelContextProps) => {\n  const {\n    channelUrl,\n    children,\n    isReactionEnabled,\n    isMessageGroupingEnabled = true,\n    isMultipleFilesMessageEnabled,\n    showSearchIcon,\n    animatedMessage,\n    highlightedMessage,\n    startingPoint,\n    onBeforeSendUserMessage,\n    onBeforeSendFileMessage,\n    onBeforeUpdateUserMessage,\n    onBeforeSendVoiceMessage,\n    onBeforeSendMultipleFilesMessage,\n    onChatHeaderActionClick,\n    onSearchClick,\n    onBackClick,\n    replyType: channelReplyType,\n    threadReplySelectType,\n    queries,\n    filterMessageList,\n    disableMarkAsRead = false,\n    onReplyInThread,\n    onQuoteMessageClick,\n    onMessageAnimated,\n    onMessageHighlighted,\n    scrollBehavior = 'auto',\n    reconnectOnIdle = true,\n  } = props;\n\n  const globalStore = useSendbirdStateContext();\n  const { config } = globalStore;\n  const replyType = channelReplyType ?? config.replyType;\n  const {\n    pubSub,\n    logger,\n    userId,\n    isOnline,\n    imageCompression,\n    isMentionEnabled,\n    isVoiceMessageEnabled,\n    onUserProfileMessage,\n    markAsReadScheduler,\n    groupChannel,\n  } = config;\n  const sdk = globalStore?.stores?.sdkStore?.sdk as SendbirdGroupChat;\n  const sdkInit = globalStore?.stores?.sdkStore?.initialized;\n  const globalConfigs = globalStore?.config;\n\n  const [initialTimeStamp, setInitialTimeStamp] = useState(startingPoint);\n  useEffect(() => {\n    setInitialTimeStamp(startingPoint);\n  }, [startingPoint, channelUrl]);\n  const [animatedMessageId, setAnimatedMessageId] = useState(0);\n  const [highLightedMessageId, setHighLightedMessageId] = useState(highlightedMessage);\n  useEffect(() => {\n    setHighLightedMessageId(highlightedMessage);\n  }, [highlightedMessage]);\n  const userFilledMessageListQuery = queries?.messageListParams;\n  const [quoteMessage, setQuoteMessage] = useState<SendableMessageType>(null);\n  const [isScrolled, setIsScrolled] = useState(false);\n\n  const [messagesStore, messagesDispatcher] = useReducer(\n    messagesReducer,\n    messagesInitialState,\n  ) as [MessageStoreInterface, CustomUseReducerDispatcher];\n  const scrollRef = useRef(null);\n\n  const {\n    allMessages,\n    localMessages,\n    loading,\n    initialized,\n    unreadSince,\n    isInvalid,\n    currentGroupChannel,\n    hasMorePrev,\n    oldestMessageTimeStamp,\n    hasMoreNext,\n    latestMessageTimeStamp,\n    emojiContainer,\n    readStatus,\n  } = messagesStore;\n\n  const isSuper = currentGroupChannel?.isSuper || false;\n  const isBroadcast = currentGroupChannel?.isBroadcast || false;\n  const usingReaction = getIsReactionEnabled({\n    isBroadcast,\n    isSuper,\n    globalLevel: config?.isReactionEnabled,\n    moduleLevel: isReactionEnabled,\n  });\n\n  const emojiAllMap = useMemo(() => (\n    usingReaction\n      ? utils.getAllEmojisMapFromEmojiContainer(emojiContainer)\n      : new Map()\n  ), [emojiContainer]);\n  const nicknamesMap: Map<string, string> = useMemo(() => (\n    (usingReaction && currentGroupChannel)\n      ? utils.getNicknamesMapFromMembers(currentGroupChannel?.members)\n      : new Map()\n  ), [currentGroupChannel?.members]);\n\n  // Animate message\n  useEffect(() => {\n    if (animatedMessage) {\n      setAnimatedMessageId(animatedMessage);\n    }\n  }, [animatedMessage]);\n\n  // Scrollup is default scroll for channel\n  const onScrollCallback = useScrollCallback({\n    currentGroupChannel,\n    oldestMessageTimeStamp,\n    userFilledMessageListQuery,\n    replyType,\n  }, {\n    hasMorePrev,\n    logger,\n    messagesDispatcher,\n    sdk,\n  });\n\n  const scrollToMessage = useScrollToMessage({\n    setInitialTimeStamp,\n    setAnimatedMessageId,\n    allMessages,\n    scrollRef,\n  }, { logger });\n\n  // onScrollDownCallback is added for navigation to different timestamps on messageSearch\n  // hasMorePrev, onScrollCallback -> scroll up(default behavior)\n  // hasMoreNext, onScrollDownCallback -> scroll down\n  const onScrollDownCallback = useScrollDownCallback({\n    currentGroupChannel,\n    latestMessageTimeStamp,\n    userFilledMessageListQuery,\n    hasMoreNext,\n    replyType,\n    isVoiceMessageEnabled,\n  }, {\n    logger,\n    messagesDispatcher,\n    sdk,\n  });\n\n  const toggleReaction = useToggleReactionCallback({ currentGroupChannel }, { logger });\n\n  // to create message-datasource\n  // this hook sets currentGroupChannel asynchronously\n  useGetChannel(\n    { channelUrl, sdkInit, disableMarkAsRead },\n    { messagesDispatcher, sdk, logger, markAsReadScheduler },\n  );\n\n  // to set quote message as null\n  useEffect(() => {\n    setQuoteMessage(null);\n  }, [channelUrl]);\n\n  // Hook to handle ChannelEvents and send values to useReducer using messagesDispatcher\n  useHandleChannelEvents(\n    {\n      currentGroupChannel,\n      sdkInit,\n      currentUserId: userId,\n      disableMarkAsRead,\n    },\n    {\n      messagesDispatcher,\n      sdk,\n      logger,\n      scrollRef,\n      setQuoteMessage,\n    },\n  );\n\n  // hook that fetches messages when channel changes\n  // to be clear here useGetChannel sets currentGroupChannel\n  // and useInitialMessagesFetch executes when currentGroupChannel changes\n  // p.s This one executes on initialTimeStamp change too\n  useInitialMessagesFetch({\n    currentGroupChannel,\n    userFilledMessageListQuery,\n    initialTimeStamp,\n    replyType,\n    setIsScrolled,\n  }, {\n    logger,\n    scrollRef,\n    messagesDispatcher,\n  });\n\n  // handles API calls from withSendbird\n  useHandleChannelPubsubEvents({\n    channelUrl,\n    sdkInit,\n    pubSub,\n    dispatcher: messagesDispatcher,\n    scrollRef,\n  });\n\n  // handling connection breaks\n  useHandleReconnect({ isOnline, replyType, disableMarkAsRead, reconnectOnIdle }, {\n    logger,\n    sdk,\n    scrollRef,\n    currentGroupChannel,\n    messagesDispatcher,\n    userFilledMessageListQuery,\n    markAsReadScheduler,\n  });\n\n  // callbacks for Message CURD actions\n  const deleteMessage = useDeleteMessageCallback({ currentGroupChannel, messagesDispatcher },\n    { logger });\n  const updateMessage = useUpdateMessageCallback(\n    { currentGroupChannel, messagesDispatcher, onBeforeUpdateUserMessage, isMentionEnabled },\n    { logger, pubSub },\n  );\n  const resendMessage = useResendMessageCallback(\n    { currentGroupChannel, messagesDispatcher },\n    { logger },\n  );\n  const [messageInputRef, sendMessage] = useSendMessageCallback(\n    {\n      currentGroupChannel,\n      isMentionEnabled,\n      onBeforeSendUserMessage,\n    },\n    {\n      logger,\n      pubSub,\n      scrollRef,\n      messagesDispatcher,\n    },\n  );\n  const [sendFileMessage] = useSendFileMessageCallback(\n    {\n      currentGroupChannel,\n      imageCompression,\n      onBeforeSendFileMessage,\n    },\n    {\n      logger,\n      pubSub,\n      scrollRef,\n      messagesDispatcher,\n    },\n  );\n  const [sendVoiceMessage] = useSendVoiceMessageCallback(\n    {\n      currentGroupChannel,\n      onBeforeSendVoiceMessage,\n    },\n    {\n      logger,\n      pubSub,\n      scrollRef,\n      messagesDispatcher,\n    },\n  );\n  const [sendMultipleFilesMessage] = useSendMultipleFilesMessage({\n    currentChannel: currentGroupChannel,\n    onBeforeSendMultipleFilesMessage,\n    publishingModules: [PublishingModuleType.CHANNEL],\n  }, {\n    logger,\n    pubSub,\n    scrollRef,\n  });\n\n  return (\n    <ChannelContext.Provider value={{\n      // props\n      channelUrl,\n      isReactionEnabled: usingReaction,\n      isMessageGroupingEnabled,\n      isMultipleFilesMessageEnabled,\n      showSearchIcon: showSearchIcon ?? globalConfigs.showSearchIcon,\n      highlightedMessage,\n      startingPoint,\n      onBeforeSendUserMessage,\n      onBeforeSendFileMessage,\n      onBeforeUpdateUserMessage,\n      onChatHeaderActionClick,\n      onSearchClick,\n      onBackClick,\n      replyType,\n      threadReplySelectType: threadReplySelectType\n        ?? getCaseResolvedThreadReplySelectType(groupChannel.threadReplySelectType).upperCase\n        ?? ThreadReplySelectType.THREAD,\n      queries,\n      filterMessageList,\n      disableMarkAsRead,\n      onReplyInThread,\n      onQuoteMessageClick,\n      onMessageAnimated,\n      onMessageHighlighted,\n\n      // messagesStore\n      allMessages,\n      localMessages,\n      loading,\n      initialized,\n      unreadSince,\n      isInvalid,\n      currentGroupChannel,\n      hasMorePrev,\n      hasMoreNext,\n      oldestMessageTimeStamp,\n      latestMessageTimeStamp,\n      emojiContainer,\n      readStatus,\n\n      // utils\n      scrollToMessage,\n      quoteMessage,\n      setQuoteMessage,\n      deleteMessage,\n      updateMessage,\n      resendMessage,\n      messageInputRef,\n      sendMessage,\n      sendFileMessage,\n      sendVoiceMessage,\n      sendMultipleFilesMessage,\n      initialTimeStamp,\n      messageActionTypes: channelActions,\n      messagesDispatcher,\n      setInitialTimeStamp,\n      setAnimatedMessageId,\n      setHighLightedMessageId,\n      animatedMessageId,\n      highLightedMessageId,\n      nicknamesMap,\n      emojiAllMap,\n      onScrollCallback,\n      onScrollDownCallback,\n      scrollRef,\n      scrollBehavior,\n      toggleReaction,\n      isScrolled,\n      setIsScrolled,\n    }}>\n      <UserProfileProvider\n        disableUserProfile={props?.disableUserProfile ?? config?.disableUserProfile}\n        renderUserProfile={props?.renderUserProfile}\n        onUserProfileMessage={onUserProfileMessage}\n      >\n        {children}\n      </UserProfileProvider>\n    </ChannelContext.Provider>\n  );\n};\n\nexport type UseChannelType = () => ChannelProviderInterface;\nconst useChannelContext: UseChannelType = () => React.useContext(ChannelContext);\n\nexport {\n  ChannelProvider,\n  useChannelContext,\n};\n", "import React, { useEffect, useState, useContext } from 'react';\nimport {\n  GroupChannelHandler,\n  Member,\n  SendbirdGroupChat,\n} from '@sendbird/chat/groupChannel';\n\nimport { LocalizationContext } from '../../../lib/LocalizationContext';\nimport { uuidv4 } from '../../../utils/uuid';\nimport Label, { LabelTypography, LabelColors } from '../../../ui/Label';\nimport { useChannelContext } from '../context/ChannelProvider';\nimport useSendbirdStateContext from '../../../hooks/useSendbirdStateContext';\n\nexport interface TypingIndicatorTextProps {\n  members: Member[];\n}\n\nexport const TypingIndicatorText: React.FC<TypingIndicatorTextProps> = ({ members }: TypingIndicatorTextProps) => {\n  const { stringSet } = useContext(LocalizationContext);\n  if (!members || members.length === 0) {\n    return '';\n  }\n\n  if (members && members.length === 1) {\n    return `${members[0].nickname} ${stringSet.TYPING_INDICATOR__IS_TYPING}`;\n  }\n\n  if (members && members.length === 2) {\n    return `${members[0].nickname} ${stringSet.TYPING_INDICATOR__AND} ${members[1].nickname} ${stringSet.TYPING_INDICATOR__ARE_TYPING}`;\n  }\n\n  return stringSet.TYPING_INDICATOR__MULTIPLE_TYPING;\n};\n\nconst TypingIndicator: React.FC = () => {\n  const { channelUrl } = useChannelContext();\n  const globalStore = useSendbirdStateContext();\n  const sb = globalStore?.stores?.sdkStore?.sdk as SendbirdGroupChat;\n  const logger = globalStore?.config?.logger;\n  const [handlerId, setHandlerId] = useState(uuidv4());\n  const [typingMembers, setTypingMembers] = useState<Member[]>([]);\n\n  useEffect(() => {\n    if (sb?.groupChannel?.addGroupChannelHandler) {\n      sb.groupChannel.removeGroupChannelHandler(handlerId);\n      const newHandlerId = uuidv4();\n      const handler = new GroupChannelHandler({\n        onTypingStatusUpdated: (groupChannel) => {\n          // there is a possible warning in here - setState called after unmount\n          logger.info('Channel > Typing Indicator: onTypingStatusUpdated', groupChannel);\n          if (groupChannel.url === channelUrl) {\n            const members = groupChannel.getTypingUsers();\n            setTypingMembers(members);\n          }\n        },\n      });\n      sb.groupChannel.addGroupChannelHandler(newHandlerId, handler);\n      setHandlerId(newHandlerId);\n    }\n\n    return () => {\n      setTypingMembers([]);\n      if (sb?.groupChannel?.removeGroupChannelHandler) {\n        sb.groupChannel.removeGroupChannelHandler(handlerId);\n      }\n    };\n  }, [channelUrl]);\n\n  return (\n    <Label\n      className=\"sendbird-conversation__footer__typing-indicator__text\"\n      type={LabelTypography.CAPTION_2}\n      color={LabelColors.ONBACKGROUND_2}\n    >\n      <TypingIndicatorText members={typingMembers} />\n    </Label>\n  );\n};\n\nexport default TypingIndicator;\n", "// thanks to: https://stackoverflow.com/questions/48048957/react-long-press-event\n/* example:\n  const Component = ({ onClick }) => {\n    const onLongPress = useLongPress({\n      onClick: onClick,\n      onLongPress: () => {\n        alert('longpress');\n      }\n    }, {\n      delay: 500,\n      shouldPreventDefault: true,\n    });\n    return (\n      <button {...onLongPress}>\n        hello\n      </button>\n    )\n  }\n*/\nimport React, {\n  useState,\n  useRef,\n  useCallback,\n} from 'react';\nimport {\n  useMediaQueryContext,\n} from '../lib/MediaQueryContext';\n\nconst DEFAULT_DURATION = 300;\n\nfunction preventDefault(e: Event) {\n  if (!isTouchEvent(e)) {\n    return;\n  }\n\n  if (e.touches.length < 2 && e.preventDefault) {\n    e.preventDefault();\n  }\n}\n\nexport function isTouchEvent(e: Event): e is TouchEvent {\n  return e && 'touches' in e;\n}\n\ninterface PressHandlers<T> {\n  onLongPress: (e: React.MouseEvent<T> | React.TouchEvent<T>) => void;\n  onClick?: (e: React.MouseEvent<T> | React.TouchEvent<T>) => void;\n}\n\ninterface Options {\n  delay?: number;\n  shouldPreventDefault?: boolean;\n  shouldStopPropagation?: boolean;\n}\n\ninterface UseLongPressType<T> {\n  onTouchMove: (e: React.TouchEvent<T>) => void;\n  onMouseDown: (e: React.MouseEvent<T>) => void;\n  onTouchStart: (e: React.TouchEvent<T>) => void;\n  onMouseUp: (e: React.MouseEvent<T>) => void;\n  onMouseLeave: (e: React.MouseEvent<T>) => void;\n  onTouchEnd: (e: React.TouchEvent<T>) => void;\n}\n\nexport default function useLongPress<T>({\n  onLongPress,\n  onClick,\n}: PressHandlers<T>, {\n  delay = DEFAULT_DURATION,\n  shouldPreventDefault = true,\n  shouldStopPropagation = false,\n}: Options = {}): UseLongPressType<T> {\n  const { isMobile } = useMediaQueryContext();\n  const [longPressTriggered, setLongPressTriggered] = useState(false);\n  const [dragTriggered, setDragTriggered] = useState(false);\n  // https://www.typescriptlang.org/docs/handbook/utility-types.html#returntypetype\n  const timeout = useRef<ReturnType<typeof setTimeout>>();\n  const target = useRef<EventTarget>();\n\n  const start = useCallback((e: React.MouseEvent<T> | React.TouchEvent<T>) => {\n    e.persist();\n    const clonedEvent = {\n      ...e,\n    };\n    setDragTriggered(false);\n    if (shouldStopPropagation) {\n      e.stopPropagation();\n    }\n    if (shouldPreventDefault && e.target) {\n      e.target.addEventListener(\n        'touchend',\n        preventDefault,\n        {\n          passive: false,\n        },\n      );\n      target.current = e.target;\n    }\n\n    timeout.current = setTimeout(() => {\n      onLongPress(clonedEvent);\n      setLongPressTriggered(true);\n    }, delay);\n  }, [onLongPress, delay, shouldPreventDefault, shouldStopPropagation, isMobile]);\n\n  const clear = useCallback((\n    e: React.MouseEvent<T> | React.TouchEvent<T>,\n    shouldTriggerClick = true,\n    onDrag = false,\n  ) => {\n    if (onDrag) {\n      setDragTriggered(true);\n    } else {\n      setDragTriggered(false);\n    }\n    if (timeout?.current) {\n      clearTimeout(timeout.current);\n    }\n    if (shouldTriggerClick && !longPressTriggered && !dragTriggered) {\n      onClick?.(e);\n    }\n    setLongPressTriggered(false);\n    if (shouldPreventDefault && target.current) {\n      target.current.removeEventListener('touchend', preventDefault);\n    }\n  }, [shouldPreventDefault, onClick, longPressTriggered, dragTriggered]);\n\n  return {\n    onMouseDown: (e: React.MouseEvent<T>) => start(e),\n    onMouseUp: (e: React.MouseEvent<T>) => clear(e),\n    onMouseLeave: (e: React.MouseEvent<T>) => clear(e, false),\n    onTouchStart: (e: React.TouchEvent<T>) => start(e),\n    // setDragTriggered as true on touchmove, so that next onTouchEnd is ignored\n    // if we dont do it, onClick?.(e) will be triggred, see inside clear()\n    onTouchMove: (e: React.TouchEvent<T>) => clear(e, false, true),\n    onTouchEnd: (e: React.TouchEvent<T>) => clear(e),\n  };\n}\n", "import React, { ReactElement, useContext } from 'react';\n\nimport './index.scss';\nimport { LocalizationContext } from '../../lib/LocalizationContext';\n\nimport Icon, { IconTypes, IconColors } from '../Icon';\nimport Label, { LabelColors, LabelTypography } from '../Label';\nimport Loader from '../Loader';\n\nexport const PlaceHolderTypes = {\n  LOADING: 'LOADING',\n  NO_CHANNELS: 'NO_CHANNELS',\n  NO_MESSAGES: 'NO_MESSAGES',\n  WRONG: 'WRONG',\n  SEARCH_IN: 'SEARCH_IN',\n  SEARCHING: 'SEARCHING',\n  NO_RESULTS: 'NO_RESULTS',\n} as const;\n\nexport interface PlaceHolderProps {\n  className?: string | Array<string>;\n  type: keyof typeof PlaceHolderTypes;\n  iconSize?: string | number;\n  searchInString?: string;\n  retryToConnect?: () => void;\n}\n\nexport default function PlaceHolder({\n  className = '',\n  type,\n  iconSize,\n  searchInString = '',\n  retryToConnect = null,\n}: PlaceHolderProps): ReactElement {\n  const { stringSet } = useContext(LocalizationContext);\n  return (\n    <div\n      className={[\n        ...(Array.isArray(className) ? className : [className]),\n        'sendbird-place-holder',\n      ].join(' ')}\n    >\n      {\n        type === PlaceHolderTypes.LOADING && (\n          <Loader\n            width={iconSize || '48px'}\n            height={iconSize || '48px'}\n          >\n            <Icon\n              type={IconTypes.SPINNER}\n              fillColor={IconColors.PRIMARY}\n              width={iconSize || '48px'}\n              height={iconSize || '48px'}\n            />\n          </Loader>\n        )\n      }\n      {\n        (\n          type === PlaceHolderTypes.NO_CHANNELS\n          || type === PlaceHolderTypes.NO_MESSAGES\n          || type === PlaceHolderTypes.WRONG\n        ) && (\n          <div className=\"sendbird-place-holder__body\">\n            {\n              type === PlaceHolderTypes.NO_CHANNELS && (\n                <Icon\n                  className=\"sendbird-place-holder__body__icon\"\n                  type={IconTypes.CHAT}\n                  fillColor={IconColors.ON_BACKGROUND_3}\n                  width={iconSize || '64px'}\n                  height={iconSize || '64px'}\n                />\n              )\n            }\n            {\n              type === PlaceHolderTypes.WRONG && (\n                <Icon\n                  className=\"sendbird-place-holder__body__icon\"\n                  type={IconTypes.ERROR}\n                  fillColor={IconColors.ON_BACKGROUND_3}\n                  width={iconSize || '64px'}\n                  height={iconSize || '64px'}\n                />\n              )\n            }\n            {\n              type === PlaceHolderTypes.NO_MESSAGES && (\n                <Icon\n                  className=\"sendbird-place-holder__body__icon\"\n                  type={IconTypes.MESSAGE}\n                  fillColor={IconColors.ON_BACKGROUND_3}\n                  width={iconSize || '64px'}\n                  height={iconSize || '64px'}\n                />\n              )\n            }\n            <Label\n              className=\"sendbird-place-holder__body__text\"\n              type={LabelTypography.BODY_1}\n              color={LabelColors.ONBACKGROUND_2}\n            >\n              {\n                type === PlaceHolderTypes.NO_CHANNELS && (\n                  stringSet.PLACE_HOLDER__NO_CHANNEL\n                )\n              }\n              {\n                type === PlaceHolderTypes.WRONG && (\n                  stringSet.PLACE_HOLDER__WRONG\n                )\n              }\n              {\n                type === PlaceHolderTypes.NO_MESSAGES && (\n                  stringSet.PLACE_HOLDER__NO_MESSAGES\n                )\n              }\n            </Label>\n            {\n              retryToConnect && (\n                <div\n                  className=\"sendbird-place-holder__body__reconnect\"\n                  role=\"button\"\n                  onClick={retryToConnect}\n                  onKeyPress={retryToConnect}\n                  tabIndex={0}\n                >\n                  <Icon\n                    className=\"sendbird-place-holder__body__reconnect__icon\"\n                    type={IconTypes.REFRESH}\n                    fillColor={IconColors.PRIMARY}\n                    width=\"20px\"\n                    height=\"20px\"\n                  />\n                  <Label\n                    className=\"sendbird-place-holder__body__reconnect__text\"\n                    type={LabelTypography.BUTTON_1}\n                    color={LabelColors.PRIMARY}\n                  >\n                    {stringSet.PLACE_HOLDER__RETRY_TO_CONNECT}\n                  </Label>\n                </div>\n              )\n            }\n          </div>\n        )\n      }\n      {\n        (\n          type === PlaceHolderTypes.NO_RESULTS\n          || type === PlaceHolderTypes.SEARCH_IN\n          || type === PlaceHolderTypes.SEARCHING\n        ) && (\n          <div className=\"sendbird-place-holder__body--align-top\">\n            {\n              type === PlaceHolderTypes.SEARCH_IN && (\n                <div className=\"sendbird-place-holder__body--align-top__text\">\n                  <Label\n                    className=\"sendbird-place-holder__body--align-top__text__search-in\"\n                    type={LabelTypography.BUTTON_2}\n                    color={LabelColors.ONBACKGROUND_2}\n                  >\n                    {stringSet.SEARCH_IN}\n                  </Label>\n                  <Label\n                    className=\"sendbird-place-holder__body--align-top__text__channel-name\"\n                    type={LabelTypography.BUTTON_2}\n                    color={LabelColors.PRIMARY}\n                  >\n                    {`'${searchInString}`}\n                  </Label>\n                  <Label\n                    className=\"sendbird-place-holder__body--align-top__text__quote\"\n                    type={LabelTypography.BUTTON_2}\n                    color={LabelColors.PRIMARY}\n                  >\n                    {'\\''}\n                  </Label>\n                </div>\n              )\n            }\n            {\n              type === PlaceHolderTypes.SEARCHING && (\n                <Label\n                  className=\"sendbird-place-hlder__body--align-top__searching\"\n                  type={LabelTypography.BODY_1}\n                  color={LabelColors.ONBACKGROUND_2}\n                >\n                  {stringSet.SEARCHING}\n                </Label>\n              )\n            }\n            {\n              type === PlaceHolderTypes.NO_RESULTS && (\n                <Label\n                  className=\"sendbird-place-hlder__body--align-top__no-result\"\n                  type={LabelTypography.BODY_1}\n                  color={LabelColors.ONBACKGROUND_2}\n                >\n                  {stringSet.NO_SEARCHED_MESSAGE}\n                </Label>\n              )\n            }\n          </div>\n        )\n      }\n    </div>\n  );\n}\n"],
  "mappings": "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",
  "names": ["PUBSUB_TOPICS", "USER_UPDATED", "SEND_MESSAGE_START", "SEND_MESSAGE_FAILED", "SEND_USER_MESSAGE", "SEND_FILE_MESSAGE", "ON_FILE_INFO_UPLOADED", "UPDATE_USER_MESSAGE", "DELETE_MESSAGE", "LEAVE_CHANNEL", "CREATE_CHANNEL", "UPDATE_OPEN_CHANNEL", "UserProfileContext", "React", "createContext", "disableUserProfile", "isOpenChannel", "renderUserProfile", "onUserProfileMessage", "UserProfileProvider", "_a", "_b", "_c", "_d", "_e", "children", "createElement", "Provider", "value", "value", "concat", "getDynamicMinLengthInPx", "sideLength", "maxSideLength", "defaultMinLength", "_a", "numberToPx", "useDynamicSideLength", "width", "height", "dynamicMinWidth", "useMemo", "dynamicMinHeight", "getBorderRadiusForImageRenderer", "circle", "borderRadius", "getBorderRadiusForMultipleImageRenderer", "index", "totalCount", "parseInt", "lastIndex", "topLeft", "topRight", "bottomRight", "bottomLeft", "ImageRenderer", "_b", "className", "url", "_c", "alt", "_d", "_e", "_f", "_g", "_h", "fixedSize", "_j", "placeHolder", "_k", "defaultComponent", "_l", "_m", "onLoad", "_o", "onError", "shadeOnHover", "_p", "isUploaded", "_q", "useState", "showDefaultComponent", "setShowDefaultComponent", "_r", "showPlaceHolder", "setShowPlaceHolder", "_s", "DefaultComponent", "PlaceHolder", "style", "minWidth", "maxWidth", "position", "display", "justifyContent", "alignItems", "HiddenImageLoader", "React", "createElement", "src", "__spreadArray", "Array", "isArray", "join", "backgroundRepeat", "backgroundPosition", "backgroundSize", "backgroundImage", "px", "parsed", "Number", "parseFloat", "isNaN", "imageRendererClassName", "DefaultComponent", "_a", "width", "height", "iconWidth", "pxToNumber", "iconHeight", "React", "createElement", "className", "style", "Icon", "type", "IconTypes", "USER", "fillColor", "IconColors", "CONTENT", "_defaultComponent", "AvatarInner", "_b", "src", "_c", "alt", "customDefaultComponent", "defaultComponent", "ImageRenderer", "url", "length", "Fragment", "slice", "map", "i", "key", "uuidv4", "Avatar", "ref", "_d", "_e", "_f", "onClick", "__spreadArray", "Array", "isArray", "join", "role", "onKeyDown", "tabIndex", "forwardRef", "getSdk", "state", "_a", "stores", "_b", "sdkStore", "sdk", "getPubSub", "config", "pubSub", "getCreateGroupChannel", "state", "params", "Promise", "resolve", "reject", "sdk", "getSdk", "pubSub", "getPubSub", "Error", "groupChannel", "createChannel", "then", "channel", "publish", "topics", "CREATE_CHANNEL", "catch", "UikitMessageHandler", "_onPending", "noop", "_onFailed", "_onSucceeded", "prototype", "triggerPending", "message", "triggerFailed", "error", "isResendable", "triggerSucceeded", "onPending", "handler", "onFailed", "onSucceeded", "MutedAvatarOverlay", "props", "_a", "height", "_b", "width", "React", "createElement", "className", "style", "concat", "Icon", "type", "IconTypes", "MUTE", "fillColor", "IconColors", "WHITE", "Checkbox", "_a", "id", "_b", "checked", "disabled", "onChange", "_c", "useState", "isChecked", "setIsCheck", "React", "createElement", "className", "join", "htmlFor", "type", "onClick", "UserProfile", "_a", "user", "currentUserId", "_d", "disableMessaging", "onSuccess", "store", "useSendbirdStateContext", "createChannel", "getCreateGroupChannel", "logger", "_b", "config", "stringSet", "useContext", "LocalizationContext", "currentUserId_", "_c", "userId", "onUserProfileMessage", "UserProfileContext", "React", "createElement", "className", "Avatar", "height", "width", "src", "profileUrl", "Label", "type", "LabelTypography", "H_2", "color", "LabelColors", "ONBACKGROUND_1", "nickname", "NO_NAME", "Button", "ButtonTypes", "SECONDARY", "onClick", "params", "isDistinct", "invitedUserIds", "operatorUserIds", "then", "groupChannel", "info", "USER_PROFILE__MESSAGE", "CAPTION_2", "ONBACKGROUND_2", "USER_PROFILE__USER_ID", "BODY_1", "componentClassName", "SortByRow", "_a", "_b", "className", "maxItemCount", "itemWidth", "itemHeight", "children", "Array", "isArray", "length", "result", "i", "push", "React", "createElement", "__spreadArray", "join", "key", "uuidv4", "style", "width", "height", "slice", "Fragment", "HEIGHT_PADDING", "MenuItems", "_super", "__extends", "props", "_this", "call", "menuRef", "React", "createRef", "setupEvents", "closeDropdown", "handleClickOutside", "event", "current", "_b", "_a", "contains", "target", "setState", "document", "addEventListener", "cleanUpEvents", "state", "removeEventListener", "getMenuPosition", "_c", "parentRef", "openLeft", "parentRect", "getBoundingClientRect", "x", "left", "y", "top", "menuStyle", "innerWidth", "window", "innerHeight", "rect", "height", "width", "padding", "Number", "isNaN", "prototype", "componentDidMount", "componentWillUnmount", "render", "children", "style", "className", "createPortal", "createElement", "concat", "ref", "__assign", "display", "position", "Math", "round", "getElementById", "Component", "defaultParentRect", "EmojiListItems", "parentContainRef", "spaceFromTrigger", "useState", "reactionStyle", "setReactionStyle", "reactionRef", "useRef", "useEffect", "classList", "add", "remove", "handleClickOutSide", "spaceFromTriggerX", "spaceFromTriggerY", "maximumLeft", "rootElement", "Fragment", "SortByRow", "maxItemCount", "itemWidth", "itemHeight", "ENTER_KEY", "_MenuItems", "_EmojiListItems", "MenuItem", "onClick", "disable", "_d", "dataSbId", "handleClickEvent", "e", "getClassName", "role", "onKeyPress", "keyCode", "tabIndex", "Label", "type", "LabelTypography", "SUBTITLE_2", "color", "LabelColors", "ONBACKGROUND_4", "ONBACKGROUND_1", "ContextMenu", "_a", "menuTrigger", "menuItems", "isOpen", "onClick", "_b", "useState", "showMenu", "setShowMenu", "React", "createElement", "className", "style", "display", "UserListItem", "_a", "user", "className", "checked", "checkBox", "isOperator", "disabled", "disableMessaging", "currentUser", "action", "onChange", "_b", "avatarSize", "onClick", "uniqueKey", "userId", "actionRef", "React", "useRef", "parentRef", "avatarRef", "_c", "useContext", "UserProfileContext", "disableUserProfile", "renderUserProfile", "stringSet", "LocalizationContext", "createElement", "__spreadArray", "Array", "isArray", "join", "ref", "isMuted", "MutedAvatarOverlay", "height", "width", "ContextMenu", "menuTrigger", "toggleDropdown", "Avatar", "src", "profileUrl", "menuItems", "closeDropdown", "MenuItems", "openLeft", "parentContainRef", "style", "paddingTop", "paddingBottom", "currentUserId", "close", "UserProfile", "onSuccess", "Label", "type", "LabelTypography", "SUBTITLE_1", "color", "LabelColors", "ONBACKGROUND_1", "nickname", "NO_NAME", "CAPTION_3", "ONBACKGROUND_2", "htmlFor", "Checkbox", "id", "event", "SUBTITLE_2", "DEFAULT_URL_PREFIX", "getChannelAvatarSource", "channel", "currentUserId", "coverUrl", "RegExp", "DEFAULT_URL_PREFIX", "test", "members", "filter", "member", "userId", "map", "_a", "profileUrl", "generateDefaultAvatar", "concat", "ChannelAvatar", "_a", "channel", "userId", "theme", "_b", "width", "_c", "height", "isBroadcast", "memoizedAvatar", "useMemo", "utils", "React", "createElement", "className", "style", "display", "justifyContent", "alignItems", "Icon", "type", "IconTypes", "BROADCAST", "fillColor", "IconColors", "CONTENT", "Avatar", "src", "alt", "name", "concat", "members", "coverUrl", "Fragment", "o", "MILLISECONDS_IN_WEEK", "defaultOptions", "formatters", "S", "y", "lightFormatters", "M", "d", "a", "h", "H", "K", "m", "s", "dateLongFormatter", "timeLongFormatter", "dateTimeLongFormatter", "format", "longFormatters", "Loader", "_a", "_b", "className", "_c", "width", "_d", "height", "children", "React", "createElement", "__spreadArray", "Array", "isArray", "join", "style", "concat", "Icon", "type", "IconTypes", "SPINNER", "getChannelTitle", "channel", "currentUserId", "stringSet", "LabelStringSet", "name", "members", "NO_TITLE", "_a", "length", "NO_MEMBERS", "filter", "userId", "map", "nickname", "NO_NAME", "join", "getLastMessageCreatedAt", "locale", "_c", "createdAt", "_b", "lastMessage", "optionalParam", "isToday", "format", "isYesterday", "MESSAGE_STATUS__YESTERDAY", "isThisYear", "getTotalMembers", "memberCount", "getChannelPreviewFileDisplayString", "mimeType", "isGif", "CHANNEL_PREVIEW_LAST_MESSAGE_FILE_TYPE_GIF", "isImage", "CHANNEL_PREVIEW_LAST_MESSAGE_FILE_TYPE_PHOTO", "isVideo", "CHANNEL_PREVIEW_LAST_MESSAGE_FILE_TYPE_VIDEO", "isAudio", "_d", "CHANNEL_PREVIEW_LAST_MESSAGE_FILE_TYPE_AUDIO", "isVoiceMessageMimeType", "_e", "CHANNEL_PREVIEW_LAST_MESSAGE_FILE_TYPE_VOICE_MESSAGE", "_f", "CHANNEL_PREVIEW_LAST_MESSAGE_FILE_TYPE_GENERAL", "getPrettyLastMessage", "message", "isFileMessage", "type", "isMultipleFilesMessage", "fileInfoList", "getLastMessage", "getChannelUnreadMessageCount", "unreadMessageCount", "MessageStatus", "_a", "className", "message", "channel", "_e", "isDateSeparatorConsidered", "_f", "useLocalization", "stringSet", "dateLocale", "status", "getOutgoingMessageState", "hideMessageStatusIcon", "_d", "isGroupChannel", "call", "isSuper", "isPublic", "isBroadcast", "OutgoingMessageStates", "PENDING", "FAILED", "iconType", "_b", "SENT", "IconTypes", "DONE", "DELIVERED", "DONE_ALL", "READ", "ERROR", "iconColor", "_c", "IconColors", "React", "createElement", "__spreadArray", "Array", "isArray", "join", "Loader", "width", "height", "Icon", "type", "SPINNER", "fillColor", "PRIMARY", "concat", "isSentStatus", "Label", "LabelTypography", "CAPTION_3", "color", "LabelColors", "ONBACKGROUND_2", "format", "createdAt", "locale", "getLastMessageCreatedAt", "MENTION_USER_LABEL_CLASSNAME", "Colors", "changeColorToClassName", "color", "ONBACKGROUND_1", "ONBACKGROUND_2", "ONBACKGROUND_3", "ONBACKGROUND_4", "ONCONTENT_1", "PRIMARY", "ERROR", "TextButton", "_a", "_b", "className", "_c", "color", "Colors", "ONBACKGROUND_1", "_d", "disabled", "_e", "disableUnderline", "_f", "onClick", "children", "React", "createElement", "__spreadArray", "Array", "isArray", "changeColorToClassName", "join", "role", "tabIndex", "e", "onKeyPress", "PREV_RESULT_SIZE", "NEXT_RESULT_SIZE", "MAX_USER_MENTION_COUNT", "MAX_USER_SUGGESTION_COUNT", "USER_MENTION_TEMP_CHAR", "ThreadReplySelectType", "scrollToRenderedMessage", "scrollRef", "initialTimeStamp", "setIsScrolled", "container", "current", "element", "_a", "querySelectorAll", "concat", "HTMLElement", "containerHeight", "offsetHeight", "elementHeight", "elementOffset", "scrollTop", "offsetTop", "_b", "scrollIntoLast", "initialTry", "MAX_TRIES", "currentTry", "scrollDOM", "document", "querySelector", "scrollHeight", "error", "setTimeout", "isOperator", "groupChannel", "myRole", "isDisabledBecauseFrozen", "isFrozen", "isDisabledBecauseMuted", "myMutedState", "getAllEmojisMapFromEmojiContainer", "emojiContainer", "emojiCategories", "allEmojisMap", "Map", "categoryIndex", "length", "emojis", "emojiIndex", "key", "url", "set", "getNicknamesMapFromMembers", "members", "nicknamesMap", "memberIndex", "userId", "nickname", "getUniqueListBy", "arr", "entries", "map", "item", "Array", "from", "values", "getUniqueListByMessageId", "sortByCreatedAt", "messages", "sort", "a", "b", "createdAt", "mergeAndSortMessages", "oldMessages", "newMessages", "lastOldMessage", "firstNewMessage", "__spreadArray", "mergedMessages", "unique", "getMessageCreatedAt", "message", "format", "isSameGroup", "comparingMessage", "currentChannel", "messageType", "sender", "sendingStatus", "isReadMessage", "passUnsuccessfullMessages", "allMessages", "newMessage", "SendingStatus", "SUCCEEDED", "PENDING", "lastIndexOfSucceededMessage", "isAdminMessage", "lastIndexOf", "splice", "pxToNumber", "px", "parsed", "Number", "parseFloat", "isNaN", "isAboutSame", "Math", "abs", "RESET_MESSAGES", "FETCH_INITIAL_MESSAGES_START", "FETCH_INITIAL_MESSAGES_SUCCESS", "FETCH_INITIAL_MESSAGES_FAILURE", "FETCH_PREV_MESSAGES_SUCCESS", "FETCH_PREV_MESSAGES_FAILURE", "FETCH_NEXT_MESSAGES_SUCCESS", "FETCH_NEXT_MESSAGES_FAILURE", "SEND_MESSAGE_START", "SEND_MESSAGE_SUCCESS", "SEND_MESSAGE_FAILURE", "RESEND_MESSAGE_START", "ON_MESSAGE_RECEIVED", "ON_MESSAGE_UPDATED", "ON_MESSAGE_THREAD_INFO_UPDATED", "ON_MESSAGE_DELETED", "ON_MESSAGE_DELETED_BY_REQ_ID", "SET_CURRENT_CHANNEL", "SET_CHANNEL_INVALID", "MARK_AS_READ", "ON_REACTION_UPDATED", "SET_EMOJI_CONTAINER", "MESSAGE_LIST_PARAMS_CHANGED", "ON_FILE_INFO_UPLOADED", "PublishingModuleType", "scrollIntoLast", "intialTry", "MAX_TRIES", "currentTry", "scrollDOM", "document", "querySelector", "scrollTop", "scrollHeight", "error", "setTimeout", "useSendMultipleFilesMessage", "_a", "_b", "currentChannel", "onBeforeSendMultipleFilesMessage", "publishingModules", "logger", "pubSub", "scrollRef", "sendMessage", "useCallback", "files", "quoteMessage", "Promise", "resolve", "reject", "warning", "length", "messageParams", "fileInfoList", "map", "file", "fileName", "name", "fileSize", "size", "mimeType", "type", "isReplyToChannel", "parentMessageId", "messageId", "info", "sendMultipleFilesMessage", "onFileUploaded", "requestId", "index", "uploadableFileInfo", "publish", "PUBSUB_TOPICS", "ON_FILE_INFO_UPLOADED", "response", "channelUrl", "url", "onPending", "pendingMessage", "SEND_MESSAGE_START", "message", "channel", "includes", "PublishingModuleType", "CHANNEL", "scrollIntoLastForChannel", "THREAD", "scrollIntoLastForThread", "onFailed", "failedMessage", "SEND_MESSAGE_FAILED", "onSucceeded", "succeededMessage", "SEND_FILE_MESSAGE", "isEmpty", "val", "undefined", "compareIds", "a", "b", "aString", "toString", "bString", "getIsReactionEnabled", "_a", "_b", "isBroadcast", "_c", "isSuper", "_d", "globalLevel", "moduleLevel", "initialState", "initialized", "loading", "allMessages", "localMessages", "currentGroupChannel", "hasMorePrev", "oldestMessageTimeStamp", "hasMoreNext", "latestMessageTimeStamp", "emojiContainer", "emojiCategories", "emojiHash", "unreadSince", "isInvalid", "readStatus", "messageListParams", "getOldestMessageTimeStamp", "messages", "oldestMessage", "createdAt", "getLatestMessageTimeStamp", "latestMessage", "length", "hasReqId", "message", "channelReducer", "state", "action", "match", "with", "type", "channelActions", "__assign", "filter", "m", "isSendableMessage", "sendingStatus", "SendingStatus", "SUCCEEDED", "payload", "url", "__spreadArray", "_e", "prevResultSize", "PREV_RESULT_SIZE", "duplicatedMessageIds", "updatedOldMessages", "map", "msg", "duplicatedMessage", "find", "messageId", "compareIds", "push", "updatedAt", "filteredNewMessages", "nextResultSize", "NEXT_RESULT_SIZE", "sortedMessages", "mergeAndSortMessages", "P", "union", "filteredMessages", "reqId", "failed", "channel", "members", "sender", "currentGroupChannelUrl", "some", "filterMessageListParams", "isAdminMessage", "passUnsuccessfullMessages", "senderMember", "userId", "profileUrl", "friendName", "nickname", "member", "format", "Date", "parentMessageId", "parentMessage", "event", "channelUrl", "threadInfo", "targetMessageId", "applyReactionEvent", "requestId", "index", "uploadableFileInfo", "error", "messageToUpdate", "fileInfoList", "messageParams", "Array", "isArray", "otherwise", "DELIVERY_RECIPT", "useHandleChannelEvents", "sdkInit", "currentUserId", "disableMarkAsRead", "sdk", "logger", "scrollRef", "setQuoteMessage", "messagesDispatcher", "store", "useSendbirdStateContext", "_f", "config", "markAsReadScheduler", "markAsDeliveredScheduler", "disableMarkAsDelivered", "canSetMarkAsDelivered", "stores", "sdkStore", "appInfo", "premiumFeatureList", "feature", "useEffect", "channelHandlerId", "uuidv4", "channelHandler", "onMessageReceived", "scrollToEnd", "current", "offsetHeight", "scrollTop", "scrollHeight", "info", "messageActions", "document", "getElementById", "childElementCount", "setTimeout", "scrollIntoLast", "warning", "onUnreadMemberStatusUpdated", "onUndeliveredMemberStatusUpdated", "onMessageUpdated", "onThreadInfoUpdated", "threadInfoUpdateEvent", "onMessageDeleted", "onReactionUpdated", "reactionEvent", "onChannelChanged", "onChannelFrozen", "onChannelUnfrozen", "onUserMuted", "user", "onUserUnmuted", "onUserBanned", "currentUser", "onOperatorUpdated", "users", "onUserLeft", "groupChannel", "addGroupChannelHandler", "GroupChannelHandler", "removeGroupChannelHandler", "useSetChannel", "_ref", "_ref2", "getChannel", "then", "messageActionTypes", "catch", "e", "getAllEmoji", "emojiContainer_", "err", "useInitialMessagesFetch", "initialTimeStamp", "userFilledMessageListQuery", "replyType", "setIsScrolled", "getMessagesByTimestamp", "messageListParams_1", "isInclusive", "includeReactions", "includeMetaArray", "includeThreadInfo", "includeParentMessageInfo", "ReplyType", "ONLY_REPLY_TO_CHANNEL", "Object", "keys", "forEach", "key", "multipleFilesMessageCount_1", "getTime", "isMultipleFilesMessage", "finally", "utils", "Math", "min", "useReconnectOnIdle", "isOnline", "reconnectOnIdle", "useState", "isTabHidden", "setIsTabHidden", "wasOffline", "handleVisibilityChange", "hidden", "addEventListener", "removeEventListener", "shouldReconnect", "useHandleReconnect", "isReactionEnabled", "useReaction", "lastMessageTime", "useScrollCallback", "useCallback", "useScrollDownCallback", "cb", "useDeleteMessageCallback", "Promise", "resolve", "reject", "deleteMessage", "useUpdateMessageCallback", "onBeforeUpdateUserMessage", "isMentionEnabled", "pubSub", "props", "callback", "mentionedUsers", "mentionTemplate", "createParamsDefault", "params", "mentionedMessageTemplate", "createCustomPrams", "updateUserMessage", "publish", "topics", "UPDATE_USER_MESSAGE", "publishingModules", "PublishingModuleType", "CHANNEL", "useResendMessageCallback", "failedMessage", "messageType", "file", "isResendable", "requestState", "resendUserMessage", "resendFileMessage", "resendMessage", "onPending", "onSucceeded", "onFailed", "console", "useSendMessageCallback", "onBeforeSendUserMessage", "messageInputRef", "useRef", "sendMessage", "quoteMessage", "isReplyToChannel", "sendUserMessage", "pendingMsg", "SEND_MESSAGE_START", "useSendFileMessageCallback", "onBeforeSendFileMessage", "imageCompression", "arguments", "undefined", "compressionRate", "resizingWidth", "resizingHeight", "createCustomParams", "compressibleFileType", "compressibleRatio", "compressibleDiamensions", "canCompressImage", "file_", "image", "createElement", "src", "URL", "createObjectURL", "onload", "revokeObjectURL", "canvas", "imageWdith", "naturalWidth", "width", "imageHeight", "naturalHeight", "height", "targetWidth", "targetHeight", "context", "getContext", "drawImage", "toBlob", "newImageBlob", "compressedFile", "File", "name", "sendFileMessage", "pendingMessage", "_objectSpread", "localUrl", "succeededMessage", "useToggleReactionCallback", "isReacted", "deleteReaction", "res", "addReaction", "deactivateClick", "element", "parentNode", "style", "pointerEvents", "cursor", "activateClick", "useScrollToMessage", "setInitialTimeStamp", "setAnimatedMessageId", "isPresent", "scrollToRenderedMessage", "useSendVoiceMessageCallback", "onBeforeSendVoiceMessage", "duration", "fileName", "VOICE_MESSAGE_FILE_NAME", "mimeType", "VOICE_MESSAGE_MIME_TYPE", "metaArrays", "MessageMetaArray", "META_ARRAY_VOICE_DURATION_KEY", "value", "concat", "META_ARRAY_MESSAGE_TYPE_KEY", "META_ARRAY_MESSAGE_TYPE_VALUE__VOICE", "useHandleChannelPubsubEvents", "dispatcher", "subscriber", "Map", "subscribe", "set", "PUBSUB_TOPICS", "SEND_USER_MESSAGE", "includes", "ON_FILE_INFO_UPLOADED", "response", "SEND_MESSAGE_FAILED", "SEND_FILE_MESSAGE", "fromSelector", "DELETE_MESSAGE", "s", "remove", "ChannelContext", "React", "createContext", "ChannelProvider", "children", "_g", "isMessageGroupingEnabled", "isMultipleFilesMessageEnabled", "showSearchIcon", "animatedMessage", "highlightedMessage", "startingPoint", "onBeforeSendMultipleFilesMessage", "onChatHeaderActionClick", "onSearchClick", "onBackClick", "channelReplyType", "threadReplySelectType", "queries", "filterMessageList", "_h", "onReplyInThread", "onQuoteMessageClick", "onMessageAnimated", "onMessageHighlighted", "_j", "scrollBehavior", "_k", "globalStore", "isVoiceMessageEnabled", "onUserProfileMessage", "globalConfigs", "_l", "_m", "animatedMessageId", "_o", "highLightedMessageId", "setHighLightedMessageId", "_p", "_q", "isScrolled", "_r", "useReducer", "messagesReducer", "messagesInitialState", "messagesStore", "usingReaction", "emojiAllMap", "useMemo", "nicknamesMap", "onScrollCallback", "scrollToMessage", "onScrollDownCallback", "toggleReaction", "useGetChannel", "updateMessage", "_s", "sendVoiceMessage", "sendMultipleFilesMessage", "useSendMultipleFilesMessage", "currentChannel", "Provider", "getCaseResolvedThreadReplySelectType", "upperCase", "ThreadReplySelectType", "THREAD", "UserProfileProvider", "disableUserProfile", "renderUserProfile", "useChannelContext", "useContext", "TypingIndicatorText", "_a", "members", "stringSet", "useContext", "LocalizationContext", "length", "concat", "nickname", "TYPING_INDICATOR__IS_TYPING", "TYPING_INDICATOR__AND", "TYPING_INDICATOR__ARE_TYPING", "TYPING_INDICATOR__MULTIPLE_TYPING", "TypingIndicator", "channelUrl", "useChannelContext", "globalStore", "useSendbirdStateContext", "sb", "_b", "stores", "sdkStore", "sdk", "logger", "_c", "config", "_d", "useState", "uuidv4", "handlerId", "setHandlerId", "_e", "typingMembers", "setTypingMembers", "useEffect", "groupChannel", "addGroupChannelHandler", "removeGroupChannelHandler", "newHandlerId", "handler", "GroupChannelHandler", "onTypingStatusUpdated", "info", "url", "getTypingUsers", "React", "createElement", "Label", "className", "type", "LabelTypography", "CAPTION_2", "color", "LabelColors", "ONBACKGROUND_2", "DEFAULT_DURATION", "preventDefault", "e", "isTouchEvent", "touches", "length", "useLongPress", "_a", "_b", "onLongPress", "onClick", "_c", "_d", "delay", "_e", "shouldPreventDefault", "_f", "shouldStopPropagation", "isMobile", "useMediaQueryContext", "_g", "useState", "longPressTriggered", "setLongPressTriggered", "_h", "dragTriggered", "setDragTriggered", "timeout", "useRef", "target", "start", "useCallback", "persist", "clonedEvent", "__assign", "stopPropagation", "addEventListener", "passive", "current", "setTimeout", "clear", "shouldTriggerClick", "onDrag", "clearTimeout", "removeEventListener", "onMouseDown", "onMouseUp", "onMouseLeave", "onTouchStart", "onTouchMove", "onTouchEnd", "PlaceHolderTypes", "LOADING", "NO_CHANNELS", "NO_MESSAGES", "WRONG", "SEARCH_IN", "SEARCHING", "NO_RESULTS", "PlaceHolder", "_a", "_b", "className", "type", "iconSize", "_c", "searchInString", "_d", "retryToConnect", "stringSet", "useContext", "LocalizationContext", "React", "createElement", "__spreadArray", "Array", "isArray", "join", "Loader", "width", "height", "Icon", "IconTypes", "SPINNER", "fillColor", "IconColors", "PRIMARY", "CHAT", "ON_BACKGROUND_3", "ERROR", "MESSAGE", "Label", "LabelTypography", "BODY_1", "color", "LabelColors", "ONBACKGROUND_2", "PLACE_HOLDER__NO_CHANNEL", "PLACE_HOLDER__WRONG", "PLACE_HOLDER__NO_MESSAGES", "role", "onClick", "onKeyPress", "tabIndex", "REFRESH", "BUTTON_1", "PLACE_HOLDER__RETRY_TO_CONNECT", "BUTTON_2", "concat", "NO_SEARCHED_MESSAGE"]
}
